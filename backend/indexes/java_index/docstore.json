{"docstore/metadata": {"d86e17be-5537-4f39-9afd-43ded0c54b86": {"doc_hash": "71ea1715dfe91a2e796b69a4189ad163a5a7b71f1be59601690aaa7ec0ad6094"}, "5e3cb524-0e8d-4bb2-9054-a5c6a8548bcf": {"doc_hash": "ce829eba117680c07342a8a3a0294192bccd76fdc1abbf01048d7159aa46468e"}, "4eb35ebf-fb31-4736-af73-d2c81416eabd": {"doc_hash": "2a4190dcfbc795d157ec08bd11a4d56d6cc50a8529db434ea63b41beed5ad00c"}, "07fa0591-859f-42d5-9017-dd306ba7c2ba": {"doc_hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14"}, "79654719-cfdf-4272-9cfd-f828592c7f0c": {"doc_hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2"}, "082c3c85-88d9-4e53-a971-c502bef628d5": {"doc_hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405"}, "8a9cbeaa-63ca-4ba3-9968-a32359775ff2": {"doc_hash": "569f5cdeb10e212a9834d5577603d6f311dbe9fabfd45d1653f93d126ea3d372"}, "aa4e1152-4b67-47a4-9e26-ba70ff26868f": {"doc_hash": "354ced38c18f7039ec6dcd6cd4dd39d306745d3ff1cebaf015fa29cfbfd600aa"}, "3b77ad6e-113f-48c3-95dd-2f7969f95cc0": {"doc_hash": "464ef42cfd70575e9fcb9c434b8f0bb1d396eb1234cf2872e98c9089560c0651"}, "54a42ba5-8909-421d-a428-d5b1494b2313": {"doc_hash": "9b75a1ca0aed6103acbba6eec745324142ba0d435a101cd91572bf2eda891b19"}, "73132eb3-9df5-4263-9889-45ef72523ca3": {"doc_hash": "25183fc23258bc077be8c0f75d1ec2eda24ae7afc15497cfdfddbc854a4e5279"}, "ae2c5cb3-4fc3-41dd-b44a-7d16e454a79d": {"doc_hash": "f73470bfe09c91584bb75e07b753da7e29acd93bc96e6a5788cb4873132625f4"}, "7a5e84e1-6d5d-4050-a1b6-39dbc0e0f174": {"doc_hash": "af26d9168273b0b6609bde401f510e2d016caf68cc555dbd481ff7b45d056812"}, "11eac1ec-1076-415e-87b6-0546941b12b0": {"doc_hash": "4fc15b1bea510bdd3dcae1fa556b06cb8c35674edab302a37947f9f71ada0994"}, "5ca87fd6-89ac-4531-83e5-40d7fb69b0f0": {"doc_hash": "ea7ce142bd451596dc452ca469732b7cd5729f2cdf6c3e614dee5b621404e895"}, "a9b8401e-d2d0-45ed-9fef-9946f385fa08": {"doc_hash": "074b4e3508c4862b9bd77c3872129bdf5efec56537dec1b3b85c717348bd84f3"}, "2f663381-6d8b-48ce-b876-2929bfa69a47": {"doc_hash": "0b46596d2ed1ecf8a3617209a956a840dbfeb229a2357d00a3834b115832da5c"}, "c9155214-a95c-40e9-b545-def6f18f052f": {"doc_hash": "0a0344a981ddeab1aaeefa6593b93b6e90c48da67106dc6dba24b63d2afe3d15"}, "56385e2f-29c9-4523-b37a-126b07425f30": {"doc_hash": "cd13653ebdcdf07b99cfa5dfbb78aeb1310d3e292a0416672ac8b2a1f53b2f3a"}, "0d9f63ce-b3fe-4143-a123-541a4ae4ee41": {"doc_hash": "dcbe8fe243814b972ac9dc27ee8089bb67f69f87e53bfbe9913b3ae298453fbb"}, "4bd1f52c-2ef5-43bb-9d91-02ef941b92ca": {"doc_hash": "9adeb365d4386e5809d668149e43fcb8053eb479fe221229c41fd6b156442e05"}, "6f11cb1b-3782-473e-8d71-4fa7c5874d97": {"doc_hash": "9d86c79b47162285cd421d57c9dc6ea6b36585786d3a1f8501af4f9519548e84"}, "d3821836-f01c-45ba-b611-dc0dbfc162a6": {"doc_hash": "0f943b53a4ad9522de0771242b12379a8f8d4d8cd256f4b6b7325226b94ba5ec"}, "1f4e748a-4ef4-4cbd-9c14-5ddaa8c0be25": {"doc_hash": "efe02f1d4c92a998562f788a58f2ae31def686c43b18c1828626ec387c889d0a"}, "a9755943-2b43-4ad3-a460-615be8b52c8d": {"doc_hash": "5a6df5d83853f113009c7145a93d6ea80558a9f209523771b67b5f245b30eb95"}, "86b439de-cfcb-42c8-a9f6-9a1d360e367f": {"doc_hash": "b2beac080aa2e7340d8cea34e205983f291b3cf72595daf89d4bbcdc933c9ab3"}, "8384bb94-754f-4426-9094-89222ddef646": {"doc_hash": "97d56157087d1e4bda085d6cd381f1074da2f507409b2d97da7d0bfe27affca2"}, "26903785-fc9a-4ff0-a4d4-9a7ab8ead96a": {"doc_hash": "b94a1ea31a074591526166424fa3e18750aa00405d8e019d413a190d621df86a"}, "8e95e58e-1bb2-4b53-85d4-07221c1a0a95": {"doc_hash": "e308198a145453ac946456a30d8be1c845f1d830c44f01e4dc4cbe5bb8b07fd1"}, "e21b2b4e-af2c-46db-bdd2-ddf070c19567": {"doc_hash": "34bd20056160a8de9be81b94838d036c32fdff19d0a236dddaa80669cb43adb4"}, "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4": {"doc_hash": "e32c718481c06e91841826d19b65fd318b1de57f1b7c48172401101f628b414d"}, "7b3aa042-a9ad-4717-b4e0-8a0b0b4039ac": {"doc_hash": "f7d189c2f4b2ea6132375d1b5f9458e93cd75a843e0d9549d4af336020e6e48e"}, "eb914b4b-1f61-42f8-bd2e-b4b1d56965ec": {"doc_hash": "e7a1d874e9064ee2a6a0b9c169d41ffbea75e194cd06e59f61de265625b2aee0"}, "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5": {"doc_hash": "01bfc382eed14e123f6b35c37fc28fcef24d2f27ead0e4d8614bea93c61293d5"}, "641b7bea-e30f-40f2-bf15-fe10de32bc24": {"doc_hash": "f53dca6e999cbc29f32eb0dd2ab4d23b0b1616fe3071920908fd3f73c9e5402c"}, "81e34460-1af6-4d5a-9004-edaa58c56d7b": {"doc_hash": "edd97d3aec0b3b8315e70327137b07b022c7c7fb805f2cd7199480176640fdc1"}, "23e1c9c2-c9a8-4a1d-bf1c-1683774a7b59": {"doc_hash": "395e38af8c1bb1e6b381b027ee2e3406f41bb8b09f4cf2f11b6002d461e0b433"}, "8b4ff668-f6e8-4590-aa89-0365a441d113": {"doc_hash": "5726f12f846d32c75c6e06e97b40f6fbb920efbcae48efb38c0f9450027b8ef4"}, "be0df209-e10d-428b-a774-09798cfec168": {"doc_hash": "a97fa93e74b484191ec5786b935f0eef762635ce8879f1eee04f96224d7797fd"}, "efe25d72-303a-44c9-af0c-b14c834c1102": {"doc_hash": "7f9794045dc787e4a41317bd9013babfc1cec0ea73acbb1f0e652be8b5fc8e5d"}, "b0ddc902-9eee-4607-8eb0-91618fc6b1fc": {"doc_hash": "2979a58d953936195034b303d977f6a72d71841791952b6ac329d601f611ee3a"}, "97d2a85f-a0c8-4601-b4c5-c4e50afa78f2": {"doc_hash": "4c83096a92ceafff48dd99062cbe6ebbb443ba6f2d1f75f368c024fd9e6785dc"}, "a4cbac0d-8847-4e9a-90bc-2a27a35d4eeb": {"doc_hash": "3bcc1eb6804e8852071a6cc51f18f41cc62a63247218c0049874a770ea211600"}, "5957df19-5436-46bb-9370-ebba5efdbd70": {"doc_hash": "d8c79a4be9e5354e54d484a979a2c3a41411dc2bc652646b52100ff447b74a0c"}, "03f8fe6d-2d91-4c3e-bc84-3bce48ba8d8c": {"doc_hash": "3756f9bc67aabc8a0bd4cdd808242814078beb9f4bbe54798eb3f051b0dc002d"}, "3aecbbfd-1337-4b21-a2bc-c44d8e057d1a": {"doc_hash": "721c15b9e6f8e29bc77ec7f035461b3dbaf8ad3742a59a9e0511fac13722201f"}, "348c2210-5bb7-4574-ae61-2a5b9d9d616e": {"doc_hash": "4f54ce6d557a38b8a2a885a92e42bac4985021a9cf540298a7a9f3f5d06ec3ba"}, "811e152e-e305-44ba-b1e8-487fedee66ee": {"doc_hash": "ca6648b3c69cd5cbb9d56a48610bd521614e97a3f3074465ba7a59f9a56c8cdc"}, "4ba8d192-5cd5-4b44-9f87-1de303463df5": {"doc_hash": "b390f9ad9944cfbad2b9aaa42b0f24bea2523f02598dede96c2095262617ea68"}, "95f15700-0a2a-4c49-942f-3865b62f498f": {"doc_hash": "6f56c5c7b967a82db5786465a952e1db99a2d4bc86f0ff71fe7939b78313010c"}, "a63d75f2-3e08-4d2e-b037-e668313fb247": {"doc_hash": "69fe3e219049b0e9357b49d09aa6e4353b7415ae8998d6a1bd766bbd7ebc6bf5"}, "09e24700-2aca-4b58-8dc3-c56b3024edda": {"doc_hash": "ee1774c534a856df65477f8b7b22ca3d815b0210e252ca2b59053cf72120e6bc"}, "d57b095c-b7a1-4112-bd9d-1369aea1f48f": {"doc_hash": "0e964cdd01055250513911b67d4ef38ce2a9baad6911cc23464fc3c4de273659"}, "9f82e593-757c-4226-a86d-826c33d1e966": {"doc_hash": "7c0271c030c445f275bc8bfa71662b60948659f9bd411bf8b760e1949cb8559a"}, "4027aefd-1980-44f2-9d38-24e44221c1b2": {"doc_hash": "0809b663c8e3a4b6feedc62dc4c8cc16519997dd3a0134134384efaf3ee47af1"}, "58d23fb4-090b-4775-8604-8c6553be3bb6": {"doc_hash": "1524527f9886d46218ad572414d2946dcec24aa89252ea1b209f5b2529705206"}, "735b2788-3eed-4b1d-a388-3a1708218b64": {"doc_hash": "21a08fdec247c5318298b8b1151bf20829a6a66197134c7e117ac5cbdccd34b1"}, "49819983-bd32-4aef-8203-7e915d377780": {"doc_hash": "b36723d0b0b608e6ae3fdccac8baf43466eb6f768c696f5bcd4cad380683ba4e"}, "6a98f1b8-1123-41d5-ab89-c4969435656c": {"doc_hash": "9fa2cab9052ac3cb7122da45a5062e91a453d99d5dbf518d46226e8a70512197"}, "3800d5bf-1bd3-4437-bf19-399c0bf25b3e": {"doc_hash": "3cae1e6654e1904ab23966fefc19e491a840a295ba7f431ba3d3108ed2bdac1c"}, "48e5f5ce-a954-4388-bb20-f2e59d04b53d": {"doc_hash": "69e0edfffb7bfdd2723cbcc3e1cb43b59b897496f0e62609eb6490b5a097fbf7"}, "5081bf69-3232-452a-bca1-4e2de2ae19ce": {"doc_hash": "484d8372c15f860376dcd61c02c24d4b7041d1268371b5460d5d0f8d19414476"}, "754258cd-0953-45ec-8343-41cfc53ce7ec": {"doc_hash": "c5a03f043aeb4a4cdba12de2e943f2267eed659f062466bd3b976a3b4fad3e53"}, "641afc94-c01d-4cff-ad09-4ed8177620de": {"doc_hash": "0f3e00d872d1e68348a36e7eb598d1ae974c44b9c4ea4c49ab277ca627927883"}, "298b40d8-852b-4e32-b493-c21ca2888ec7": {"doc_hash": "fc39704597edcee9b72cc9e56d75dab07d5209df20328604778e8c50fb1607df"}, "403bb27c-4db0-4dd8-afc1-2200d4240e35": {"doc_hash": "cc2d98191ef12d28f62b808f123e6c40a66950ab518e1e21e8b7e17ebadfc219"}, "919de205-9105-4709-a691-669b10f94571": {"doc_hash": "e2a5ec2c2212ce58a090fd548645a7e8268c29a0b3ae07073a330e78cb78d28f"}, "cdfd995c-4015-40e8-8191-0572d5f6bad9": {"doc_hash": "df8ce74d4629c741525613685e5d7d4c970c256c3ed325f1d7a22086bf60151b"}, "40eb348d-b6d9-43eb-ab3c-eefe00567789": {"doc_hash": "60f2a2039c40ac34ef276f26e523aed3513659df9ed610831bc2429ff796a744"}, "0943d2a7-75b6-4057-b8e2-60d039e39fd8": {"doc_hash": "2c9a204aa4c1fb7f49adffd59178208ec444632e1eebd8c8a9a5e27d94b0ee60"}, "d18ddba6-a70f-4716-9456-3cab3b4a1302": {"doc_hash": "761ac3b83e37c681d45156a0ea3ef4f312107cb643360b3d972b43c4e48dc3a6"}, "46ce1934-2ac7-4722-95f7-e517b0627c6f": {"doc_hash": "2bb8d7656c22d670ca8e22924adaab6aedd8a4e31a4ddd0fb21ca0e569a062e3"}, "f055d703-23a1-420f-9c01-1788556ab374": {"doc_hash": "17431620d4009d740c2c0893128508c06b90ffa72a64de681c3ab3444dd80a01"}, "ccc9d01c-00b7-47c8-b2b1-386a05dc5740": {"doc_hash": "ca4e161b6eb034bc2e692d33b454fe03d400fc89729940a5e16260815d3dc8f3"}, "9fad2a54-8df5-4fd4-b4a7-fcafc2032d3d": {"doc_hash": "0a899fd82ee81921cfd9875d7dd5efe3c6ec0acae10b76c9d70bfe564f1be6f7"}, "06dca54d-7f84-4a52-908b-33c4063aa480": {"doc_hash": "6af89c148b718d6849959e2f3ecc8ea2d201703d36548abe742aa216797cb69c"}, "ae969e3a-1e27-491e-9a0b-86b25777661a": {"doc_hash": "bf3912ec06814b90f5c93162631840ddeececaf5c57446010e41553804e1c208"}, "41dbe945-48f3-45c3-b7a6-a7b6642f131f": {"doc_hash": "f93dbaa63adbf8402a9a1b7388a37ed6113efaf6ad4eb8e37af2220e083f910d"}, "d427b32c-885f-42a5-834b-a3ae4bec4fde": {"doc_hash": "6ecdf65ca40f30686abc0f27f7a417c31a2b2e6613312924c77211da6429f50d"}, "484a24ce-7a69-46d6-b488-d96e6c9301ae": {"doc_hash": "cb14287c2658c3241984d8e1fe0c45538a269bf21564602bbccb364a3c4468db"}, "39b4744e-1b20-4ec5-80ff-a1920ed4350e": {"doc_hash": "1d05b1acfce4a5749098646565760aa7ddc3cae36692c6eaf90eaa83cf9e36f3"}, "60dc5051-fe7e-4362-9056-72a8645418ab": {"doc_hash": "976ffc929525c4448d6dab3f65819d16aceea221c763abed792625a83e5a1bf7"}, "41542e1d-81df-456d-a0bb-7c8a9c4ec335": {"doc_hash": "a8e974760974156447eeb5df7c2038ebfc925af1cbe06f0d04fd0b78f9611184"}, "f9b4481c-7138-4c72-8177-be02e68efbf5": {"doc_hash": "42704851b333868dc8729302079d47101c8e5d07eb0f047d3683e62c1d5ec2fb"}, "46a4e7ba-994f-4db8-b32d-a9baf73fd5ef": {"doc_hash": "f27ca943b8df140b8d8d9d3ce706b850bf726496b7febfbf5ad2ce44d83c676d"}, "254ead42-0db8-4735-8290-db16f4dddd6e": {"doc_hash": "abc3ac8ae2430959c8d340f3bd0dd2d8ff1fd5ca1995ab8379fdf958ad0b91db"}, "0e04493a-736a-426a-96c5-c4b80c409b77": {"doc_hash": "3695be9194893ad2915bcd10c4f18516fcc3b1b8b1dbe4a3aabc1c5860301adc"}, "6728b914-6bae-4d42-a8c8-acec4267ebf8": {"doc_hash": "4c5ede687d6a6a8dd9f245ff982ecaf1bb6979482e60dd1a196c567f4700ead2"}, "24ddc37a-b7d2-49a5-a3d0-e9f31067e5b2": {"doc_hash": "6b141733a7b917acb9f9a295fa5092200c2c9e2bade8c1782cedc10d51205ae1"}, "e8d494a8-fa45-4598-a554-c4da471c61db": {"doc_hash": "8d664884fc118c59dc16b58eebe582631aca44072c887342b12b60238f8390e2"}, "0f19b229-380d-4dcb-8663-6be644a555ff": {"doc_hash": "4b8826ace8ebd2e679a846ad440c04af8d831ed17df867baa82a045894ca265a"}, "10bc0395-32dc-4b8d-8483-25f55939c297": {"doc_hash": "dbb785984be0a91a38d62db42b2d973a6930572c8733f5f9e9065af733afd48e"}, "cf25075a-e48a-4748-b127-e8767de9d36f": {"doc_hash": "bc0bf54c14228a133f9afaf2983475705002f25ef95b3a1e4b5591cab1272ecd"}, "0a512118-983b-4b78-b1e1-f619705422ee": {"doc_hash": "8a03dc3b775f75ffbd0b32f16cb8c7d9a8c407d2226d6f67f88f1392326dba46"}, "32f2dea0-7eb4-45e5-b795-b0db4b37c2e9": {"doc_hash": "8e3587fe9869df7287c97ce4470763b2d63812a0d6a3993cc9ca0d0342ec64aa"}, "bb0f6b83-87e0-404d-ae11-f06d61560c42": {"doc_hash": "81a0db4dd5a760ae36fc449d254b7aae42ed544e3d4d8f67db35c081e8cc66e8"}, "eeee697d-2a7e-4ec2-8599-c42a1cce3320": {"doc_hash": "414e8d59cc141970a69b4a17a6db9e4e44f6124c989bd8e2445e1db4b14355b8"}, "c12f1715-4cac-4ea7-82a7-50ed580ca8fa": {"doc_hash": "24efdbce2de9a704dc865a6fd63cf9403eb840d7a5811f14205045b1c389924c"}, "9d3427ba-a10b-4bdd-99e3-7e74f155085c": {"doc_hash": "c05cb94e71599683c2a2a17591b1c67e43377c169001c460498c7f34e15bf973"}, "c8126d58-ecb7-4dd4-8101-9d65551b561f": {"doc_hash": "2ffdd5ae8ec826276e76272f0ae083917e3404f4c9f6d5d99e4e9461b306537c"}, "91e1bfb1-db50-4601-924e-bf96cb6152f9": {"doc_hash": "8d2c834426888014902bc9b352940be0be7db6cc3106700fb7fb8c6593a2e508"}, "0b7e5ac4-244a-4b79-a464-c644755820b3": {"doc_hash": "b2938f4a9dd208019bd8244235ad0eeabc7fb41927331874aa5c5c4cad0e96b5"}, "bab1c6b0-0506-419a-8653-3eccbcd317c8": {"doc_hash": "84a5ed32a9d8c791f08e9c3fff4157e38ba31afa5087d1d7410ee0e354d7bce1"}, "9430f43a-e0a0-4a62-b268-8930edd07c4c": {"doc_hash": "7b980fa70985da0998b5e341342e1247579c3216daad04dc4b859361ff0f701d"}, "1fc5a210-9693-412f-b1a9-19ced93c0de8": {"doc_hash": "37cb4e988acd9b09222bcfa345dbaccde61c11d213a8f4756db28c4a1b12935f"}, "0b85d16c-db0d-43a6-a9d4-ce16899d04ac": {"doc_hash": "671a7cc0231fafb93e08efb73ccd6505790adc8a7d9a2e65bb3a6335a440c20c"}, "64cba4a5-9304-4010-aa7e-f0f653c6d862": {"doc_hash": "348faf413f1c76f90dd84c39d19fbc99017ad86bc4b70e6cf17d5ed41e8fd71b"}, "9d8fd11b-99b8-4d37-9a1f-71bce3fdae97": {"doc_hash": "df787ea372b6751071528c4e57ec6f23cd8bc301fe192793503a0243fd83a862"}, "e5c3d456-590f-4330-a5d5-fed57d79ff36": {"doc_hash": "f1974f8138f843becd8d3bef6bfd3f07bdac670bc0898e07008545a283da8f11"}, "c2c2e657-f85d-4e94-9c73-a6e4b96b3021": {"doc_hash": "48e46c7794cf308834b9e076d37f1f809f6ce127b1c6b6063786a80959bd2746"}, "34f9a327-498d-4879-9a8d-844577a2daa1": {"doc_hash": "3a80e9343ea0afd2c48fdc6e029c9a486fd3bfad59723c4dd1a4a2477b8ed1e5"}, "0f469b83-a3f0-4107-a753-8ec2c8cb31ff": {"doc_hash": "6c12bc3d70622fa15107d8f9b8a20cad8108cf885deea3e26f4512c0d5066f7b"}, "b4ef92c7-211e-43b5-8e6f-a5efaa4f2f82": {"doc_hash": "8dcb03e5a841d074af06219ee18820557628a4cb9c718a5dc5356805a55fa09c"}, "0812187d-e8e0-4a17-a518-e0984dc0f698": {"doc_hash": "bcb30a2e105987a94ae1e931d5f90c4f451c41da1323372c275a98959c124d3f"}, "bcf79534-96e7-44cc-bf59-dc81cf08e4ab": {"doc_hash": "5a2001cdf59a86e736d45775981c9b02f5b57713dfb3216ff1780a4545a4b617"}, "1576892e-3143-42d6-b64d-de6da23538f7": {"doc_hash": "78097af7115b92426de5cee374c4b15ad8e4f75d85a04791a8098a54e51bed76"}, "0a7414c5-7244-406a-a454-86a587ca7cfd": {"doc_hash": "a112aa136b118ffe5e63d0e29da94e5c9482a0ca1374a6634efe398cb34c0de4"}, "96766a91-b7d3-4959-b347-4fba728da5af": {"doc_hash": "183e2e55dedbe0985493d3eaafa2fe9c8eddb6c833c4c51c660cacd42a2c5544"}, "2314e47c-be7c-4cdb-98ea-d45ab179fcdc": {"doc_hash": "d094439ba392f3a3dee238ec7c2804cb0574bfab7f5e5686217384d9043366f6"}, "975645b4-cda9-47f8-a006-1ab65bab843b": {"doc_hash": "90c50613484b905ea46468fb41646094a381177ce926ecf4fbd657b7d67cbbbe"}, "96664e48-1a32-4bb6-9ce4-feb787ef777e": {"doc_hash": "11bcd6074263e785651d591f239424765305f952b8a1e069d2b7e1c04eda126d"}, "00a2c5d2-f72a-4770-bed0-192d6765f10a": {"doc_hash": "3f06a7407be83b792aa50dee46b1fc13ee5cbbc0b6151ec280936f55fe7d55d7"}, "35d896db-c7ba-4293-8624-6b0bc52a0672": {"doc_hash": "783115d5986f98eb8d91cd612779d938d0fb66391b20f23d20aa2645450d5dcc"}, "bf490124-91f3-4a3d-97c0-927860b1b2e2": {"doc_hash": "1f6fab212a495afbbd1597fe003db3f452f6992de894315396ed24159e9ac42d"}, "356c7340-621d-4bc3-b018-2504dce2f9ae": {"doc_hash": "48dccacb89c51005d5c9aa7836d8e2368cbb952a6f019c6324ba30b2b46ff34a"}, "3ebc47b0-9314-40b5-8523-af7cf8afbb3c": {"doc_hash": "647c206d7b06ab5991b364b60096267e7760051f66ec7bf9852f80c03a58623f"}, "17aa85d7-68b4-4c16-afdb-cb1dd9056ba9": {"doc_hash": "b950d513af45aa7a69ff45b39515f8265fbe605a2a6bf088713a970e0a0d91c0"}, "f263589a-3642-4dca-98e7-386bebefcbac": {"doc_hash": "cba307cc553b57e77ff4c58cc02240e964dd00320f32ba28bdd16de61a12f9ef"}, "01647296-4f7d-4bd9-a7f4-29f3d9ef953f": {"doc_hash": "a0d581666c8895f1ccf734a7165fd133870c1cfc7f5f25d60d284b24f76a464d"}, "19a59804-9e6b-4b81-b9ef-adfda128916c": {"doc_hash": "306fd5d6177cf3ae299d3d3dbd66435150e7223b5d1bed2cb0c4407b6ddc1595"}, "00dd30a4-e18f-41c2-8188-b5e6f5923f89": {"doc_hash": "1f5f70d8d4b3ece40f5c745808eee531293054d776155356988cf80ac4678fda"}, "e3697d59-355d-4095-b8b6-86a6eba6b1bc": {"doc_hash": "40f2ecfbb1c8970239235123b7e2be389614f45d1b0b5f97ea336c62da037156"}, "6ce98732-2941-4f4a-8704-065dc10bf364": {"doc_hash": "b7baee95363d89b9649856417a139209a7793b61643ca57a3c5e44eeefff1fee"}, "741d8f7f-0813-4fa2-bb2f-97b837056729": {"doc_hash": "6d8a903b8d37aff5c1ff965776fd627e41fd046395c0f01d75b0e5a75e8d3262"}, "989f8002-d415-4ac0-95af-b3625648eb89": {"doc_hash": "0b6afe454b1e58cc25fc71cd4ae0179be65aa4fb0f76661e895ac91d215bc1f4"}, "94afbd2d-bc34-4eb8-ac60-f09f9c237e3c": {"doc_hash": "d21424d7d9823d852c3bdb371d60e2d0bfcd93b32958197641d74fa6504d338c"}, "3c50bcb5-fb19-449e-96b7-c3275233ea0b": {"doc_hash": "dda24e806e9909270fc71aa6f4e570ee3fc7c2f6c8a8dfa01e1a7dec6898d2de"}, "5e4c2966-6794-4159-8155-8be9797ab81c": {"doc_hash": "fcef089c663d83a41043050c7df14a2389dadd6817827ba58263eddb3369fe9c"}, "4c7d98cf-f8bc-4563-bc79-8d22d30a1004": {"doc_hash": "1aacec6cde567251dca6b319639f83d3b64720735fd6c0ba104d4b66335df466"}, "4c949edd-6175-47d0-ae94-a13d50bbd7d9": {"doc_hash": "195b1ce2681156c63c5343ca08ffc071a83874915fcd03910a4206e12bd54e68"}, "990ab1b4-0ee4-497c-a7c2-a9b16ed130e6": {"doc_hash": "71ea1715dfe91a2e796b69a4189ad163a5a7b71f1be59601690aaa7ec0ad6094", "ref_doc_id": "d86e17be-5537-4f39-9afd-43ded0c54b86"}, "1fe61e41-da00-4f68-8743-a1b3495e26a6": {"doc_hash": "ce829eba117680c07342a8a3a0294192bccd76fdc1abbf01048d7159aa46468e", "ref_doc_id": "5e3cb524-0e8d-4bb2-9054-a5c6a8548bcf"}, "6e6a5b1c-ab1b-4a1e-a02b-69410f397c83": {"doc_hash": "2a4190dcfbc795d157ec08bd11a4d56d6cc50a8529db434ea63b41beed5ad00c", "ref_doc_id": "4eb35ebf-fb31-4736-af73-d2c81416eabd"}, "c42f98e2-0efd-4fee-acb1-12379f74e5ad": {"doc_hash": "a5ce0b16861a3ea830b04600d08ff902bf82b91f5744e92c3deed2f44e7fd555", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "b28afe4c-220f-47b8-9d75-c9865d47b3ad": {"doc_hash": "5848e87eaee6762eda0b2ae29f6491af9a4b4c8564638c7254f0f64357eeb347", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "fa0143dd-2b6b-41e8-85b4-225835be74e1": {"doc_hash": "98ef6b725320a61e0f9baa4468d28ccd3f4434f31f74163d24bf19114bbdefea", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "7793d6d7-a8f5-4c8c-b75b-318e4df3f517": {"doc_hash": "ea89e98a59d93e202e644fa2fcf7834aa733d1e4042019a2263796c1601e8c70", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "4f2c6fd8-c226-45bb-9e69-48c917930c4c": {"doc_hash": "629f43aad854ff52c7d194a345347b0676fc024c584577e3775e52825007c102", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "c843af3b-e4ef-4dd7-a36c-3a96104955ab": {"doc_hash": "b2655df2d37b9ca22afd410dca605763d3d82f0a1d7ceb39bad72b5837633d46", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "b0e036f1-bdc2-4551-8fb8-51fe5cd2d7a1": {"doc_hash": "a1efa3aa9c3b0e2426036388f6f73cb60c3ab7ec3a6384172186dbf3c286494f", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "5a28cc58-71b6-466a-95fa-aa7e92dd5980": {"doc_hash": "3bc548b0395898806ade7ed7f72f60c3d9372cd4c47b813eb814f34770ca90a4", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "7b353d57-4fb6-4800-b9a8-1157b757f606": {"doc_hash": "290c39ecc2ccfb5f1fff07f2bdb103ec8031d44ff0d578d29ab86f2a5aede7f7", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "ff7693c8-c845-490d-b7a5-d0991f211b48": {"doc_hash": "2ab5427809f4bfbbedc151aecdbbff8880dcde02415cfeb9e9bff23c103ae423", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "e62ba5ff-a3ee-4cab-92df-3631710a60e6": {"doc_hash": "8227ca0936cd772384c93f47910dec944c46b120e47f4616e00f95d80168fe6e", "ref_doc_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba"}, "d7d661c8-1dd1-45f0-8e7f-72ba965e9440": {"doc_hash": "00f9b895e685bdb64115f65a7a5af001d81f71cdf7fdf4eb63ca4dcf80d6f75b", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "67819d27-50d6-470b-848e-64be3a9bb952": {"doc_hash": "00b0c435eb4e514f59fa81c849004340875ecce84d009fe854f396a1cecbe8fc", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "9c4ad4df-af22-4942-b087-43da0c2e4d9c": {"doc_hash": "cc1e1725c95e17345e4b61a918912b665efc001ee91e84513f71df73a97a5872", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "a4a97f98-4c2d-4465-8508-afeeffa10ec0": {"doc_hash": "d6d21c701b9a9091b17748df501e42989b68e4cf4d42448659daaf736f4def85", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "d5d33378-1d4a-4bff-909d-2294fb807abd": {"doc_hash": "6caec7c6cc7aa9a51472789790304f157319796ac4d28cdc7e3c5178491c44d4", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "c6d2db28-2218-433a-b5ac-235cfbc37e9d": {"doc_hash": "901635ec04b99af7636b71253b43b0df995362dd11402b824d651b160b906eb1", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "86ade1b9-7255-4eb0-9728-2922a450f990": {"doc_hash": "887fee9e5b1ed9ce8f6aff8222f8c47fa04d0858ed80b21f25005128c554e8c7", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "d3f08c44-53be-4a0f-871a-310cac17ee9c": {"doc_hash": "9d81fc80251c9547be6fd586692dd4042e8b3e05fed0f52bdc90f18e2d9c26e5", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "b6c0262a-8584-41cc-8666-e955795ed3ec": {"doc_hash": "33bdefc6579c477882111290d266f292e07cec5d26deb1cbdab602aefcdc8b89", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "79697e99-a3c6-437f-bc4e-bac1d8460589": {"doc_hash": "d1b3d517d30f5aedcb2d2a95fc3bd74d5198489bb588a7f94a452bf1d1b83b56", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "71e3d86c-ec24-4951-962b-8f3741353a45": {"doc_hash": "579a60fdc9aeba53836cb843913d4c56286edc91714db1777ba3ef6a1784c712", "ref_doc_id": "79654719-cfdf-4272-9cfd-f828592c7f0c"}, "ccec08ec-9858-456d-ab40-6e91e517ebe2": {"doc_hash": "30befc4c157047448b7321f007c7b5ab0f2f0e21f5d4f8ecd402501ca5da99b6", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "fb6fafe5-9daf-4a24-bfb7-5cb6efec9e22": {"doc_hash": "3d44506268459f87edc082d8512f6de68451ec987a1e69e7bf205123b8f0d69c", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "e4719def-a2e9-4127-aaa3-984d4192ccc0": {"doc_hash": "476204dbeada23e6309aa13320ae95990e9a0544d2124d8802e75ff2cd77cd70", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "4cdd91ea-e22b-40ec-96e8-43f6d188e8d4": {"doc_hash": "c14e5cf83ec0b601e4f9d526a1e61710dd84739bfa0affb8c00d9444368f1d72", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "0886f63e-bb60-44b1-a245-9847f44392be": {"doc_hash": "6b3516f228a4c5f57c2eb8e52ca51bcfb7bab08d2b3398cb40d71081d85a0378", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "5811ffb3-ef32-47af-a763-bdec942184a5": {"doc_hash": "dad6793a8399b5a4f9705f724ae0293eeae61eefcdbf230ec723367fc385a9ba", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "b11c9006-a41e-4799-81c9-ec249fac783b": {"doc_hash": "350be0f9eb352b997dcd75d1af1523da4ff0889eba49a8d7b066237fcd16b127", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "97b88c33-cec4-41e2-8cc8-3ef2a008ce1c": {"doc_hash": "2e35415829ed904610a0bf913fbd67700c0692ad604e8b04c205d7bb1f7d9c82", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "e19fb3f4-44e3-4ea4-b297-1581e6e51a50": {"doc_hash": "84271740d677c200124f75fd578f0c45667d9d192c09529a19efced702c08349", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "cc6045a4-2e5f-4c73-a145-f45f44fd75b5": {"doc_hash": "de2d2397cf4f197cc023228e35ea28ce635803c175c29f16e7211810f46fc46e", "ref_doc_id": "082c3c85-88d9-4e53-a971-c502bef628d5"}, "35c544f8-cd8d-47bd-b9b1-bd7b49737eda": {"doc_hash": "b04a6be983c4f8850cbea2f6ba829fc94b4b7b21ec995b574aad270ee24261f9", "ref_doc_id": "8a9cbeaa-63ca-4ba3-9968-a32359775ff2"}, "1b0c8924-859c-4c1d-b7f2-c72fa1ac291f": {"doc_hash": "f41630c7e61d46770a703c2052a28be5b4b28882f3b7859e4432adee78cc52ac", "ref_doc_id": "8a9cbeaa-63ca-4ba3-9968-a32359775ff2"}, "dcb2b2dc-3dad-4483-bb15-6710179a1d40": {"doc_hash": "a9170cd764206828832868b8e38ce8f5d38470a0576010213d40608a459e3184", "ref_doc_id": "aa4e1152-4b67-47a4-9e26-ba70ff26868f"}, "31361112-7dc3-4845-8fa4-03b50970be21": {"doc_hash": "cefefe7bb92be7503e3934569414135915efbf75e4c12f122b8bdafae9a669c0", "ref_doc_id": "aa4e1152-4b67-47a4-9e26-ba70ff26868f"}, "d4ed01be-f859-4090-a32e-ce637f0923a7": {"doc_hash": "ee5e76ba7c5cfad9215160dda191b61dc567f300a7fe9dd798cc15170a94517a", "ref_doc_id": "3b77ad6e-113f-48c3-95dd-2f7969f95cc0"}, "5b1155f7-acab-47cf-b391-7aad342a7761": {"doc_hash": "a1cb1a9c7f0786c93308975fe7883376e1997d1e2e34e65f58e0a38533abd6c5", "ref_doc_id": "3b77ad6e-113f-48c3-95dd-2f7969f95cc0"}, "b697e8be-9157-41a9-8eb3-bd2258d05475": {"doc_hash": "b3eaa8de024665b1a1d466b4dc9bb14b4ea41294294965d0670c69ecb5b9aeca", "ref_doc_id": "54a42ba5-8909-421d-a428-d5b1494b2313"}, "fc56ccf9-3a1d-4a36-a32d-8f5bea840955": {"doc_hash": "ae3038b64e82b39ca3c78f6e9f7a513393c611e95e28517000f7fc42a0808751", "ref_doc_id": "54a42ba5-8909-421d-a428-d5b1494b2313"}, "a17f064b-e135-4228-b126-f0152aa27d01": {"doc_hash": "3938382bc843162f0f33cd4ebded79e44f94a80cff5a2848f0d9fcd686d4c90d", "ref_doc_id": "73132eb3-9df5-4263-9889-45ef72523ca3"}, "435be80c-76df-4617-b2f3-b5f8202588ed": {"doc_hash": "98da6454302db3d15891fe952cc77a8265f1af3c62b1fc369e1e4f6e5a76b63e", "ref_doc_id": "73132eb3-9df5-4263-9889-45ef72523ca3"}, "93de86e4-212e-414d-a83a-552d2f01774b": {"doc_hash": "21deb0df172e2a97edb6db030d352d3ca6cf64169948ee1d18603e272aa3d7d6", "ref_doc_id": "ae2c5cb3-4fc3-41dd-b44a-7d16e454a79d"}, "3b6f81e4-8672-4c28-bebe-8107fb85ce7e": {"doc_hash": "b98fa543958c3afe9e723be844ee963c9f60c54f491c7719503e815d2c0cd2e7", "ref_doc_id": "ae2c5cb3-4fc3-41dd-b44a-7d16e454a79d"}, "1445678c-5e23-44a2-bd70-a507b4196273": {"doc_hash": "e0e4182e774d719c032c6a9a8618099ad337fbdc1142bda2be532ba670985e36", "ref_doc_id": "7a5e84e1-6d5d-4050-a1b6-39dbc0e0f174"}, "cc3dddd3-26a9-4aca-a28e-ad64465a9b50": {"doc_hash": "e476a6ca8e30f812e408950a1ce8ea6ec185a321e885c4a16699ac6b64a7a5eb", "ref_doc_id": "7a5e84e1-6d5d-4050-a1b6-39dbc0e0f174"}, "04777407-0ff5-45f3-a5ef-46eb6b2357e0": {"doc_hash": "4fc15b1bea510bdd3dcae1fa556b06cb8c35674edab302a37947f9f71ada0994", "ref_doc_id": "11eac1ec-1076-415e-87b6-0546941b12b0"}, "f6948ffe-feb9-4b7d-92af-e137479c665b": {"doc_hash": "928163f5b9063f8b8e514515caf7abfc474684030495b1c65099668e47a89764", "ref_doc_id": "5ca87fd6-89ac-4531-83e5-40d7fb69b0f0"}, "04a66de3-217a-4c65-b4a2-938b454cca27": {"doc_hash": "13d07053221839deb94bf3e8c195654b44f0c69e4d5a8ab892c31761b402592f", "ref_doc_id": "5ca87fd6-89ac-4531-83e5-40d7fb69b0f0"}, "c9dc3faf-34b0-48a1-ad38-d65f4d74035d": {"doc_hash": "da1d60f005187b2c9f04a2ad0550c705b8a6e316ced2e74c7c8405e86cabc1c4", "ref_doc_id": "a9b8401e-d2d0-45ed-9fef-9946f385fa08"}, "3e5f31cd-d37c-4d13-a095-4aac168372be": {"doc_hash": "d7f5b21c21064b2174860bdf75ab271561d55fec5375f5fbc5a3d74fe9d7a7ef", "ref_doc_id": "a9b8401e-d2d0-45ed-9fef-9946f385fa08"}, "d8675365-3f1e-4e38-9029-83cf172f06f2": {"doc_hash": "4a1af415fd84c9b64a65f4d8047183408773b99647d6a4c93d943f6a5f33832e", "ref_doc_id": "2f663381-6d8b-48ce-b876-2929bfa69a47"}, "f0d3af4a-8121-4d20-824c-df5092245519": {"doc_hash": "33114c14d7cc20145da23f27f42eebd2734c83f7c5cde4b876d040f17cb5cc9f", "ref_doc_id": "2f663381-6d8b-48ce-b876-2929bfa69a47"}, "581fb0f2-10b2-4b8a-846e-e0c2b13b44e5": {"doc_hash": "f993cf326381870771d60e01c7191748c60c5172b4cb3fcc75048da9a9734925", "ref_doc_id": "c9155214-a95c-40e9-b545-def6f18f052f"}, "fb538e94-94d1-49d7-b438-39a0e2f18c8f": {"doc_hash": "33c40b250d7fb164a4f7b75bc716bd47898731f2eb5e337063d4a9308a7d1eb5", "ref_doc_id": "c9155214-a95c-40e9-b545-def6f18f052f"}, "e585b66d-7776-4a86-99d0-9811d614dbed": {"doc_hash": "818ac462c94a921e73632901fb6453a0749c2d44f602eea5d74e98fd184fc4d7", "ref_doc_id": "56385e2f-29c9-4523-b37a-126b07425f30"}, "711e76e4-cb5f-4c79-ba5d-032e461e9c6b": {"doc_hash": "ac0978f7b1606b7a4700c9245aa290b254bd7dd2ada9ffd0711e12bab3b1728d", "ref_doc_id": "56385e2f-29c9-4523-b37a-126b07425f30"}, "d90de296-4d02-4d54-be5b-3ca9baf673c8": {"doc_hash": "abff8505de42ed1c25b1213fe93f2e11b9f52a4c632e2a0ce1048c3f92fdeaea", "ref_doc_id": "0d9f63ce-b3fe-4143-a123-541a4ae4ee41"}, "7f933de6-294c-4122-9479-0f39c095b363": {"doc_hash": "4e3ae520996f46bb8a9e078a9ab5e14fefaf567dc69d7a20885ef8962be2b5a5", "ref_doc_id": "0d9f63ce-b3fe-4143-a123-541a4ae4ee41"}, "8d3057d9-c79a-4c03-b508-6cb7d80015cf": {"doc_hash": "9adeb365d4386e5809d668149e43fcb8053eb479fe221229c41fd6b156442e05", "ref_doc_id": "4bd1f52c-2ef5-43bb-9d91-02ef941b92ca"}, "9286d345-9b8d-48c3-92c7-25bd4902526c": {"doc_hash": "e25702e593feff0b5e2905d508bb9aef42a6433563f6e2d8fe0035c471e2e917", "ref_doc_id": "6f11cb1b-3782-473e-8d71-4fa7c5874d97"}, "1c908230-3025-4418-af0a-9029c537633a": {"doc_hash": "5b6687b9042a9a8a837030363d404c07e2eec3daa748fe658387b65149b62198", "ref_doc_id": "6f11cb1b-3782-473e-8d71-4fa7c5874d97"}, "09e8bb78-5ad9-48a7-a502-9f0551779e5e": {"doc_hash": "1d9aa0e17e226d051551cca49f907e5a5e3cc8e9f540594fd42f5c8273ae7a43", "ref_doc_id": "d3821836-f01c-45ba-b611-dc0dbfc162a6"}, "ba9f1b35-8232-4be9-a904-5282fd9d43e2": {"doc_hash": "3d0b2c8282e21c3578c6f9bd47bbe0494bf57eeea52675d8730a1ade5e06b3f2", "ref_doc_id": "d3821836-f01c-45ba-b611-dc0dbfc162a6"}, "2fd3f7e8-27db-4c5e-b284-1f31c314e904": {"doc_hash": "1d29677fae29764a8307cf412822bb4c56558344b80f9ba4b4d82fb7c58dbc90", "ref_doc_id": "1f4e748a-4ef4-4cbd-9c14-5ddaa8c0be25"}, "e46f5efc-bc0a-491e-90b8-3874b77b917f": {"doc_hash": "41eff00f96200aef2ddc996927e9688a4ffcdaf5a11df1fd2dd1cb709ec9a5ba", "ref_doc_id": "1f4e748a-4ef4-4cbd-9c14-5ddaa8c0be25"}, "0e940331-dab0-4d9f-89ef-af0a8996885a": {"doc_hash": "4895f4e72130803c5cf18f22422013d3c382a39238e1da38c8368ed1dd13f52c", "ref_doc_id": "a9755943-2b43-4ad3-a460-615be8b52c8d"}, "09dae8e4-7619-4e4b-97c7-afdc738485b3": {"doc_hash": "ca7fc9f0c1b21fe455b092812e2813f9a35bec96b2c6bb345df97fa430bf5331", "ref_doc_id": "a9755943-2b43-4ad3-a460-615be8b52c8d"}, "121ff403-12af-407f-b3d6-beb29d116091": {"doc_hash": "8212bfa2b8bcf01820a78fb3fd2c70d47f24f44930b143b9a493ee5bc83de1e1", "ref_doc_id": "86b439de-cfcb-42c8-a9f6-9a1d360e367f"}, "d2e98ad9-4448-4f23-80d8-dc7a2b1235f6": {"doc_hash": "2886946c356bcd0192bc87f81b6fea850911c63ed86d0c38233b3585358a4024", "ref_doc_id": "86b439de-cfcb-42c8-a9f6-9a1d360e367f"}, "d0d23cd9-1916-43c6-9419-721d17a0de51": {"doc_hash": "2762ec0cd8ce3da61b161ab678c4f06ecad5a8cff0fcc38df9d8f44628348bc7", "ref_doc_id": "8384bb94-754f-4426-9094-89222ddef646"}, "1c83051f-43be-4c7e-8ba8-78250f180747": {"doc_hash": "f053dd419061e353d4368bd7c32109326ef1c2b637ba597288b9b4edabeb4c56", "ref_doc_id": "8384bb94-754f-4426-9094-89222ddef646"}, "bdb1f6de-26bd-413d-84be-a51e2eebac44": {"doc_hash": "e48f68f7940cc9b86c7165748d2b5d1b01a2616c5b8aa8499f24bceadf07d13d", "ref_doc_id": "26903785-fc9a-4ff0-a4d4-9a7ab8ead96a"}, "bac4a512-bbb3-4b64-a810-074624a3053e": {"doc_hash": "1546d0e639f1ab00edb281ae18f75dc950e48517d7b2efca5809145c4a9f9a99", "ref_doc_id": "26903785-fc9a-4ff0-a4d4-9a7ab8ead96a"}, "7227ccac-1209-49c1-93f9-f39e4c904b9d": {"doc_hash": "e308198a145453ac946456a30d8be1c845f1d830c44f01e4dc4cbe5bb8b07fd1", "ref_doc_id": "8e95e58e-1bb2-4b53-85d4-07221c1a0a95"}, "41e229de-dc2f-4a2b-b9ae-25d2530980ac": {"doc_hash": "c4d078fdf083dc5cdde4fe428e5dbbe4376ecbd803cd81e93046cb9aa7b545cf", "ref_doc_id": "e21b2b4e-af2c-46db-bdd2-ddf070c19567"}, "a26eea65-fbd9-4659-aea9-3a12ce9e276a": {"doc_hash": "8955cfa3a0b54850315a57d6abfaac15cfb6b32699995ed70b20559689022d23", "ref_doc_id": "e21b2b4e-af2c-46db-bdd2-ddf070c19567"}, "c8f5f685-8ef7-4563-abc3-efa56e0c4894": {"doc_hash": "150350520229472c4044639b71b34de51bd981d3f8651d5642421edb53b9b1b7", "ref_doc_id": "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4"}, "130fa4fc-19b7-4974-88a5-f82713be5c29": {"doc_hash": "4861e31fc5fc5acb1236db0bf21f6f1ed007714a6690e1542e9eca6da1f2f7cb", "ref_doc_id": "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4"}, "02564ca1-fbac-4e43-b595-e75c6d6dff7f": {"doc_hash": "f252535100d7ffe4e37679be6a251308cb74f603ed9b2bf055a61ba91a2f109f", "ref_doc_id": "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4"}, "fbf93781-d500-48b4-93c1-bf4ebe4424d9": {"doc_hash": "f7d189c2f4b2ea6132375d1b5f9458e93cd75a843e0d9549d4af336020e6e48e", "ref_doc_id": "7b3aa042-a9ad-4717-b4e0-8a0b0b4039ac"}, "c5fd7803-774c-4aa1-94d0-a235fe305e93": {"doc_hash": "c8f6a80bdc80c8a42955444d2ba3681766d3cdbd772178082333ef2156aa44ae", "ref_doc_id": "eb914b4b-1f61-42f8-bd2e-b4b1d56965ec"}, "a221466b-1b32-45bb-a1a9-07169edb8b0f": {"doc_hash": "054181ff558884b829b71a5f6c460241aed1cc76f9bf3226dc116c1b1c185936", "ref_doc_id": "eb914b4b-1f61-42f8-bd2e-b4b1d56965ec"}, "a8ecf7c1-2b27-469f-9930-24d85b4ff990": {"doc_hash": "4d92c82d73e362cab1ee5732b2b3c2525635e63910a32a7ccd7e64f0d2311801", "ref_doc_id": "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5"}, "d9a9a7ab-9fd0-4beb-9d9b-2b282a94bdf6": {"doc_hash": "2dbc1b3202a21ade3be11246110ee5785f1c0a0508c25fb053ee764858a8855b", "ref_doc_id": "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5"}, "5c793cb5-f938-4467-87c4-1baeebf0c56b": {"doc_hash": "d7e9c8dfd729a448aed10c5db2e416f9cde044046f6bbcb8e5eaf9eccf4ec5f1", "ref_doc_id": "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5"}, "56a6c303-2ec0-432e-acd4-790d7f5946b0": {"doc_hash": "f53dca6e999cbc29f32eb0dd2ab4d23b0b1616fe3071920908fd3f73c9e5402c", "ref_doc_id": "641b7bea-e30f-40f2-bf15-fe10de32bc24"}, "6bfc28ff-aaf5-4eae-8abe-10d99b52b15c": {"doc_hash": "edd97d3aec0b3b8315e70327137b07b022c7c7fb805f2cd7199480176640fdc1", "ref_doc_id": "81e34460-1af6-4d5a-9004-edaa58c56d7b"}, "4a87dbc3-f64d-42e2-bbe3-b28eebe8a8b4": {"doc_hash": "5e6da37fcef38d943dae75d7d6f04642e7e585a240589968a1d47a52cd6f97f7", "ref_doc_id": "23e1c9c2-c9a8-4a1d-bf1c-1683774a7b59"}, "16b4a3f9-ef31-4167-9d18-fbab3c07142e": {"doc_hash": "e2e09fdaf59acbebf98b23d32cf1e0f8e8adf7e32767c00294cdc7cbab983614", "ref_doc_id": "23e1c9c2-c9a8-4a1d-bf1c-1683774a7b59"}, "19124f06-21ad-4002-a295-5604698876b6": {"doc_hash": "d1fb4ceb37605b83510e7b3c53efa3574cf843bd3f3af62ae856722f27cfc9ed", "ref_doc_id": "8b4ff668-f6e8-4590-aa89-0365a441d113"}, "c393ae62-786d-4fbb-a886-a9fe1f7eaed0": {"doc_hash": "fb13fb2e1848c523c92a0b6b2591d771fa00416b4d2973b57cad5684f9eb4f68", "ref_doc_id": "8b4ff668-f6e8-4590-aa89-0365a441d113"}, "e0f6a0e2-0a05-4e87-9bfc-e52220861e23": {"doc_hash": "acb599ca0dc91121a74b08c45bf4ace27619cde043125685248501044c52549c", "ref_doc_id": "be0df209-e10d-428b-a774-09798cfec168"}, "4d430096-a3c4-4dba-9c52-ace0e480fe71": {"doc_hash": "d741b179c320ca8ac4fd89a7aa8087b389a0dd4492e9f9c5ba5d30d1900541a8", "ref_doc_id": "be0df209-e10d-428b-a774-09798cfec168"}, "9d527d2e-c92e-4f45-8dd6-ac0954956e1b": {"doc_hash": "7f9794045dc787e4a41317bd9013babfc1cec0ea73acbb1f0e652be8b5fc8e5d", "ref_doc_id": "efe25d72-303a-44c9-af0c-b14c834c1102"}, "94e80161-ee2a-4933-bea8-dba51b2b1523": {"doc_hash": "2979a58d953936195034b303d977f6a72d71841791952b6ac329d601f611ee3a", "ref_doc_id": "b0ddc902-9eee-4607-8eb0-91618fc6b1fc"}, "a0363992-611a-4f7c-b93a-56be493f7b4d": {"doc_hash": "4c83096a92ceafff48dd99062cbe6ebbb443ba6f2d1f75f368c024fd9e6785dc", "ref_doc_id": "97d2a85f-a0c8-4601-b4c5-c4e50afa78f2"}, "1e2d2eed-f7cd-4637-8c26-b2415bb74a05": {"doc_hash": "3bcc1eb6804e8852071a6cc51f18f41cc62a63247218c0049874a770ea211600", "ref_doc_id": "a4cbac0d-8847-4e9a-90bc-2a27a35d4eeb"}, "65dc647c-e1a4-4ace-87f9-9a9235e11006": {"doc_hash": "d8c79a4be9e5354e54d484a979a2c3a41411dc2bc652646b52100ff447b74a0c", "ref_doc_id": "5957df19-5436-46bb-9370-ebba5efdbd70"}, "9fe9ca16-90f6-4445-8adf-1ab8e5e4b83a": {"doc_hash": "3756f9bc67aabc8a0bd4cdd808242814078beb9f4bbe54798eb3f051b0dc002d", "ref_doc_id": "03f8fe6d-2d91-4c3e-bc84-3bce48ba8d8c"}, "db799b0a-4ce5-45d5-8a58-041cd29c73ae": {"doc_hash": "721c15b9e6f8e29bc77ec7f035461b3dbaf8ad3742a59a9e0511fac13722201f", "ref_doc_id": "3aecbbfd-1337-4b21-a2bc-c44d8e057d1a"}, "ad7b96be-7da1-4a62-bc4c-ff70b78ff484": {"doc_hash": "4f54ce6d557a38b8a2a885a92e42bac4985021a9cf540298a7a9f3f5d06ec3ba", "ref_doc_id": "348c2210-5bb7-4574-ae61-2a5b9d9d616e"}, "81692e57-9aa1-4403-a628-5fde1fd832d5": {"doc_hash": "ca6648b3c69cd5cbb9d56a48610bd521614e97a3f3074465ba7a59f9a56c8cdc", "ref_doc_id": "811e152e-e305-44ba-b1e8-487fedee66ee"}, "c70b2c36-1a4c-4177-ba71-95d4a0ec0024": {"doc_hash": "b390f9ad9944cfbad2b9aaa42b0f24bea2523f02598dede96c2095262617ea68", "ref_doc_id": "4ba8d192-5cd5-4b44-9f87-1de303463df5"}, "d4a07fb5-ddaf-4f58-9fc3-19a3b30f39bd": {"doc_hash": "6f56c5c7b967a82db5786465a952e1db99a2d4bc86f0ff71fe7939b78313010c", "ref_doc_id": "95f15700-0a2a-4c49-942f-3865b62f498f"}, "83dd77c0-6aec-4afc-aec3-75a60d6e411a": {"doc_hash": "69fe3e219049b0e9357b49d09aa6e4353b7415ae8998d6a1bd766bbd7ebc6bf5", "ref_doc_id": "a63d75f2-3e08-4d2e-b037-e668313fb247"}, "6c2c2f9f-8200-4fe5-b6f1-ebce248d2da2": {"doc_hash": "ee1774c534a856df65477f8b7b22ca3d815b0210e252ca2b59053cf72120e6bc", "ref_doc_id": "09e24700-2aca-4b58-8dc3-c56b3024edda"}, "b508e208-e720-4192-8fc0-ba5113a28d41": {"doc_hash": "0e964cdd01055250513911b67d4ef38ce2a9baad6911cc23464fc3c4de273659", "ref_doc_id": "d57b095c-b7a1-4112-bd9d-1369aea1f48f"}, "323b43ee-a321-4fa1-8055-a2b18e39cfb8": {"doc_hash": "7c0271c030c445f275bc8bfa71662b60948659f9bd411bf8b760e1949cb8559a", "ref_doc_id": "9f82e593-757c-4226-a86d-826c33d1e966"}, "2da8f2a7-1cd1-4975-93f6-ead637db9ebd": {"doc_hash": "0809b663c8e3a4b6feedc62dc4c8cc16519997dd3a0134134384efaf3ee47af1", "ref_doc_id": "4027aefd-1980-44f2-9d38-24e44221c1b2"}, "ed248ed8-df79-4d76-a6f8-df562abf4010": {"doc_hash": "1524527f9886d46218ad572414d2946dcec24aa89252ea1b209f5b2529705206", "ref_doc_id": "58d23fb4-090b-4775-8604-8c6553be3bb6"}, "37407ece-921e-4d91-b526-6fd844e02323": {"doc_hash": "21a08fdec247c5318298b8b1151bf20829a6a66197134c7e117ac5cbdccd34b1", "ref_doc_id": "735b2788-3eed-4b1d-a388-3a1708218b64"}, "c443b9b1-1949-466f-9e5f-cae6afe94fa6": {"doc_hash": "b36723d0b0b608e6ae3fdccac8baf43466eb6f768c696f5bcd4cad380683ba4e", "ref_doc_id": "49819983-bd32-4aef-8203-7e915d377780"}, "7427ead6-29ee-4a01-b889-325358aa4932": {"doc_hash": "9fa2cab9052ac3cb7122da45a5062e91a453d99d5dbf518d46226e8a70512197", "ref_doc_id": "6a98f1b8-1123-41d5-ab89-c4969435656c"}, "0d8eba28-088e-4444-94d9-2c6b8b109e5f": {"doc_hash": "3cae1e6654e1904ab23966fefc19e491a840a295ba7f431ba3d3108ed2bdac1c", "ref_doc_id": "3800d5bf-1bd3-4437-bf19-399c0bf25b3e"}, "6dd5e468-905e-4e8b-b578-9325ded40dc1": {"doc_hash": "69e0edfffb7bfdd2723cbcc3e1cb43b59b897496f0e62609eb6490b5a097fbf7", "ref_doc_id": "48e5f5ce-a954-4388-bb20-f2e59d04b53d"}, "ef43f369-f887-49bb-aecb-2089553f321e": {"doc_hash": "484d8372c15f860376dcd61c02c24d4b7041d1268371b5460d5d0f8d19414476", "ref_doc_id": "5081bf69-3232-452a-bca1-4e2de2ae19ce"}, "41ced6e0-b6e0-4619-bead-216b5a98a6b0": {"doc_hash": "c5a03f043aeb4a4cdba12de2e943f2267eed659f062466bd3b976a3b4fad3e53", "ref_doc_id": "754258cd-0953-45ec-8343-41cfc53ce7ec"}, "8bda9546-c97a-478f-a64a-4456d6c5182c": {"doc_hash": "0f3e00d872d1e68348a36e7eb598d1ae974c44b9c4ea4c49ab277ca627927883", "ref_doc_id": "641afc94-c01d-4cff-ad09-4ed8177620de"}, "3218aa24-c299-4dc1-aa0d-8d760c665d4a": {"doc_hash": "fc39704597edcee9b72cc9e56d75dab07d5209df20328604778e8c50fb1607df", "ref_doc_id": "298b40d8-852b-4e32-b493-c21ca2888ec7"}, "b921abb6-c936-4baf-a32d-b4cbd22c0de7": {"doc_hash": "cc2d98191ef12d28f62b808f123e6c40a66950ab518e1e21e8b7e17ebadfc219", "ref_doc_id": "403bb27c-4db0-4dd8-afc1-2200d4240e35"}, "e8dff125-c275-4286-970b-140ae5c820b7": {"doc_hash": "e2a5ec2c2212ce58a090fd548645a7e8268c29a0b3ae07073a330e78cb78d28f", "ref_doc_id": "919de205-9105-4709-a691-669b10f94571"}, "db559fe4-0f04-4838-a1b6-07868e92e04b": {"doc_hash": "df8ce74d4629c741525613685e5d7d4c970c256c3ed325f1d7a22086bf60151b", "ref_doc_id": "cdfd995c-4015-40e8-8191-0572d5f6bad9"}, "6c00e5b1-d08f-4f03-80ee-410d3e49a937": {"doc_hash": "60f2a2039c40ac34ef276f26e523aed3513659df9ed610831bc2429ff796a744", "ref_doc_id": "40eb348d-b6d9-43eb-ab3c-eefe00567789"}, "fc1d6b64-dd47-478a-b17b-33300ac8e0e9": {"doc_hash": "2c9a204aa4c1fb7f49adffd59178208ec444632e1eebd8c8a9a5e27d94b0ee60", "ref_doc_id": "0943d2a7-75b6-4057-b8e2-60d039e39fd8"}, "066a9c4b-854c-4f85-b0e6-a84d89cd6f89": {"doc_hash": "761ac3b83e37c681d45156a0ea3ef4f312107cb643360b3d972b43c4e48dc3a6", "ref_doc_id": "d18ddba6-a70f-4716-9456-3cab3b4a1302"}, "bfe3f780-a670-469c-bee8-29f35fcbd475": {"doc_hash": "2bb8d7656c22d670ca8e22924adaab6aedd8a4e31a4ddd0fb21ca0e569a062e3", "ref_doc_id": "46ce1934-2ac7-4722-95f7-e517b0627c6f"}, "20dd2f21-844a-4f9b-8271-9447088700ba": {"doc_hash": "17431620d4009d740c2c0893128508c06b90ffa72a64de681c3ab3444dd80a01", "ref_doc_id": "f055d703-23a1-420f-9c01-1788556ab374"}, "43872589-5160-41d3-995e-62447b9f0304": {"doc_hash": "ca4e161b6eb034bc2e692d33b454fe03d400fc89729940a5e16260815d3dc8f3", "ref_doc_id": "ccc9d01c-00b7-47c8-b2b1-386a05dc5740"}, "e05bcfbe-b7f4-49ab-9acb-8e27e5914151": {"doc_hash": "0a899fd82ee81921cfd9875d7dd5efe3c6ec0acae10b76c9d70bfe564f1be6f7", "ref_doc_id": "9fad2a54-8df5-4fd4-b4a7-fcafc2032d3d"}, "e4822573-38ff-4d5a-a419-863fe749c8b9": {"doc_hash": "6af89c148b718d6849959e2f3ecc8ea2d201703d36548abe742aa216797cb69c", "ref_doc_id": "06dca54d-7f84-4a52-908b-33c4063aa480"}, "b3f8cb34-ce29-43ca-8668-29fca633e3c2": {"doc_hash": "bf3912ec06814b90f5c93162631840ddeececaf5c57446010e41553804e1c208", "ref_doc_id": "ae969e3a-1e27-491e-9a0b-86b25777661a"}, "c40d0d8b-bfc0-4ed3-a30c-fa3ad5a69e5a": {"doc_hash": "f93dbaa63adbf8402a9a1b7388a37ed6113efaf6ad4eb8e37af2220e083f910d", "ref_doc_id": "41dbe945-48f3-45c3-b7a6-a7b6642f131f"}, "b9dae3d2-bd00-4059-bbfe-e24c1afa845d": {"doc_hash": "a6810100cd69abac1a8eb9ecab45ae48a7f693d838b0bdc7872b75e1eba35433", "ref_doc_id": "d427b32c-885f-42a5-834b-a3ae4bec4fde"}, "bcaa1cd5-c008-4591-a191-9aecd08b2bbb": {"doc_hash": "b19b5876bfcf7dfc095a97cb7e8dd6fa3e94ca9bc1c69823e9685f633addd676", "ref_doc_id": "d427b32c-885f-42a5-834b-a3ae4bec4fde"}, "5e98941f-7c54-4596-9fd0-e97d2571a9a9": {"doc_hash": "7b6f7f921cacb791bf8e8e220cb44727bd7ee8550afe2f9195b2754dff972524", "ref_doc_id": "484a24ce-7a69-46d6-b488-d96e6c9301ae"}, "e6fb0571-4e0b-4831-a85f-a65fc90e074d": {"doc_hash": "9ca83aefe894c376b057b5e5a25fc41fe8922cfc02fce05155c8eb1c59d5914f", "ref_doc_id": "484a24ce-7a69-46d6-b488-d96e6c9301ae"}, "36e1e56e-af5b-4fd3-83fb-6eed394817f7": {"doc_hash": "1d05b1acfce4a5749098646565760aa7ddc3cae36692c6eaf90eaa83cf9e36f3", "ref_doc_id": "39b4744e-1b20-4ec5-80ff-a1920ed4350e"}, "a8cc18e0-1ba0-4292-8507-b31109161c74": {"doc_hash": "976ffc929525c4448d6dab3f65819d16aceea221c763abed792625a83e5a1bf7", "ref_doc_id": "60dc5051-fe7e-4362-9056-72a8645418ab"}, "94be6548-705c-4a68-995a-ddd6c80b530f": {"doc_hash": "a8e974760974156447eeb5df7c2038ebfc925af1cbe06f0d04fd0b78f9611184", "ref_doc_id": "41542e1d-81df-456d-a0bb-7c8a9c4ec335"}, "95d82e12-4c77-4e90-8357-787f9e07bc56": {"doc_hash": "e96a38f42c5eccb6065cf9d428fe02168a689324b9a763f477b6e5dd965f4d2b", "ref_doc_id": "f9b4481c-7138-4c72-8177-be02e68efbf5"}, "a5eb95ff-3f1c-40dc-badb-e2644e04dedb": {"doc_hash": "e034ffc1f4571b10e2d863d2728eb0f2cbed4baab72ffa2068248e9d09d7cde8", "ref_doc_id": "f9b4481c-7138-4c72-8177-be02e68efbf5"}, "17bd514f-85aa-4524-90c8-c22784d13e76": {"doc_hash": "c41c69cfce93f43ca0745c560a68031cdeac439406e87f24de5ad0e483382295", "ref_doc_id": "46a4e7ba-994f-4db8-b32d-a9baf73fd5ef"}, "4417db60-b581-4649-b83c-1af3b24265b1": {"doc_hash": "0f47697bb9ab73bd7a6bd8d7be127f983b1d201a29907912ef5afe10ab93ac3c", "ref_doc_id": "46a4e7ba-994f-4db8-b32d-a9baf73fd5ef"}, "511d2c90-3e22-436b-953e-437b8333a8cc": {"doc_hash": "6ee928eb28f7508a536c6c32c8c68ce3953ce9cb3dab713f1faa1173c29e4135", "ref_doc_id": "254ead42-0db8-4735-8290-db16f4dddd6e"}, "a5d18c41-fa28-4ac5-8dab-3e094e7c8edb": {"doc_hash": "8eb3835fe4e9c4556d92a3d185a8e34c72c966c41903489387b2f928e2f18d06", "ref_doc_id": "254ead42-0db8-4735-8290-db16f4dddd6e"}, "2ea3dbfc-ce8e-46df-b6c6-a5a5da68ed65": {"doc_hash": "6c35730d0b783bf2247aa12977b519af6de5056cdc82d3a92f601d16ff35470f", "ref_doc_id": "0e04493a-736a-426a-96c5-c4b80c409b77"}, "224d0e89-dbbb-44f9-b776-8a9dc5032daf": {"doc_hash": "d2961991d211cf7190f7135559225138c6c7405305427f70ffc1230d8ad8aee6", "ref_doc_id": "0e04493a-736a-426a-96c5-c4b80c409b77"}, "edca4391-6142-449f-bd2f-d0b0b226cd9b": {"doc_hash": "5e85b82df880378ec722d4558814164f063871a3bd869b317c97dc86508fd1d9", "ref_doc_id": "6728b914-6bae-4d42-a8c8-acec4267ebf8"}, "2fe585d4-e52b-4cae-b07b-ba92af62a4c0": {"doc_hash": "e843bfa78a93ab9db0a1ff4f0b5098ae626b8746ea29afdef2ea0213be0f7060", "ref_doc_id": "6728b914-6bae-4d42-a8c8-acec4267ebf8"}, "05f7c954-ed6b-43cf-8c58-0dac48956a4e": {"doc_hash": "c249e34160c8de15950126b4e7390dd4416db3a426a9f3a92e045e5319ac4574", "ref_doc_id": "24ddc37a-b7d2-49a5-a3d0-e9f31067e5b2"}, "fa5cd7b0-7f53-4bbb-96ea-253300b14c9c": {"doc_hash": "c2cfe8460ee3df03de071bcfe668ff3dfcdaca5f9851e742289d8375f1042c05", "ref_doc_id": "24ddc37a-b7d2-49a5-a3d0-e9f31067e5b2"}, "07a95ace-742f-47d4-9cf7-0d15ce78bbfd": {"doc_hash": "8d664884fc118c59dc16b58eebe582631aca44072c887342b12b60238f8390e2", "ref_doc_id": "e8d494a8-fa45-4598-a554-c4da471c61db"}, "0f06620e-3c59-4f66-967c-e223a1b5bd8c": {"doc_hash": "4b8826ace8ebd2e679a846ad440c04af8d831ed17df867baa82a045894ca265a", "ref_doc_id": "0f19b229-380d-4dcb-8663-6be644a555ff"}, "794ce92f-25b5-4988-acf1-4f54f9eaa362": {"doc_hash": "fd30ae75f94358a88f1437ea790ac2537c029e7a30a6f871ce2efa367fb031b4", "ref_doc_id": "10bc0395-32dc-4b8d-8483-25f55939c297"}, "78303da7-ef4d-45e9-88d7-0d311352c674": {"doc_hash": "6cf1dd03b7256750a214b07478d1445ac087fea056b8b45fdc1c571a80cead1f", "ref_doc_id": "10bc0395-32dc-4b8d-8483-25f55939c297"}, "489693f9-1f88-4ac9-b1f3-9c538d377958": {"doc_hash": "bc0bf54c14228a133f9afaf2983475705002f25ef95b3a1e4b5591cab1272ecd", "ref_doc_id": "cf25075a-e48a-4748-b127-e8767de9d36f"}, "63bf8dca-8fff-44b5-8b82-9e1dd943a51e": {"doc_hash": "8a03dc3b775f75ffbd0b32f16cb8c7d9a8c407d2226d6f67f88f1392326dba46", "ref_doc_id": "0a512118-983b-4b78-b1e1-f619705422ee"}, "37ed85f6-5447-4571-82b9-fd56dabb28e3": {"doc_hash": "8e3587fe9869df7287c97ce4470763b2d63812a0d6a3993cc9ca0d0342ec64aa", "ref_doc_id": "32f2dea0-7eb4-45e5-b795-b0db4b37c2e9"}, "8b836fad-88c3-4d66-be82-db6f308c7ad1": {"doc_hash": "81a0db4dd5a760ae36fc449d254b7aae42ed544e3d4d8f67db35c081e8cc66e8", "ref_doc_id": "bb0f6b83-87e0-404d-ae11-f06d61560c42"}, "69949008-1056-490c-baf9-261234053238": {"doc_hash": "414e8d59cc141970a69b4a17a6db9e4e44f6124c989bd8e2445e1db4b14355b8", "ref_doc_id": "eeee697d-2a7e-4ec2-8599-c42a1cce3320"}, "f94a4021-715d-4f31-ae00-da383ae9bbfa": {"doc_hash": "24efdbce2de9a704dc865a6fd63cf9403eb840d7a5811f14205045b1c389924c", "ref_doc_id": "c12f1715-4cac-4ea7-82a7-50ed580ca8fa"}, "2ad3c1c4-2f4a-41e0-9075-4c8adb7b1997": {"doc_hash": "c05cb94e71599683c2a2a17591b1c67e43377c169001c460498c7f34e15bf973", "ref_doc_id": "9d3427ba-a10b-4bdd-99e3-7e74f155085c"}, "1eade4dd-901e-4ac0-98a8-e6d90272c13c": {"doc_hash": "2ffdd5ae8ec826276e76272f0ae083917e3404f4c9f6d5d99e4e9461b306537c", "ref_doc_id": "c8126d58-ecb7-4dd4-8101-9d65551b561f"}, "873e785f-2f49-4ec1-a3fb-5ca5ba7d8ebc": {"doc_hash": "56a7c63d68eff6442e844fbfb4c517e2dfde38eb210a82f75371d49a8ac752ea", "ref_doc_id": "91e1bfb1-db50-4601-924e-bf96cb6152f9"}, "d8d80ac6-4acd-4818-acce-22c7c4c367e7": {"doc_hash": "5dfdcaee0e00d0fb626a3fb02c71937f232f3e890c5acebaf4cc823123841298", "ref_doc_id": "91e1bfb1-db50-4601-924e-bf96cb6152f9"}, "e2bad904-9837-4704-8a68-bac9ebb02cac": {"doc_hash": "b2938f4a9dd208019bd8244235ad0eeabc7fb41927331874aa5c5c4cad0e96b5", "ref_doc_id": "0b7e5ac4-244a-4b79-a464-c644755820b3"}, "f0d98376-9617-460e-9d5e-a67cdcf34349": {"doc_hash": "84a5ed32a9d8c791f08e9c3fff4157e38ba31afa5087d1d7410ee0e354d7bce1", "ref_doc_id": "bab1c6b0-0506-419a-8653-3eccbcd317c8"}, "18067fe7-aeb6-4af2-b673-3ab1602bc3da": {"doc_hash": "7b980fa70985da0998b5e341342e1247579c3216daad04dc4b859361ff0f701d", "ref_doc_id": "9430f43a-e0a0-4a62-b268-8930edd07c4c"}, "458ed04a-e706-4cbc-8bb1-88f9ea565857": {"doc_hash": "37cb4e988acd9b09222bcfa345dbaccde61c11d213a8f4756db28c4a1b12935f", "ref_doc_id": "1fc5a210-9693-412f-b1a9-19ced93c0de8"}, "cc0c8bac-600d-4e93-b3c4-dc21bcdc3fc3": {"doc_hash": "2f5828fc462754cd076a9ee8a612b85a537f4a2850ce1af7eaaf21948e62e743", "ref_doc_id": "0b85d16c-db0d-43a6-a9d4-ce16899d04ac"}, "31cfc903-3ba7-493e-9b49-a738d55fbfb7": {"doc_hash": "ca6fadcd406234f40f9f4f16639f7f297613f313dd2cf9dcc58e157299c0011f", "ref_doc_id": "0b85d16c-db0d-43a6-a9d4-ce16899d04ac"}, "4d1ae717-5a78-473c-8505-a0bf92275f7d": {"doc_hash": "348faf413f1c76f90dd84c39d19fbc99017ad86bc4b70e6cf17d5ed41e8fd71b", "ref_doc_id": "64cba4a5-9304-4010-aa7e-f0f653c6d862"}, "65091d16-57ff-4a16-9c47-c3f9c6e31b6f": {"doc_hash": "df787ea372b6751071528c4e57ec6f23cd8bc301fe192793503a0243fd83a862", "ref_doc_id": "9d8fd11b-99b8-4d37-9a1f-71bce3fdae97"}, "1b9a7fa6-c566-411b-b821-4e09f6dc3b10": {"doc_hash": "f1974f8138f843becd8d3bef6bfd3f07bdac670bc0898e07008545a283da8f11", "ref_doc_id": "e5c3d456-590f-4330-a5d5-fed57d79ff36"}, "7564dfba-b477-4580-94a2-4b63cbc938ad": {"doc_hash": "48e46c7794cf308834b9e076d37f1f809f6ce127b1c6b6063786a80959bd2746", "ref_doc_id": "c2c2e657-f85d-4e94-9c73-a6e4b96b3021"}, "b4b98639-4778-495a-88d8-a2f4cb0059f1": {"doc_hash": "2930c297318af1e9e18251cf9e795b8b89bcee60e6afbf7912209b28ab52695a", "ref_doc_id": "34f9a327-498d-4879-9a8d-844577a2daa1"}, "be63b4c5-3b00-458e-a5e1-830add89965d": {"doc_hash": "b93add06e16a316e03bbb4c6b56dc0bebbec92d131bdf979560af583c63fd2f2", "ref_doc_id": "34f9a327-498d-4879-9a8d-844577a2daa1"}, "a6f08e2d-ccdf-4ec3-924b-035baf1eff67": {"doc_hash": "6c12bc3d70622fa15107d8f9b8a20cad8108cf885deea3e26f4512c0d5066f7b", "ref_doc_id": "0f469b83-a3f0-4107-a753-8ec2c8cb31ff"}, "48e1e94e-84b4-4a18-8385-d4ccf7f41cc5": {"doc_hash": "8dcb03e5a841d074af06219ee18820557628a4cb9c718a5dc5356805a55fa09c", "ref_doc_id": "b4ef92c7-211e-43b5-8e6f-a5efaa4f2f82"}, "a7959e2e-0fc1-467d-99ea-94c82405e353": {"doc_hash": "bcb30a2e105987a94ae1e931d5f90c4f451c41da1323372c275a98959c124d3f", "ref_doc_id": "0812187d-e8e0-4a17-a518-e0984dc0f698"}, "bd6ece58-bfb4-4e0f-9333-a866e95d0f28": {"doc_hash": "5a2001cdf59a86e736d45775981c9b02f5b57713dfb3216ff1780a4545a4b617", "ref_doc_id": "bcf79534-96e7-44cc-bf59-dc81cf08e4ab"}, "e8265aa6-7f4c-479d-9064-453eab10dfc1": {"doc_hash": "78097af7115b92426de5cee374c4b15ad8e4f75d85a04791a8098a54e51bed76", "ref_doc_id": "1576892e-3143-42d6-b64d-de6da23538f7"}, "268b1086-16fa-428e-83cc-ea32a8d82250": {"doc_hash": "a112aa136b118ffe5e63d0e29da94e5c9482a0ca1374a6634efe398cb34c0de4", "ref_doc_id": "0a7414c5-7244-406a-a454-86a587ca7cfd"}, "c1174708-3ea5-4ebd-a61d-fa64366a62b4": {"doc_hash": "183e2e55dedbe0985493d3eaafa2fe9c8eddb6c833c4c51c660cacd42a2c5544", "ref_doc_id": "96766a91-b7d3-4959-b347-4fba728da5af"}, "ecb5a3c6-64f9-4fad-afbc-5ebd3493f903": {"doc_hash": "d094439ba392f3a3dee238ec7c2804cb0574bfab7f5e5686217384d9043366f6", "ref_doc_id": "2314e47c-be7c-4cdb-98ea-d45ab179fcdc"}, "0d6daeb0-8638-4c87-8d90-e51c2e6507a9": {"doc_hash": "90c50613484b905ea46468fb41646094a381177ce926ecf4fbd657b7d67cbbbe", "ref_doc_id": "975645b4-cda9-47f8-a006-1ab65bab843b"}, "a2701327-33a7-4c35-b65e-e813b041d956": {"doc_hash": "11bcd6074263e785651d591f239424765305f952b8a1e069d2b7e1c04eda126d", "ref_doc_id": "96664e48-1a32-4bb6-9ce4-feb787ef777e"}, "d0b721fa-9090-451a-bb74-46051c5f7aa7": {"doc_hash": "3f06a7407be83b792aa50dee46b1fc13ee5cbbc0b6151ec280936f55fe7d55d7", "ref_doc_id": "00a2c5d2-f72a-4770-bed0-192d6765f10a"}, "be61388e-52bc-4a49-aae2-06e96dfafa5f": {"doc_hash": "783115d5986f98eb8d91cd612779d938d0fb66391b20f23d20aa2645450d5dcc", "ref_doc_id": "35d896db-c7ba-4293-8624-6b0bc52a0672"}, "928b5667-e4b0-4bd3-88b1-28dba7a633d6": {"doc_hash": "146789e09ee2f290867a9a5c51b66a2d640522bcbf67fd73d8b6f9cd494fea58", "ref_doc_id": "bf490124-91f3-4a3d-97c0-927860b1b2e2"}, "6c81a152-c40b-4527-8124-d49e24034cf3": {"doc_hash": "0375dadbd472c21efdd545475fb0e6bbdc2d37d27a03efc3cd5c05e51c2a5c44", "ref_doc_id": "bf490124-91f3-4a3d-97c0-927860b1b2e2"}, "ff07176c-b627-4a2a-a54b-45e733ba8659": {"doc_hash": "fc7c3e3f8b7521907d4315d412db2070befac2c7d7ac7076daa1b7bfb0d614a0", "ref_doc_id": "356c7340-621d-4bc3-b018-2504dce2f9ae"}, "80fd1ced-ee9c-451e-adc3-8199e41e3878": {"doc_hash": "b225705362edd195ce63311d5663a4568e97ad64d14ecee4520f34a6245e39b7", "ref_doc_id": "356c7340-621d-4bc3-b018-2504dce2f9ae"}, "30ea4291-7851-4dc0-abca-f740579dee52": {"doc_hash": "a61ddaa028d40a8264bdef5d029dabea109528491477c1492309fefcef7b5857", "ref_doc_id": "3ebc47b0-9314-40b5-8523-af7cf8afbb3c"}, "bc907492-56b1-4cd7-9452-96f95e4a903a": {"doc_hash": "18b19b8ba536107adf69247f237b1201435fac71059f764235470f77ce327dce", "ref_doc_id": "3ebc47b0-9314-40b5-8523-af7cf8afbb3c"}, "180c9790-9860-495a-8979-ac5b6b2ff9a9": {"doc_hash": "2ef4b67fc6bca8b4829675da34f02a38f2f442c2b7c3c1c9787a99b9ebeddf79", "ref_doc_id": "3ebc47b0-9314-40b5-8523-af7cf8afbb3c"}, "be19498c-230e-484c-ad28-02850c920819": {"doc_hash": "b950d513af45aa7a69ff45b39515f8265fbe605a2a6bf088713a970e0a0d91c0", "ref_doc_id": "17aa85d7-68b4-4c16-afdb-cb1dd9056ba9"}, "a7a4db25-63ce-431d-ac62-a36072e4dbe7": {"doc_hash": "cba307cc553b57e77ff4c58cc02240e964dd00320f32ba28bdd16de61a12f9ef", "ref_doc_id": "f263589a-3642-4dca-98e7-386bebefcbac"}, "d8a36c8c-a59f-48ba-814a-a39735201c2b": {"doc_hash": "a0d581666c8895f1ccf734a7165fd133870c1cfc7f5f25d60d284b24f76a464d", "ref_doc_id": "01647296-4f7d-4bd9-a7f4-29f3d9ef953f"}, "063e5c85-1b18-4fc5-9972-8d9941053ef5": {"doc_hash": "306fd5d6177cf3ae299d3d3dbd66435150e7223b5d1bed2cb0c4407b6ddc1595", "ref_doc_id": "19a59804-9e6b-4b81-b9ef-adfda128916c"}, "1f36007f-1d8a-478b-9f10-a038793e218a": {"doc_hash": "e6c80c8b9eaacc9e0d125e2e4501112f77284542a6e03dbdaa1166b58dfcb4d5", "ref_doc_id": "00dd30a4-e18f-41c2-8188-b5e6f5923f89"}, "8d5ba2e6-ec9c-4989-907b-0a767714462d": {"doc_hash": "1a4e987f1a328fd1e4ceb8c38afde1ae73c3d62e5f5c213d235899698a0c3455", "ref_doc_id": "00dd30a4-e18f-41c2-8188-b5e6f5923f89"}, "f02a0b14-51fd-43af-9cd7-b8e209a29fde": {"doc_hash": "40f2ecfbb1c8970239235123b7e2be389614f45d1b0b5f97ea336c62da037156", "ref_doc_id": "e3697d59-355d-4095-b8b6-86a6eba6b1bc"}, "b2525e28-d628-4082-bc0c-fb74737a83fa": {"doc_hash": "b7baee95363d89b9649856417a139209a7793b61643ca57a3c5e44eeefff1fee", "ref_doc_id": "6ce98732-2941-4f4a-8704-065dc10bf364"}, "d63c565c-7888-42d2-8277-50b526811fda": {"doc_hash": "6d8a903b8d37aff5c1ff965776fd627e41fd046395c0f01d75b0e5a75e8d3262", "ref_doc_id": "741d8f7f-0813-4fa2-bb2f-97b837056729"}, "cf37967b-9f21-4425-827f-df61ecde1ae3": {"doc_hash": "0b6afe454b1e58cc25fc71cd4ae0179be65aa4fb0f76661e895ac91d215bc1f4", "ref_doc_id": "989f8002-d415-4ac0-95af-b3625648eb89"}, "24fa86b2-00d7-48b5-99cb-509ed7dc5328": {"doc_hash": "d21424d7d9823d852c3bdb371d60e2d0bfcd93b32958197641d74fa6504d338c", "ref_doc_id": "94afbd2d-bc34-4eb8-ac60-f09f9c237e3c"}, "2ea6d8e9-49a8-4687-9a7d-103d838e6a46": {"doc_hash": "dda24e806e9909270fc71aa6f4e570ee3fc7c2f6c8a8dfa01e1a7dec6898d2de", "ref_doc_id": "3c50bcb5-fb19-449e-96b7-c3275233ea0b"}, "4c2f4902-becc-4115-8a09-20dd5d3b00fb": {"doc_hash": "fcef089c663d83a41043050c7df14a2389dadd6817827ba58263eddb3369fe9c", "ref_doc_id": "5e4c2966-6794-4159-8155-8be9797ab81c"}, "6bbd9235-645f-41f8-83b4-d6a5a3311874": {"doc_hash": "e2a0e3550fc14293fcf813e002c7fa76d1a6265d02d60fb43944491edd2a9444", "ref_doc_id": "4c7d98cf-f8bc-4563-bc79-8d22d30a1004"}, "f531710b-a17c-4893-99a2-f0dfa7c0d5b6": {"doc_hash": "27dc7455483e3015e80208938e18337b67ebc6e0cd31d3fd8c3314735bb34382", "ref_doc_id": "4c7d98cf-f8bc-4563-bc79-8d22d30a1004"}, "18fdf0e6-4a92-496a-918b-68a0bae88b71": {"doc_hash": "8aa9eb36310d38fe5b8dc997634cc4f4d1fc2ba6aa363e5ea0c6738782ebcf7a", "ref_doc_id": "4c7d98cf-f8bc-4563-bc79-8d22d30a1004"}, "7db85c03-c714-49c7-868e-e843bea0b1f1": {"doc_hash": "195b1ce2681156c63c5343ca08ffc071a83874915fcd03910a4206e12bd54e68", "ref_doc_id": "4c949edd-6175-47d0-ae94-a13d50bbd7d9"}}, "docstore/data": {"990ab1b4-0ee4-497c-a7c2-a9b16ed130e6": {"__data__": {"id_": "990ab1b4-0ee4-497c-a7c2-a9b16ed130e6", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.oracle.com_0_0.txt", "file_name": "docs.oracle.com_0_0.txt", "file_type": "text/plain", "file_size": 2146, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d86e17be-5537-4f39-9afd-43ded0c54b86", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.oracle.com_0_0.txt", "file_name": "docs.oracle.com_0_0.txt", "file_type": "text/plain", "file_size": 2146, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "71ea1715dfe91a2e796b69a4189ad163a5a7b71f1be59601690aaa7ec0ad6094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1fe61e41-da00-4f68-8743-a1b3495e26a6", "node_type": "1", "metadata": {}, "hash": "565152aef318bce3ba946998e388370137bcc6640d816aad838f3f904ce4f2a1", "class_name": "RelatedNodeInfo"}}, "text": "Java Documentation - Get Started JavaScript must be enabled to correctly display this content Go to main content Help Center Home Cloud Applications Middleware Database Big Data Enterprise Manager Engineered Systems Java Servers Networking Virtualization Storage Operating Systems Industries Browse All Products Home Java Java Documentation Whether you are working on a new cutting edge app or simply ramping up on new technology, Java documentation has all the information you need to make your project a smashing success. Use the rich set of code samples, tutorials, developer guides, API documentation, and more to quickly develop your prototype and scale it up to a real world application. Java Platform, Standard Edition (Java SE) Java SE lets you develop and deploy Java applications on desktops and servers. Java SE and component technologies offer the rich user interface, performance, versatility, portability, and security that today's applications require. Java SE Documentation Java SE Licensing Information Product License, Commercial Features and Terms, Java SE Licensing Information User Manual (LIUM) , Readme Files, Release Notes, and information on Data Collection Java SE Technical Documentation Java SE Components Documentation Java Embedded Java ME Embedded is designed for resource-constrained devices like wireless modules for M2M, industrial control, smart-grid infrastructure, environmental sensors and tracking, and more. Java ME Embedded documentation Oracle Java SE Embedded delivers a secure, optimized runtime environment ideal for network-based devices. Oracle Java SE Embedded and JDK for ARM documentation Java Card technology provides a secure environment for applications that run on smart cards and other devices with very limited memory and processing capabilities. Java Card documentation Java Platform, Enterprise Edition (Java EE) Java EE provides an API and runtime environment for developing and running large, multi-tiered, reliable, and secure enterprise applications that are portable and scalable and that integrate easily with legacy applications and data. Java EE documentation Back to main content", "start_char_idx": 0, "end_char_idx": 2146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1fe61e41-da00-4f68-8743-a1b3495e26a6": {"__data__": {"id_": "1fe61e41-da00-4f68-8743-a1b3495e26a6", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.oracle.com_1_0.txt", "file_name": "docs.oracle.com_1_0.txt", "file_type": "text/plain", "file_size": 4795, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e3cb524-0e8d-4bb2-9054-a5c6a8548bcf", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.oracle.com_1_0.txt", "file_name": "docs.oracle.com_1_0.txt", "file_type": "text/plain", "file_size": 4795, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ce829eba117680c07342a8a3a0294192bccd76fdc1abbf01048d7159aa46468e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "990ab1b4-0ee4-497c-a7c2-a9b16ed130e6", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.oracle.com_0_0.txt", "file_name": "docs.oracle.com_0_0.txt", "file_type": "text/plain", "file_size": 2146, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "71ea1715dfe91a2e796b69a4189ad163a5a7b71f1be59601690aaa7ec0ad6094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e6a5b1c-ab1b-4a1e-a02b-69410f397c83", "node_type": "1", "metadata": {}, "hash": "2e540b6995c99da00cbce0cedea587972f8965a8fba645f318bb0d6d322efb11", "class_name": "RelatedNodeInfo"}}, "text": "The Java\u2122 Tutorials A browser with JavaScript enabled is required for this page to operate properly. Documentation The Java\u2122 Tutorials Not sure where to start? See Learning Paths Tutorial Contents Tutorial Resources Last Updated 2024-10-25 Dev.java: The Destination for Java Developers contains hundreds of tutorials, news, and videos from the experts. The Java Tutorials' Blog has news and updates about the Java SE tutorials. Download the latest Java Tutorials bundle . In Book Form The Java Tutorial, Sixth Edition. Amazon.com . Other Resources Java SE 8 Developer Guides JDK 8 API Documentation Oracle Training and Professional Certification Java Certification and Training Oracle University Software The Java Development Kit (JDK) The Java Tutorials have been written for JDK 8. Examples and practices described in this page don't take advantage of improvements introduced in later releases and might use technology no longer available. See Dev.java for updated tutorials taking advantage of the latest releases. See Java Language Changes for a summary of updated language features in Java SE 9 and subsequent releases. See JDK Release Notes for information about new features, enhancements, and removed or deprecated options for all JDK releases. The Java Tutorials are practical guides for programmers who want to use the Java programming language to create applications. They include hundreds of complete, working examples, and dozens of lessons. Groups of related lessons are organized into \"trails\". Trails Covering the Basics These trails are available in book form as The Java Tutorial, Sixth Edition . To buy this book, refer to the box to the right. Getting Started \u2014 An introduction to Java technology and lessons on installing Java development software and using it to create a simple program. Learning the Java Language \u2014 Lessons describing the essential concepts and features of the Java Programming Language. Essential Java Classes \u2014 Lessons on exceptions, basic input/output, concurrency, regular expressions, and the platform environment. Collections \u2014 Lessons on using and extending the Java Collections Framework. Date-Time APIs \u2014 How to use the java.time pages to write date and time code. Deployment \u2014 How to package applications and applets using JAR files, and deploy them using Java Web Start and Java Plug-in. Preparation for Java Programming Language Certification \u2014 List of available training and tutorial resources. Creating Graphical User Interfaces Creating a GUI with Swing \u2014 A comprehensive introduction to GUI creation on the Java platform. Creating a JavaFX GUI \u2014 A collection of JavaFX tutorials. Specialized Trails and Lessons These trails and lessons are only available as web pages. Custom Networking \u2014 An introduction to the Java platform's powerful networking features. The Extension Mechanism \u2014 How to make custom APIs available to all applications running on the Java platform. Full-Screen Exclusive Mode API \u2014 How to write applications that more fully utilize the user's graphics hardware. Generics \u2014 An enhancement to the type system that supports operations on objects of various types while providing compile-time type safety. Note that this lesson is for advanced users. The Java Language trail contains a Generics lesson that is suitable for beginners. Internationalization \u2014 An introduction to designing software so that it can be easily adapted (localized) to various languages and regions. JavaBeans \u2014 The Java platform's component technology. JAXB \u2014 Introduces the Java architecture for XML Binding (JAXB) technology. JAXP \u2014 Introduces the Java API for XML Processing (JAXP) technology. JDBC Database Access \u2014 Introduces an API for connectivity between the Java applications and a wide range of databases and data sources. JMX \u2014 Java Management Extensions provides a standard way of managing resources such as applications, devices, and services. JNDI \u2014 Java Naming and Directory Interface enables accessing the Naming and Directory Service such as DNS and LDAP. Reflection \u2014 An API that represents (\"reflects\") the classes, interfaces, and objects in the current Java Virtual Machine. RMI \u2014 The Remote Method Invocation API allows an object to invoke methods of an object running on another Java Virtual Machine. Security \u2014 Java platform features that help protect applications from malicious software. Sockets Direct Protocol \u2014 How to enable the Sockets Direct Protocol to take advantage of InfiniBand. Sound \u2014 An API for playing sound data from applications. 2D Graphics \u2014 How to display and print 2D graphics in applications. About Oracle | Contact Us | Legal Notices | Terms of Use | Your Privacy Rights Copyright \u00a9 1995, 2024 Oracle and/or its affiliates. All rights reserved.", "start_char_idx": 0, "end_char_idx": 4738, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e6a5b1c-ab1b-4a1e-a02b-69410f397c83": {"__data__": {"id_": "6e6a5b1c-ab1b-4a1e-a02b-69410f397c83", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_31_0.txt", "file_name": "docs.spring.io_31_0.txt", "file_type": "text/plain", "file_size": 14, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4eb35ebf-fb31-4736-af73-d2c81416eabd", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_31_0.txt", "file_name": "docs.spring.io_31_0.txt", "file_type": "text/plain", "file_size": 14, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2a4190dcfbc795d157ec08bd11a4d56d6cc50a8529db434ea63b41beed5ad00c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1fe61e41-da00-4f68-8743-a1b3495e26a6", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.oracle.com_1_0.txt", "file_name": "docs.oracle.com_1_0.txt", "file_type": "text/plain", "file_size": 4795, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ce829eba117680c07342a8a3a0294192bccd76fdc1abbf01048d7159aa46468e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c42f98e2-0efd-4fee-acb1-12379f74e5ad", "node_type": "1", "metadata": {}, "hash": "d354f645316f14f8ad232280053a2b3cb0c2399f30ce52dbd1691f5872e9b7c2", "class_name": "RelatedNodeInfo"}}, "text": "Redirecting...", "start_char_idx": 0, "end_char_idx": 14, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c42f98e2-0efd-4fee-acb1-12379f74e5ad": {"__data__": {"id_": "c42f98e2-0efd-4fee-acb1-12379f74e5ad", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e6a5b1c-ab1b-4a1e-a02b-69410f397c83", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_31_0.txt", "file_name": "docs.spring.io_31_0.txt", "file_type": "text/plain", "file_size": 14, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2a4190dcfbc795d157ec08bd11a4d56d6cc50a8529db434ea63b41beed5ad00c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b28afe4c-220f-47b8-9d75-c9865d47b3ad", "node_type": "1", "metadata": {}, "hash": "93f2ce4d5a1bb030110a9f93aa75fb25f3ba3e116957e54c04e3cf3be5394374", "class_name": "RelatedNodeInfo"}}, "text": "#boot-documentation-getting-help #community #boot-documentation-production #documentation.actuator #boot-documentation-advanced #documentation.advanced #documentation.container-images #documentation.data #boot-documentation-learning #documentation.features #boot-documentation-first-steps #documentation.first-steps #documentation.io #documentation.messaging #documentation.packaging #boot-documentation-upgrading #documentation.upgrading #boot-documentation-workingwith #documentation.using #documentation.web #boot-documentation #documentation #getting-started-cli-command-line-completion #getting-started.installing.cli.completion #getting-started-homebrew-cli-installation #getting-started.installing.cli.homebrew #getting-started-macports-cli-installation #getting-started.installing.cli.macports #getting-started-manual-cli-installation #getting-started.installing.cli.manual-installation #getting-started-scoop-cli-installation #getting-started.installing.cli.scoop #getting-started-sdkman-cli-installation #getting-started.installing.cli.sdkman #getting-started-installing-the-cli #getting-started.installing.cli #getting-started-gradle-installation #getting-started.installing.java.gradle #getting-started-maven-installation #getting-started.installing.java.maven #getting-started-installation-instructions-for-java #getting-started.installing.java #getting-started-installing-spring-boot #getting-started.installing #getting-started.system-requirements.graal #getting-started-system-requirements-servlet-containers #getting-started.system-requirements.servlet-containers #getting-started-system-requirements #getting-started.system-requirements #upgrading.cli #upgrading.from-1x #upgrading.to-feature #getting-started-upgrading-from-an-earlier-version #getting-started.installing.upgrading #upgrading actuator-api#audit-events.retrieving.query-parameters actuator-api#audit-events.retrieving.response-structure actuator-api#audit-events.retrieving actuator-api#audit-events actuator-api#beans.retrieving.response-structure actuator-api#beans.retrieving actuator-api#beans actuator-api#caches.all.response-structure actuator-api#caches.all actuator-api#caches.evict-all actuator-api#caches.evict-named.request-structure actuator-api#caches.evict-named actuator-api#caches.named.query-parameters actuator-api#caches.named.response-structure actuator-api#caches.named actuator-api#caches actuator-api#conditions.retrieving.response-structure actuator-api#conditions.retrieving actuator-api#conditions actuator-api#configprops.retrieving-by-prefix.response-structure actuator-api#configprops.retrieving-by-prefix actuator-api#configprops.retrieving.response-structure actuator-api#configprops.retrieving actuator-api#configprops actuator-api#env.entire.response-structure actuator-api#env.entire actuator-api#env.single-property.response-structure actuator-api#env.single-property actuator-api#env actuator-api#flyway.retrieving.response-structure actuator-api#flyway.retrieving actuator-api#flyway actuator-api#health.retrieving-component-nested.response-structure actuator-api#health.retrieving-component-nested actuator-api#health.retrieving-component.response-structure actuator-api#health.retrieving-component actuator-api#health.retrieving.response-structure actuator-api#health.retrieving actuator-api#health actuator-api#heapdump.retrieving actuator-api#heapdump actuator-api#http-trace-retrieving-response-structure actuator-api#httpexchanges.retrieving.response-structure actuator-api#http-trace-retrieving actuator-api#httpexchanges.retrieving actuator-api#httpexchanges actuator-api#overview.endpoint-urls actuator-api#overview.timestamps actuator-api#overview actuator-api#info.retrieving.response-structure.build actuator-api#info.retrieving.response-structure.git actuator-api#info.retrieving.response-structure actuator-api#info.retrieving actuator-api#info actuator-api#integrationgraph.rebuilding actuator-api#integrationgraph.retrieving.response-structure actuator-api#integrationgraph.", "start_char_idx": 0, "end_char_idx": 4011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b28afe4c-220f-47b8-9d75-c9865d47b3ad": {"__data__": {"id_": "b28afe4c-220f-47b8-9d75-c9865d47b3ad", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c42f98e2-0efd-4fee-acb1-12379f74e5ad", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a5ce0b16861a3ea830b04600d08ff902bf82b91f5744e92c3deed2f44e7fd555", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa0143dd-2b6b-41e8-85b4-225835be74e1", "node_type": "1", "metadata": {}, "hash": "8fff366b7d06f48a5f15a91e305827a14ac03951c272b0c74531d36c9fe77af6", "class_name": "RelatedNodeInfo"}}, "text": "response-structure actuator-api#health.retrieving actuator-api#health actuator-api#heapdump.retrieving actuator-api#heapdump actuator-api#http-trace-retrieving-response-structure actuator-api#httpexchanges.retrieving.response-structure actuator-api#http-trace-retrieving actuator-api#httpexchanges.retrieving actuator-api#httpexchanges actuator-api#overview.endpoint-urls actuator-api#overview.timestamps actuator-api#overview actuator-api#info.retrieving.response-structure.build actuator-api#info.retrieving.response-structure.git actuator-api#info.retrieving.response-structure actuator-api#info.retrieving actuator-api#info actuator-api#integrationgraph.rebuilding actuator-api#integrationgraph.retrieving.response-structure actuator-api#integrationgraph.retrieving actuator-api#integrationgraph actuator-api#liquibase.retrieving.response-structure actuator-api#liquibase.retrieving actuator-api#liquibase actuator-api#logfile.retrieving-part actuator-api#logfile.retrieving actuator-api#logfile actuator-api#loggers.all.response-structure actuator-api#loggers.all actuator-api#loggers.clearing-level actuator-api#loggers.group-setting-level.request-structure actuator-api#loggers.group-setting-level actuator-api#loggers.group.response-structure actuator-api#loggers.group actuator-api#loggers.setting-level.request-structure actuator-api#loggers.setting-level actuator-api#loggers.single.response-structure actuator-api#loggers.single actuator-api#loggers actuator-api#mappings.retrieving.response-structure-dispatcher-handlers actuator-api#mappings.retrieving.response-structure-dispatcher-servlets actuator-api#mappings.retrieving.response-structure-servlet-filters actuator-api#mappings.retrieving.response-structure-servlets actuator-api#mappings.retrieving.response-structure actuator-api#mappings.retrieving actuator-api#mappings actuator-api#metrics.drilling-down actuator-api#metrics.retrieving-metric.query-parameters actuator-api#metrics.retrieving-metric.response-structure actuator-api#metrics.retrieving-metric actuator-api#metrics.retrieving-names.response-structure actuator-api#metrics.retrieving-names actuator-api#metrics actuator-api#prometheus.retrieving-names actuator-api#prometheus.retrieving.query-parameters actuator-api#prometheus.retrieving actuator-api#prometheus actuator-api#quartz.job-group.response-structure actuator-api#quartz.job-group actuator-api#quartz.job-groups.response-structure actuator-api#quartz.job-groups actuator-api#quartz.job.response-structure actuator-api#quartz.job actuator-api#quartz.report.response-structure actuator-api#quartz.report actuator-api#quartz.trigger-group.response-structure actuator-api#quartz.trigger-group actuator-api#quartz.trigger-groups.response-structure actuator-api#quartz.trigger-groups actuator-api#quartz.trigger.calendar-interval-response-structure actuator-api#quartz.trigger.common-response-structure actuator-api#quartz.trigger.cron-response-structure actuator-api#quartz.trigger.custom-response-structure actuator-api#quartz.trigger.daily-time-interval-response-structure actuator-api#quartz.trigger.simple-response-structure actuator-api#quartz.trigger actuator-api#quartz actuator-api#sbom.retrieving-available-sboms.response-structure actuator-api#sbom.retrieving-available-sboms actuator-api#sbom.retrieving-single-sbom.response-structure actuator-api#sbom.retrieving-single-sbom actuator-api#sbom actuator-api#scheduled-tasks.retrieving.response-structure actuator-api#scheduled-tasks.retrieving actuator-api#scheduled-tasks actuator-api#sessions.deleting actuator-api#sessions.retrieving-id.response-structure actuator-api#sessions.retrieving-id actuator-api#sessions.retrieving.query-parameters actuator-api#sessions.retrieving.response-structure actuator-api#sessions.", "start_char_idx": 3252, "end_char_idx": 7022, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa0143dd-2b6b-41e8-85b4-225835be74e1": {"__data__": {"id_": "fa0143dd-2b6b-41e8-85b4-225835be74e1", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b28afe4c-220f-47b8-9d75-c9865d47b3ad", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5848e87eaee6762eda0b2ae29f6491af9a4b4c8564638c7254f0f64357eeb347", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7793d6d7-a8f5-4c8c-b75b-318e4df3f517", "node_type": "1", "metadata": {}, "hash": "47c411f912b9edef1f5795d31fa3588f6f20d30f5fa9bc877e8d9f850559aac1", "class_name": "RelatedNodeInfo"}}, "text": "trigger.simple-response-structure actuator-api#quartz.trigger actuator-api#quartz actuator-api#sbom.retrieving-available-sboms.response-structure actuator-api#sbom.retrieving-available-sboms actuator-api#sbom.retrieving-single-sbom.response-structure actuator-api#sbom.retrieving-single-sbom actuator-api#sbom actuator-api#scheduled-tasks.retrieving.response-structure actuator-api#scheduled-tasks.retrieving actuator-api#scheduled-tasks actuator-api#sessions.deleting actuator-api#sessions.retrieving-id.response-structure actuator-api#sessions.retrieving-id actuator-api#sessions.retrieving.query-parameters actuator-api#sessions.retrieving.response-structure actuator-api#sessions.retrieving actuator-api#sessions actuator-api#shutdown.shutting-down.response-structure actuator-api#shutdown.shutting-down actuator-api#shutdown actuator-api#startup.retrieving.drain actuator-api#startup.retrieving.response-structure actuator-api#startup.retrieving.snapshot actuator-api#startup.retrieving actuator-api#startup actuator-api#threaddump.retrieving-json.response-structure actuator-api#threaddump.retrieving-json actuator-api#threaddump.retrieving-text actuator-api#threaddump #appendix.application-properties.actuator #common-application-properties-actuator #appendix.application-properties.cache #common-application-properties-cache #appendix.application-properties.core #core-properties #appendix.application-properties.data-migration #data-migration-properties #appendix.application-properties.data #data-properties #appendix.application-properties.devtools #devtools-properties #appendix.application-properties.docker-compose #appendix.application-properties.integration #integration-properties #appendix.application-properties.json #json-properties #appendix.application-properties.mail #mail-properties #appendix.application-properties.rsocket #rsocket-properties #appendix.application-properties.security #security-properties #appendix.application-properties.server #server-properties #appendix.application-properties.templating #templating-properties #appendix.application-properties.testcontainers #appendix.application-properties.testing #testing-properties #appendix.application-properties.transaction #transaction-properties #appendix.application-properties.web #web-properties #appendix.application-properties #common-application-properties #application-properties application-properties #appendix.auto-configuration-classes.actuator #auto-configuration-classes.actuator #appendix.auto-configuration-classes.core #auto-configuration-classes.core #appendix.auto-configuration-classes #auto-configuration-classes #auto-configuration-classes auto-configuration-classes #appendix.dependency-versions.coordinates #dependency-versions.coordinates #appendix.dependency-versions #dependency-versions #dependency-versions dependency-versions #appendix.dependency-versions.properties #dependency-versions.properties #appendix.test-auto-configuration #test-auto-configuration #test-auto-configuration test-auto-configuration #appendix.test-auto-configuration.slices #test-auto-configuration.slices #build-tool-plugins.antlib.findmainclass.examples #spring-boot-ant-findmainclass-examples #build-tool-plugins.antlib.findmainclass #spring-boot-ant-findmainclass #build-tool-plugins.antlib.tasks.examples #spring-boot-ant-exejar-examples #build-tool-plugins.antlib.tasks.exejar #spring-boot-ant-exejar #build-tool-plugins.antlib.tasks #spring-boot-ant-tasks #build-tool-plugins-antlib #build-tool-plugins.antlib #build-tool-plugins #build-tool-plugins build-tool-plugins #build-tool-plugins-repackage-implementation #build-tool-plugins.other-build-systems.example-repackage-implementation #build-tool-plugins-find-a-main-class #build-tool-plugins.other-build-systems.finding-main-class #build-tool-plugins-nested-libraries #build-tool-plugins.other-build-systems.nested-libraries #build-tool-plugins-repackaging-archives #build-tool-plugins.other-build-systems.repackaging-archives #build-tool-plugins-other-build-systems #build-tool-plugins.other-build-systems #cli #cli cli #cli-installation #cli.installation #cli-shell #cli.using-the-cli.embedded-shell #cli-init #cli.using-the-cli.initialize-new-project #cli-using-the-cli #cli.using-the-cli #boot-documentation-getting-help #documentation.getting-help #getting-help getting-help #boot-documentation-about #documentation.", "start_char_idx": 6338, "end_char_idx": 10713, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7793d6d7-a8f5-4c8c-b75b-318e4df3f517": {"__data__": {"id_": "7793d6d7-a8f5-4c8c-b75b-318e4df3f517", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa0143dd-2b6b-41e8-85b4-225835be74e1", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "98ef6b725320a61e0f9baa4468d28ccd3f4434f31f74163d24bf19114bbdefea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f2c6fd8-c226-45bb-9e69-48c917930c4c", "node_type": "1", "metadata": {}, "hash": "28714627cf2f0d2be22e2ab427190b9f77364105c58e43ca08ab52533debc3a3", "class_name": "RelatedNodeInfo"}}, "text": "antlib #build-tool-plugins #build-tool-plugins build-tool-plugins #build-tool-plugins-repackage-implementation #build-tool-plugins.other-build-systems.example-repackage-implementation #build-tool-plugins-find-a-main-class #build-tool-plugins.other-build-systems.finding-main-class #build-tool-plugins-nested-libraries #build-tool-plugins.other-build-systems.nested-libraries #build-tool-plugins-repackaging-archives #build-tool-plugins.other-build-systems.repackaging-archives #build-tool-plugins-other-build-systems #build-tool-plugins.other-build-systems #cli #cli cli #cli-installation #cli.installation #cli-shell #cli.using-the-cli.embedded-shell #cli-init #cli.using-the-cli.initialize-new-project #cli-using-the-cli #cli.using-the-cli #boot-documentation-getting-help #documentation.getting-help #getting-help getting-help #boot-documentation-about #documentation.about #documentation documentation gradle-plugin#aot.processing-applications gradle-plugin#aot.processing-tests gradle-plugin#aot gradle-plugin#getting-started gradle-plugin#gradle-plugin gradle-plugin#integrating-with-actuator.build-info gradle-plugin#integrating-with-actuator gradle-plugin#introduction gradle-plugin#managing-dependencies.dependency-management-plugin.customizing gradle-plugin#managing-dependencies.dependency-management-plugin.learning-more gradle-plugin#managing-dependencies.dependency-management-plugin.using-in-isolation gradle-plugin#managing-dependencies.dependency-management-plugin gradle-plugin#managing-dependencies.gradle-bom-support.customizing gradle-plugin#managing-dependencies.gradle-bom-support gradle-plugin#managing-dependencies gradle-plugin#build-image.customization.tags gradle-plugin#build-image.customization gradle-plugin#build-image.docker-daemon gradle-plugin#build-image.docker-registry gradle-plugin#build-image.examples.builder-configuration gradle-plugin#build-image.examples.buildpacks gradle-plugin#build-image.examples.caches gradle-plugin#build-image.examples.custom-image-builder gradle-plugin#build-image.examples.custom-image-name gradle-plugin#build-image.examples.docker.auth gradle-plugin#build-image.examples.docker.colima gradle-plugin#build-image.examples.docker.minikube gradle-plugin#build-image.examples.docker.podman gradle-plugin#build-image.examples.docker gradle-plugin#build-image.examples.publish gradle-plugin#build-image.examples.runtime-jvm-configuration gradle-plugin#build-image.examples gradle-plugin#build-image gradle-plugin#packaging-executable.and-plain-archives gradle-plugin#packaging-executable.configuring.including-development-only-dependencies gradle-plugin#packaging-executable.configuring.launch-script gradle-plugin#packaging-executable.configuring.layered-archives.configuration gradle-plugin#packaging-executable.configuring.layered-archives gradle-plugin#packaging-executable.configuring.main-class gradle-plugin#packaging-executable.configuring.properties-launcher gradle-plugin#packaging-executable.configuring.unpacking gradle-plugin#packaging-executable.configuring gradle-plugin#packaging-executable.jars gradle-plugin#packaging-executable.wars.deployable gradle-plugin#packaging-executable.wars gradle-plugin#packaging-executable gradle-plugin#publishing-your-application.distribution gradle-plugin#publishing-your-application-maven gradle-plugin#publishing-your-application.maven-publish gradle-plugin#publishing-your-application gradle-plugin#reacting-to-other-plugins.application gradle-plugin#reacting-to-other-plugins.dependency-management gradle-plugin#reacting-to-other-plugins.java gradle-plugin#reacting-to-other-plugins.kotlin gradle-plugin#reacting-to-other-plugins.nbt gradle-plugin#reacting-to-other-plugins.war gradle-plugin#reacting-to-other-plugins gradle-plugin#running-your-application.passing-arguments gradle-plugin#running-your-application.passing-system-properties gradle-plugin#running-your-application.reloading-resources gradle-plugin#running-your-application.using-a-test-main-class gradle-plugin#running-your-application #howto-change-the-http-port-or-address-of-the-actuator-endpoints #howto.actuator.change-http-port-or-address #howto.actuator.customizing-sanitization #howto.actuator.sanitize-sensitive-values.customizing-sanitization #howto-map-health-indicators-to-metrics #howto.actuator.map-health-indicators-to-metrics #howto-actuator #howto.actuator #howto.aot.", "start_char_idx": 9842, "end_char_idx": 14212, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f2c6fd8-c226-45bb-9e69-48c917930c4c": {"__data__": {"id_": "4f2c6fd8-c226-45bb-9e69-48c917930c4c", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7793d6d7-a8f5-4c8c-b75b-318e4df3f517", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ea89e98a59d93e202e644fa2fcf7834aa733d1e4042019a2263796c1601e8c70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c843af3b-e4ef-4dd7-a36c-3a96104955ab", "node_type": "1", "metadata": {}, "hash": "3d6b9bb9babe37b728895a35ca605e6c8f1ad34276950d1bf3b1e2e47fed7371", "class_name": "RelatedNodeInfo"}}, "text": "java gradle-plugin#reacting-to-other-plugins.kotlin gradle-plugin#reacting-to-other-plugins.nbt gradle-plugin#reacting-to-other-plugins.war gradle-plugin#reacting-to-other-plugins gradle-plugin#running-your-application.passing-arguments gradle-plugin#running-your-application.passing-system-properties gradle-plugin#running-your-application.reloading-resources gradle-plugin#running-your-application.using-a-test-main-class gradle-plugin#running-your-application #howto-change-the-http-port-or-address-of-the-actuator-endpoints #howto.actuator.change-http-port-or-address #howto.actuator.customizing-sanitization #howto.actuator.sanitize-sensitive-values.customizing-sanitization #howto-map-health-indicators-to-metrics #howto.actuator.map-health-indicators-to-metrics #howto-actuator #howto.actuator #howto.aot.conditions #howto.aot #howto-build-an-application-context-hierarchy #howto.application.context-hierarchy #howto-customize-the-environment-or-application-context #howto.application.customize-the-environment-or-application-context #howto-failure-analyzer #howto.application.failure-analyzer #howto-create-a-non-web-application #howto.application.non-web-application #howto-troubleshoot-auto-configuration #howto.application.troubleshoot-auto-configuration #howto-spring-boot-application #howto.application #howto.batch.restarting-a-failed-job #howto-spring-batch-running-command-line #howto.batch.running-from-the-command-line #howto-spring-batch-running-jobs-on-startup #howto.batch.running-jobs-on-startup #howto-spring-batch-specifying-a-data-source #howto.batch.specifying-a-data-source #howto.batch.specifying-a-transaction-manager #howto-spring-batch-storing-job-repository #howto.batch.storing-job-repository #howto-batch-applications #howto.batch #howto-build-an-executable-archive-with-ant #howto.build.build-an-executable-archive-with-ant-without-using-spring-boot-antlib #howto-create-a-nonexecutable-jar #howto.build.create-a-nonexecutable-jar #howto-create-an-executable-jar-with-maven #howto.build.create-an-executable-jar-with-maven #howto-customize-dependency-versions #howto.build.customize-dependency-versions #howto-extract-specific-libraries-when-an-executable-jar-runs #howto.build.extract-specific-libraries-when-an-executable-jar-runs #howto-git-info #howto.build.generate-git-info #howto-build-info #howto.build.generate-info #howto-remote-debug-maven-run #howto.build.remote-debug-maven #howto-create-an-additional-executable-jar #howto.build.use-a-spring-boot-application-as-dependency #howto-build #howto.build #howto-configure-a-component-that-is-used-by-JPA #howto.data-access.configure-a-component-that-is-used-by-jpa #howto-configure-a-datasource #howto.data-access.configure-custom-datasource #howto-configure-hibernate-naming-strategy #howto.data-access.configure-hibernate-naming-strategy #howto-configure-hibernate-second-level-caching #howto.data-access.configure-hibernate-second-level-caching #howto-configure-jOOQ-with-multiple-datasources #howto.data-access.configure-jooq-with-multiple-datasources #howto-two-datasources #howto.data-access.configure-two-datasources #howto-use-customize-spring-datas-web-support #howto.data-access.customize-spring-data-web-support #howto-use-dependency-injection-hibernate-components #howto.data-access.dependency-injection-in-hibernate-components #howto-use-exposing-spring-data-repositories-rest-endpoint #howto.data-access.exposing-spring-data-repositories-as-rest #howto-configure-jpa-properties #howto.data-access.jpa-properties #howto-separate-entity-definitions-from-spring-configuration #howto.data-access.separate-entity-definitions-from-spring-configuration #howto-use-spring-data-repositories #howto.data-access.spring-data-repositories #howto-use-custom-entity-manager #howto.data-access.use-custom-entity-manager #howto-use-two-entity-managers #howto.data-access.", "start_char_idx": 13400, "end_char_idx": 17261, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c843af3b-e4ef-4dd7-a36c-3a96104955ab": {"__data__": {"id_": "c843af3b-e4ef-4dd7-a36c-3a96104955ab", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f2c6fd8-c226-45bb-9e69-48c917930c4c", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "629f43aad854ff52c7d194a345347b0676fc024c584577e3775e52825007c102", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0e036f1-bdc2-4551-8fb8-51fe5cd2d7a1", "node_type": "1", "metadata": {}, "hash": "d3fe1897f0c516bca5e8078134200f9e51b9fc93bb8ef86cf8810a8813be2e39", "class_name": "RelatedNodeInfo"}}, "text": "data-access.configure-two-datasources #howto-use-customize-spring-datas-web-support #howto.data-access.customize-spring-data-web-support #howto-use-dependency-injection-hibernate-components #howto.data-access.dependency-injection-in-hibernate-components #howto-use-exposing-spring-data-repositories-rest-endpoint #howto.data-access.exposing-spring-data-repositories-as-rest #howto-configure-jpa-properties #howto.data-access.jpa-properties #howto-separate-entity-definitions-from-spring-configuration #howto.data-access.separate-entity-definitions-from-spring-configuration #howto-use-spring-data-repositories #howto.data-access.spring-data-repositories #howto-use-custom-entity-manager #howto.data-access.use-custom-entity-manager #howto-use-two-entity-managers #howto.data-access.use-multiple-entity-managers #howto-use-spring-data-jpa\u2014\u200band-mongo-repositories #howto.data-access.use-spring-data-jpa-and-mongo-repositories #howto-use-traditional-persistence-xml #howto.data-access.use-traditional-persistence-xml #howto-data-access #howto.data-access #howto-initialize-a-spring-batch-database #howto.data-initialization.batch #howto-initialize-a-database-configuring-dependencies-depends-on-initialization-detection #howto.data-initialization.dependencies.depends-on-initialization-detection #howto-initialize-a-database-configuring-dependencies-initializer-detection #howto.data-initialization.dependencies.initializer-detection #howto-initialize-a-database-configuring-dependencies #howto.data-initialization.dependencies #howto.data-initialization.migration-tool.flyway-tests #howto-execute-flyway-database-migrations-on-startup #howto.data-initialization.migration-tool.flyway #howto.data-initialization.migration-tool.liquibase-tests #howto-execute-liquibase-database-migrations-on-startup #howto.data-initialization.migration-tool.liquibase #howto-use-a-higher-level-database-migration-tool #howto.data-initialization.migration-tool #howto-initialize-a-database-using-basic-scripts #howto.data-initialization.using-basic-sql-scripts #howto.data-initialization.using-hibernate #howto.data-initialization.using-jpa #howto-database-initialization #howto.data-initialization #cloud-deployment-aws-java-se-platform #deployment.cloud.aws.beanstalk.java-se-platform #cloud-deployment-aws-tomcat-platform #deployment.cloud.aws.beanstalk.tomcat-platform #cloud-deployment-aws-beanstalk #deployment.cloud.aws.beanstalk #cloud-deployment-aws-summary #deployment.cloud.aws.summary #cloud-deployment-aws #deployment.cloud.aws #deployment.cloud.azure #cloud-deployment-boxfuse #deployment.cloud.boxfuse #cloud-deployment-cloud-foundry-services #deployment.cloud.cloud-foundry.binding-to-services #cloud-deployment-cloud-foundry #deployment.cloud.cloud-foundry #cloud-deployment-gae #deployment.cloud.google #cloud-deployment-heroku #deployment.cloud.heroku #cloud-deployment-kubernetes-container-lifecycle #deployment.cloud.kubernetes.container-lifecycle #cloud-deployment-kubernetes #deployment.cloud.kubernetes #cloud-deployment-openshift #deployment.cloud.openshift #cloud-deployment #deployment.cloud #deployment #deployment deployment #deployment.installing.init-d.script-customization.when-running.conf-file #deployment.installing.nix-services.script-customization.when-running.conf-file #deployment-script-customization-when-it-runs #deployment.installing.init-d.script-customization.when-running #deployment.installing.nix-services.script-customization.when-running #deployment-script-customization-when-it-written #deployment.installing.init-d.script-customization.when-written #deployment.installing.nix-services.script-customization.when-written #deployment-script-customization #deployment.installing.init-d.script-customization #deployment.installing.nix-services.script-customization #deployment-initd-service-securing #deployment.installing.init-d.securing #deployment.installing.nix-services.init-d.securing #deployment-initd-service #deployment.installing.init-d #deployment.installing.nix-services.init-d #deployment-systemd-service #deployment.installing.nix-services.system-d #deployment.installing.system-d #deployment-windows #deployment.", "start_char_idx": 16479, "end_char_idx": 20632, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b0e036f1-bdc2-4551-8fb8-51fe5cd2d7a1": {"__data__": {"id_": "b0e036f1-bdc2-4551-8fb8-51fe5cd2d7a1", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c843af3b-e4ef-4dd7-a36c-3a96104955ab", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b2655df2d37b9ca22afd410dca605763d3d82f0a1d7ceb39bad72b5837633d46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a28cc58-71b6-466a-95fa-aa7e92dd5980", "node_type": "1", "metadata": {}, "hash": "1b11bcd872acd051af18dea32d9e28f4b22edde7d172c5e8e42659c2d6be99d1", "class_name": "RelatedNodeInfo"}}, "text": "installing.init-d.script-customization.when-running #deployment.installing.nix-services.script-customization.when-running #deployment-script-customization-when-it-written #deployment.installing.init-d.script-customization.when-written #deployment.installing.nix-services.script-customization.when-written #deployment-script-customization #deployment.installing.init-d.script-customization #deployment.installing.nix-services.script-customization #deployment-initd-service-securing #deployment.installing.init-d.securing #deployment.installing.nix-services.init-d.securing #deployment-initd-service #deployment.installing.init-d #deployment.installing.nix-services.init-d #deployment-systemd-service #deployment.installing.nix-services.system-d #deployment.installing.system-d #deployment-windows #deployment.installing.windows-services #deployment-install-supported-operating-systems #deployment-service #deployment.installing.supported-operating-systems #deployment.installing #howto-convert-an-existing-application-to-spring-boot #howto.traditional-deployment.convert-existing-application #howto-create-a-deployable-war-file #howto.traditional-deployment.war #howto-weblogic #howto.traditional-deployment.weblogic #howto-traditional-deployment #howto.traditional-deployment #howto.docker-compose.jdbc-url #howto.docker-compose.sharing-services #howto.docker-compose #howto-reload-fast-restart #howto.hotswapping.fast-application-restarts #howto-reload-java-classes-without-restarting #howto.hotswapping.reload-java-classes-without-restarting #howto-reload-static-content #howto.hotswapping.reload-static-content #howto-reload-freemarker-content #howto.hotswapping.reload-templates.freemarker #howto-reload-groovy-template-content #howto.hotswapping.reload-templates.groovy #howto-reload-thymeleaf-content #howto.hotswapping.reload-templates.thymeleaf #howto-reload-thymeleaf-template-content #howto.hotswapping.reload-templates #howto-hotswapping #howto.hotswapping #howto-http-clients-proxy-configuration #howto.http-clients.rest-template-proxy-configuration #howto-webclient-reactor-netty-customization #howto.http-clients.webclient-reactor-netty-customization #howto-http-clients #howto.http-clients #howto #howto howto #howto-jersey-alongside-another-web-framework #howto.jersey.alongside-another-web-framework #howto-jersey-spring-security #howto.jersey.spring-security #howto-jersey #howto.jersey #howto.logging.log4j.composite-configuration #howto-configure-log4j-for-logging-yaml-or-json-config #howto.logging.log4j.yaml-or-json-config #howto-configure-log4j-for-logging #howto.logging.log4j #howto-configure-logback-for-logging-fileonly #howto.logging.logback.file-only-output #howto-configure-logback-for-logging #howto.logging.logback #howto-logging #howto.logging #howto-jms-disable-transaction #howto.messaging.disable-transacted-jms-session #howto-messaging #howto.messaging #native-image.developing-your-first-application.buildpacks.gradle #native-image.developing-your-first-application.buildpacks.maven #native-image.developing-your-first-application.buildpacks.running #native-image.developing-your-first-application.buildpacks.system-requirements #native-image.developing-your-first-application.buildpacks #native-image.developing-your-first-application.native-build-tools.gradle #native-image.developing-your-first-application.native-build-tools.maven #native-image.developing-your-first-application.native-build-tools.prerequisites.linux-macos #native-image.developing-your-first-application.native-build-tools.prerequisites.windows #native-image.developing-your-first-application.native-build-tools.prerequisites #native-image.developing-your-first-application.native-build-tools.running #native-image.developing-your-first-application.native-build-tools #native-image.developing-your-first-application.sample-application #native-image.developing-your-first-application #native-image.testing.with-native-build-tools.gradle #native-image.testing.with-native-build-tools.maven #native-image.testing.", "start_char_idx": 19824, "end_char_idx": 23845, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a28cc58-71b6-466a-95fa-aa7e92dd5980": {"__data__": {"id_": "5a28cc58-71b6-466a-95fa-aa7e92dd5980", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b0e036f1-bdc2-4551-8fb8-51fe5cd2d7a1", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a1efa3aa9c3b0e2426036388f6f73cb60c3ab7ec3a6384172186dbf3c286494f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b353d57-4fb6-4800-b9a8-1157b757f606", "node_type": "1", "metadata": {}, "hash": "789e74f38b8041e2ee94c475169b81d96449325f113c89f33a8092dd032dbef1", "class_name": "RelatedNodeInfo"}}, "text": "running #native-image.developing-your-first-application.buildpacks.system-requirements #native-image.developing-your-first-application.buildpacks #native-image.developing-your-first-application.native-build-tools.gradle #native-image.developing-your-first-application.native-build-tools.maven #native-image.developing-your-first-application.native-build-tools.prerequisites.linux-macos #native-image.developing-your-first-application.native-build-tools.prerequisites.windows #native-image.developing-your-first-application.native-build-tools.prerequisites #native-image.developing-your-first-application.native-build-tools.running #native-image.developing-your-first-application.native-build-tools #native-image.developing-your-first-application.sample-application #native-image.developing-your-first-application #native-image.testing.with-native-build-tools.gradle #native-image.testing.with-native-build-tools.maven #native-image.testing.with-native-build-tools #native-image.testing.with-the-jvm #native-image.testing #howto-use-jedis-instead-of-lettuce #howto.nosql.jedis-instead-of-lettuce #howto.nosql #howto-change-configuration-depending-on-the-environment #howto.properties-and-configuration.change-configuration-depending-on-the-environment #howto-discover-build-in-options-for-external-properties #howto.properties-and-configuration.discover-build-in-options-for-external-properties #howto-automatic-expansion-gradle #howto.properties-and-configuration.expand-properties.gradle #howto-automatic-expansion-maven #howto.properties-and-configuration.expand-properties.maven #howto-automatic-expansion #howto.properties-and-configuration.expand-properties #howto-change-the-location-of-external-properties #howto.properties-and-configuration.external-properties-location #howto-externalize-configuration #howto.properties-and-configuration.externalize-configuration #howto-set-active-spring-profiles #howto.properties-and-configuration.set-active-spring-profiles #howto.properties-and-configuration.set-default-spring-profile-name #howto-use-short-command-line-arguments #howto.properties-and-configuration.short-command-line-arguments #howto-use-yaml-for-external-properties #howto.properties-and-configuration.yaml #howto-properties-and-configuration #howto.properties-and-configuration #howto-change-the-user-details-service-and-add-user-accounts #howto.security.change-user-details-service-and-add-user-accounts #howto-enable-https #howto.security.enable-https #howto-switch-off-spring-boot-security-configuration #howto.security.switch-off-spring-boot-configuration #howto-security #howto.security #howto-customize-the-jackson-objectmapper #howto.spring-mvc.customize-jackson-objectmapper #howto-customize-the-responsebody-rendering #howto.spring-mvc.customize-responsebody-rendering #howto-customize-view-resolvers #howto.spring-mvc.customize-view-resolvers #howto-customize-the-whitelabel-error-page #howto.actuator.customize-whitelabel-error-page #howto-multipart-file-upload-configuration #howto.spring-mvc.multipart-file-uploads #howto-switch-off-default-mvc-configuration #howto.spring-mvc.switch-off-default-configuration #howto-switch-off-the-spring-mvc-dispatcherservlet #howto.spring-mvc.switch-off-dispatcherservlet #howto-write-a-json-rest-service #howto.spring-mvc.write-json-rest-service #howto-write-an-xml-rest-service #howto.spring-mvc.write-xml-rest-service #howto-spring-mvc #howto.spring-mvc #howto.testing.slice-tests #howto-use-test-with-spring-security #howto.spring-mvc.testing.with-spring-security #howto.testing.with-spring-security #howto.testing #howto-configure-webserver-customizers #howto-disable-registration-of-a-servlet-or-filter #howto.webserver.add-servlet-filter-listener.spring-bean.disable #howto-add-a-servlet-filter-or-listener-as-spring-bean #howto.webserver.add-servlet-filter-listener.spring-bean #howto-add-a-servlet-filter-or-listener-using-scanning #howto.webserver.add-servlet-filter-listener.using-scanning #howto-add-a-servlet-filter-or-listener #howto.webserver.add-servlet-filter-listener #howto-change-the-http-port #howto.webserver.change-port #howto-configure-accesslogs #howto.webserver.", "start_char_idx": 22905, "end_char_idx": 27060, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b353d57-4fb6-4800-b9a8-1157b757f606": {"__data__": {"id_": "7b353d57-4fb6-4800-b9a8-1157b757f606", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a28cc58-71b6-466a-95fa-aa7e92dd5980", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3bc548b0395898806ade7ed7f72f60c3d9372cd4c47b813eb814f34770ca90a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff7693c8-c845-490d-b7a5-d0991f211b48", "node_type": "1", "metadata": {}, "hash": "bc6f9bc7e9bd88ae344aa9ba5c96738f6f4f3c40f0fbd62f562525f3ec3f5aa2", "class_name": "RelatedNodeInfo"}}, "text": "testing.slice-tests #howto-use-test-with-spring-security #howto.spring-mvc.testing.with-spring-security #howto.testing.with-spring-security #howto.testing #howto-configure-webserver-customizers #howto-disable-registration-of-a-servlet-or-filter #howto.webserver.add-servlet-filter-listener.spring-bean.disable #howto-add-a-servlet-filter-or-listener-as-spring-bean #howto.webserver.add-servlet-filter-listener.spring-bean #howto-add-a-servlet-filter-or-listener-using-scanning #howto.webserver.add-servlet-filter-listener.using-scanning #howto-add-a-servlet-filter-or-listener #howto.webserver.add-servlet-filter-listener #howto-change-the-http-port #howto.webserver.change-port #howto-configure-accesslogs #howto.webserver.configure-access-logs #howto-configure-http2-jetty #howto.webserver.configure-http2.jetty #howto-configure-http2-netty #howto.webserver.configure-http2.netty #howto-configure-http2-tomcat #howto.webserver.configure-http2.tomcat #howto-configure-http2-undertow #howto.webserver.configure-http2.undertow #howto-configure-http2 #howto.webserver.configure-http2 #howto.webserver.configure-ssl.pem-files #howto-configure-ssl #howto.webserver.configure-ssl #howto-configure-webserver #howto.webserver.configure #howto-create-websocket-endpoints-using-serverendpoint #howto.webserver.create-websocket-endpoints-using-serverendpoint #howto-disable-web-server #howto.webserver.disable #howto-discover-the-http-port-at-runtime #howto.webserver.discover-port #howto-enable-multiple-connectors-in-tomcat #howto.webserver.enable-multiple-connectors-in-tomcat #howto-enable-multiple-listeners-in-undertow #howto.webserver.enable-multiple-listeners-in-undertow #how-to-enable-http-response-compression #howto.webserver.enable-response-compression #howto-enable-tomcat-mbean-registry #howto.webserver.enable-tomcat-mbean-registry #howto-use-another-web-server #howto.webserver.use-another #howto-customize-tomcat-behind-a-proxy-server #howto.webserver.use-behind-a-proxy-server.tomcat #howto-use-behind-a-proxy-server #howto.webserver.use-behind-a-proxy-server #howto-user-a-random-unassigned-http-port #howto.webserver.use-random-port #howto-embedded-web-servers #howto.webserver #getting-started.introducing-spring-boot #getting-started #index #spring-boot-reference-documentation getting-started maven-plugin#aot.process-aot-goal.optional-parameters maven-plugin#aot.process-aot-goal.parameter-details.arguments maven-plugin#aot.process-aot-goal.parameter-details.classes-directory maven-plugin#aot.process-aot-goal.parameter-details.compiler-arguments maven-plugin#aot.process-aot-goal.parameter-details.exclude-group-ids maven-plugin#aot.process-aot-goal.parameter-details.excludes maven-plugin#aot.process-aot-goal.parameter-details.generated-classes maven-plugin#aot.process-aot-goal.parameter-details.generated-resources maven-plugin#aot.process-aot-goal.parameter-details.generated-sources maven-plugin#aot.process-aot-goal.parameter-details.includes maven-plugin#aot.process-aot-goal.parameter-details.jvm-arguments maven-plugin#aot.process-aot-goal.parameter-details.main-class maven-plugin#aot.process-aot-goal.parameter-details.profiles maven-plugin#aot.process-aot-goal.parameter-details.skip maven-plugin#aot.process-aot-goal.parameter-details.system-property-variables maven-plugin#aot.process-aot-goal.parameter-details maven-plugin#aot.process-aot-goal.required-parameters maven-plugin#aot.process-aot-goal maven-plugin#aot.process-test-aot-goal.optional-parameters maven-plugin#aot.process-test-aot-goal.parameter-details.classes-directory maven-plugin#aot.process-test-aot-goal.parameter-details.compiler-arguments maven-plugin#aot.process-test-aot-goal.parameter-details.exclude-group-ids maven-plugin#aot.process-test-aot-goal.", "start_char_idx": 26336, "end_char_idx": 30093, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff7693c8-c845-490d-b7a5-d0991f211b48": {"__data__": {"id_": "ff7693c8-c845-490d-b7a5-d0991f211b48", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b353d57-4fb6-4800-b9a8-1157b757f606", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "290c39ecc2ccfb5f1fff07f2bdb103ec8031d44ff0d578d29ab86f2a5aede7f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e62ba5ff-a3ee-4cab-92df-3631710a60e6", "node_type": "1", "metadata": {}, "hash": "46a5ba6646ef4d3e740dae0b803fb7fac60c57e01aafa3128507ca1d8850503c", "class_name": "RelatedNodeInfo"}}, "text": "process-aot-goal.parameter-details.jvm-arguments maven-plugin#aot.process-aot-goal.parameter-details.main-class maven-plugin#aot.process-aot-goal.parameter-details.profiles maven-plugin#aot.process-aot-goal.parameter-details.skip maven-plugin#aot.process-aot-goal.parameter-details.system-property-variables maven-plugin#aot.process-aot-goal.parameter-details maven-plugin#aot.process-aot-goal.required-parameters maven-plugin#aot.process-aot-goal maven-plugin#aot.process-test-aot-goal.optional-parameters maven-plugin#aot.process-test-aot-goal.parameter-details.classes-directory maven-plugin#aot.process-test-aot-goal.parameter-details.compiler-arguments maven-plugin#aot.process-test-aot-goal.parameter-details.exclude-group-ids maven-plugin#aot.process-test-aot-goal.parameter-details.excludes maven-plugin#aot.process-test-aot-goal.parameter-details.generated-classes maven-plugin#aot.process-test-aot-goal.parameter-details.generated-resources maven-plugin#aot.process-test-aot-goal.parameter-details.generated-sources maven-plugin#aot.process-test-aot-goal.parameter-details.generated-test-classes maven-plugin#aot.process-test-aot-goal.parameter-details.includes maven-plugin#aot.process-test-aot-goal.parameter-details.jvm-arguments maven-plugin#aot.process-test-aot-goal.parameter-details.skip maven-plugin#aot.process-test-aot-goal.parameter-details.system-property-variables maven-plugin#aot.process-test-aot-goal.parameter-details.test-classes-directory maven-plugin#aot.process-test-aot-goal.parameter-details maven-plugin#aot.process-test-aot-goal.required-parameters maven-plugin#aot.process-test-aot-goal maven-plugin#aot.processing-applications.using-the-native-profile maven-plugin#aot.processing-applications maven-plugin#aot.processing-tests maven-plugin#aot maven-plugin#build-image.build-image-goal.optional-parameters maven-plugin#build-image.build-image-goal.parameter-details.classifier maven-plugin#build-image.build-image-goal.parameter-details.docker maven-plugin#build-image.build-image-goal.parameter-details.exclude-devtools maven-plugin#build-image.build-image-goal.parameter-details.exclude-docker-compose maven-plugin#build-image.build-image-goal.parameter-details.exclude-group-ids maven-plugin#build-image.build-image-goal.parameter-details.excludes maven-plugin#build-image.build-image-goal.parameter-details.image maven-plugin#build-image.build-image-goal.parameter-details.include-system-scope maven-plugin#build-image.build-image-goal.parameter-details.include-tools maven-plugin#build-image.build-image-goal.parameter-details.includes maven-plugin#build-image.build-image-goal.parameter-details.layers maven-plugin#build-image.build-image-goal.parameter-details.layout-factory maven-plugin#build-image.build-image-goal.parameter-details.layout maven-plugin#build-image.build-image-goal.parameter-details.loader-implementation maven-plugin#build-image.build-image-goal.parameter-details.main-class maven-plugin#build-image.build-image-goal.parameter-details.skip maven-plugin#build-image.build-image-goal.parameter-details.source-directory maven-plugin#build-image.build-image-goal.parameter-details maven-plugin#build-image.build-image-goal.required-parameters maven-plugin#build-image.build-image-goal maven-plugin#build-image.build-image-no-fork-goal.optional-parameters maven-plugin#build-image.build-image-no-fork-goal.parameter-details.classifier maven-plugin#build-image.build-image-no-fork-goal.parameter-details.docker maven-plugin#build-image.build-image-no-fork-goal.parameter-details.exclude-devtools maven-plugin#build-image.build-image-no-fork-goal.parameter-details.exclude-docker-compose maven-plugin#build-image.build-image-no-fork-goal.parameter-details.exclude-group-ids maven-plugin#build-image.build-image-no-fork-goal.parameter-details.excludes maven-plugin#build-image.build-image-no-fork-goal.parameter-details.image maven-plugin#build-image.build-image-no-fork-goal.parameter-details.include-system-scope maven-plugin#build-image.build-image-no-fork-goal.parameter-details.include-tools maven-plugin#build-image.build-image-no-fork-goal.parameter-details.includes maven-plugin#build-image.build-image-no-fork-goal.parameter-details.layers maven-plugin#build-image.build-image-no-fork-goal.parameter-details.", "start_char_idx": 29321, "end_char_idx": 33595, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e62ba5ff-a3ee-4cab-92df-3631710a60e6": {"__data__": {"id_": "e62ba5ff-a3ee-4cab-92df-3631710a60e6", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07fa0591-859f-42d5-9017-dd306ba7c2ba", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2c9bf953be2545f3e277f18e56d2666003eaaf3c8fd3e0b5d285265fe3b5f14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff7693c8-c845-490d-b7a5-d0991f211b48", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2ab5427809f4bfbbedc151aecdbbff8880dcde02415cfeb9e9bff23c103ae423", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7d661c8-1dd1-45f0-8e7f-72ba965e9440", "node_type": "1", "metadata": {}, "hash": "08799acf9e10b2c2a65b107fcef219d75dc40b7331d581fe8da70311b035b16f", "class_name": "RelatedNodeInfo"}}, "text": "parameter-details.docker maven-plugin#build-image.build-image-no-fork-goal.parameter-details.exclude-devtools maven-plugin#build-image.build-image-no-fork-goal.parameter-details.exclude-docker-compose maven-plugin#build-image.build-image-no-fork-goal.parameter-details.exclude-group-ids maven-plugin#build-image.build-image-no-fork-goal.parameter-details.excludes maven-plugin#build-image.build-image-no-fork-goal.parameter-details.image maven-plugin#build-image.build-image-no-fork-goal.parameter-details.include-system-scope maven-plugin#build-image.build-image-no-fork-goal.parameter-details.include-tools maven-plugin#build-image.build-image-no-fork-goal.parameter-details.includes maven-plugin#build-image.build-image-no-fork-goal.parameter-details.layers maven-plugin#build-image.build-image-no-fork-goal.parameter-details.layout-factory maven-plugin#build-image.build-image-no-fork-goal.parameter-details.layout maven-plugin#build-image.build-image-no-fork-goal.parameter-details.loader-implementation maven-plugin#build-image.build-image-no-fork-goal.parameter-details.main-class maven-plugin#build-image.build-image-no-fork-goal.parameter-details.skip maven-plugin#build-image.build-image-no-fork-goal.parameter-details.source-directory", "start_char_idx": 32766, "end_char_idx": 34011, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7d661c8-1dd1-45f0-8e7f-72ba965e9440": {"__data__": {"id_": "d7d661c8-1dd1-45f0-8e7f-72ba965e9440", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e62ba5ff-a3ee-4cab-92df-3631710a60e6", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8227ca0936cd772384c93f47910dec944c46b120e47f4616e00f95d80168fe6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67819d27-50d6-470b-848e-64be3a9bb952", "node_type": "1", "metadata": {}, "hash": "99d449a07e9e264d24c68b13c15dbefb68eeaf58d5fb65d203e2930378a0f075", "class_name": "RelatedNodeInfo"}}, "text": "maven-plugin#build-image.build-image-no-fork-goal.parameter-details maven-plugin#build-image.build-image-no-fork-goal.required-parameters maven-plugin#build-image.build-image-no-fork-goal maven-plugin#build-image.customization.tags maven-plugin#build-image.customization maven-plugin#build-image.docker-daemon maven-plugin#build-image.docker-registry maven-plugin#build-image.examples.builder-configuration maven-plugin#build-image.examples.buildpacks maven-plugin#build-image.examples.caches maven-plugin#build-image.examples.custom-image-builder maven-plugin#build-image.examples.custom-image-name maven-plugin#build-image.examples.docker.auth maven-plugin#build-image.examples.docker.colima maven-plugin#build-image.examples.docker.minikube maven-plugin#build-image.examples.docker.podman maven-plugin#build-image.examples.docker maven-plugin#build-image.examples.publish maven-plugin#build-image.examples.runtime-jvm-configuration maven-plugin#build-image.examples maven-plugin#build-image maven-plugin#build-info.build-info-goal.optional-parameters maven-plugin#build-info.build-info-goal.parameter-details.additional-properties maven-plugin#build-info.build-info-goal.parameter-details.exclude-info-properties maven-plugin#build-info.build-info-goal.parameter-details.output-file maven-plugin#build-info.build-info-goal.parameter-details.skip maven-plugin#build-info.build-info-goal.parameter-details.time maven-plugin#build-info.build-info-goal.parameter-details maven-plugin#build-info.build-info-goal maven-plugin#build-info maven-plugin#getting-started maven-plugin#goals maven-plugin#help.help-goal.optional-parameters maven-plugin#help.help-goal.parameter-details.detail maven-plugin#help.help-goal.parameter-details.goal maven-plugin#help.help-goal.parameter-details.indent-size maven-plugin#help.help-goal.parameter-details.line-length maven-plugin#help.help-goal.parameter-details maven-plugin#help.help-goal maven-plugin#help maven-plugin#maven-plugin maven-plugin#integration-tests.examples.jmx-port maven-plugin#integration-tests.examples.random-port maven-plugin#integration-tests.examples.skip maven-plugin#integration-tests.examples maven-plugin#integration-tests.no-starter-parent maven-plugin#integration-tests.start-goal.optional-parameters maven-plugin#integration-tests.start-goal.parameter-details.add-resources maven-plugin#integration-tests.start-goal.parameter-details.additional-classpath-elements maven-plugin#integration-tests.start-goal.parameter-details.directories maven-plugin#integration-tests.start-goal.parameter-details.agents maven-plugin#integration-tests.start-goal.parameter-details.arguments maven-plugin#integration-tests.start-goal.parameter-details.classes-directory maven-plugin#integration-tests.start-goal.parameter-details.commandline-arguments maven-plugin#integration-tests.start-goal.parameter-details.environment-variables maven-plugin#integration-tests.start-goal.parameter-details.exclude-group-ids maven-plugin#integration-tests.start-goal.parameter-details.excludes maven-plugin#integration-tests.start-goal.parameter-details.includes maven-plugin#integration-tests.start-goal.parameter-details.jmx-name maven-plugin#integration-tests.start-goal.parameter-details.jmx-port maven-plugin#integration-tests.start-goal.parameter-details.jvm-arguments maven-plugin#integration-tests.start-goal.parameter-details.main-class maven-plugin#integration-tests.start-goal.parameter-details.max-attempts maven-plugin#integration-tests.start-goal.parameter-details.noverify maven-plugin#integration-tests.start-goal.parameter-details.profiles maven-plugin#integration-tests.start-goal.parameter-details.skip maven-plugin#integration-tests.start-goal.parameter-details.system-property-variables maven-plugin#integration-tests.start-goal.parameter-details.use-test-classpath maven-plugin#integration-tests.start-goal.parameter-details.wait maven-plugin#integration-tests.start-goal.parameter-details.working-directory maven-plugin#integration-tests.start-goal.parameter-details maven-plugin#integration-tests.start-goal.required-parameters maven-plugin#integration-tests.start-goal maven-plugin#integration-tests.stop-goal.optional-parameters maven-plugin#integration-tests.stop-goal.parameter-details.jmx-name maven-plugin#integration-tests.stop-goal.parameter-details.jmx-port maven-plugin#integration-tests.stop-goal.parameter-details.skip maven-plugin#integration-tests.stop-goal.parameter-details maven-plugin#integration-tests.", "start_char_idx": 0, "end_char_idx": 4478, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67819d27-50d6-470b-848e-64be3a9bb952": {"__data__": {"id_": "67819d27-50d6-470b-848e-64be3a9bb952", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7d661c8-1dd1-45f0-8e7f-72ba965e9440", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "00f9b895e685bdb64115f65a7a5af001d81f71cdf7fdf4eb63ca4dcf80d6f75b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c4ad4df-af22-4942-b087-43da0c2e4d9c", "node_type": "1", "metadata": {}, "hash": "4f6f00a23b0fa90f27fc3c30d9644aad941ed8054a9a370c3ccfd68002ce9d1e", "class_name": "RelatedNodeInfo"}}, "text": "start-goal.parameter-details.profiles maven-plugin#integration-tests.start-goal.parameter-details.skip maven-plugin#integration-tests.start-goal.parameter-details.system-property-variables maven-plugin#integration-tests.start-goal.parameter-details.use-test-classpath maven-plugin#integration-tests.start-goal.parameter-details.wait maven-plugin#integration-tests.start-goal.parameter-details.working-directory maven-plugin#integration-tests.start-goal.parameter-details maven-plugin#integration-tests.start-goal.required-parameters maven-plugin#integration-tests.start-goal maven-plugin#integration-tests.stop-goal.optional-parameters maven-plugin#integration-tests.stop-goal.parameter-details.jmx-name maven-plugin#integration-tests.stop-goal.parameter-details.jmx-port maven-plugin#integration-tests.stop-goal.parameter-details.skip maven-plugin#integration-tests.stop-goal.parameter-details maven-plugin#integration-tests.stop-goal maven-plugin#integration-tests maven-plugin#packaging.examples.custom-classifier maven-plugin#packaging.examples.custom-layers-configuration maven-plugin#packaging.examples.custom-layout maven-plugin#packaging.examples.custom-name maven-plugin#packaging.examples.exclude-dependency maven-plugin#packaging.examples.layered-archive-tools maven-plugin#packaging.examples.local-artifact maven-plugin#packaging.examples maven-plugin#packaging.layers.configuration maven-plugin#packaging.layers maven-plugin#packaging.repackage-goal.optional-parameters maven-plugin#packaging.repackage-goal.parameter-details.attach maven-plugin#packaging.repackage-goal.parameter-details.classifier maven-plugin#packaging.repackage-goal.parameter-details.embedded-launch-script-properties maven-plugin#packaging.repackage-goal.parameter-details.embedded-launch-script maven-plugin#packaging.repackage-goal.parameter-details.exclude-devtools maven-plugin#packaging.repackage-goal.parameter-details.exclude-docker-compose maven-plugin#packaging.repackage-goal.parameter-details.exclude-group-ids maven-plugin#packaging.repackage-goal.parameter-details.excludes maven-plugin#packaging.repackage-goal.parameter-details.executable maven-plugin#packaging.repackage-goal.parameter-details.include-system-scope maven-plugin#packaging.repackage-goal.parameter-details.include-tools maven-plugin#packaging.repackage-goal.parameter-details.includes maven-plugin#packaging.repackage-goal.parameter-details.layers maven-plugin#packaging.repackage-goal.parameter-details.layout-factory maven-plugin#packaging.repackage-goal.parameter-details.layout maven-plugin#packaging.repackage-goal.parameter-details.loader-implementation maven-plugin#packaging.repackage-goal.parameter-details.main-class maven-plugin#packaging.repackage-goal.parameter-details.output-directory maven-plugin#packaging.repackage-goal.parameter-details.output-timestamp maven-plugin#packaging.repackage-goal.parameter-details.requires-unpack maven-plugin#packaging.repackage-goal.parameter-details.skip maven-plugin#packaging.repackage-goal.parameter-details maven-plugin#packaging.repackage-goal.required-parameters maven-plugin#packaging.repackage-goal maven-plugin#packaging maven-plugin#run.examples.debug maven-plugin#run.examples.environment-variables maven-plugin#run.examples.specify-active-profiles maven-plugin#run.examples.system-properties maven-plugin#run.examples.using-application-arguments maven-plugin#run.examples maven-plugin#run.run-goal.optional-parameters maven-plugin#run.run-goal.parameter-details.add-resources maven-plugin#run.run-goal.parameter-details.additional-classpath-elements maven-plugin#run.run-goal.parameter-details.directories maven-plugin#run.run-goal.parameter-details.agents maven-plugin#run.run-goal.parameter-details.arguments maven-plugin#run.run-goal.parameter-details.classes-directory maven-plugin#run.run-goal.parameter-details.commandline-arguments maven-plugin#run.run-goal.parameter-details.environment-variables maven-plugin#run.run-goal.parameter-details.exclude-group-ids maven-plugin#run.run-goal.parameter-details.excludes maven-plugin#run.run-goal.parameter-details.includes maven-plugin#run.run-goal.parameter-details.jvm-arguments maven-plugin#run.run-goal.parameter-details.main-class maven-plugin#run.run-goal.parameter-details.noverify maven-plugin#run.run-goal.parameter-details.", "start_char_idx": 3552, "end_char_idx": 7865, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c4ad4df-af22-4942-b087-43da0c2e4d9c": {"__data__": {"id_": "9c4ad4df-af22-4942-b087-43da0c2e4d9c", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67819d27-50d6-470b-848e-64be3a9bb952", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "00b0c435eb4e514f59fa81c849004340875ecce84d009fe854f396a1cecbe8fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4a97f98-4c2d-4465-8508-afeeffa10ec0", "node_type": "1", "metadata": {}, "hash": "3d665572c9f46eac216defc02c7f8d01042e2c4e86937b27be4941b68cee8d4b", "class_name": "RelatedNodeInfo"}}, "text": "run-goal.parameter-details.additional-classpath-elements maven-plugin#run.run-goal.parameter-details.directories maven-plugin#run.run-goal.parameter-details.agents maven-plugin#run.run-goal.parameter-details.arguments maven-plugin#run.run-goal.parameter-details.classes-directory maven-plugin#run.run-goal.parameter-details.commandline-arguments maven-plugin#run.run-goal.parameter-details.environment-variables maven-plugin#run.run-goal.parameter-details.exclude-group-ids maven-plugin#run.run-goal.parameter-details.excludes maven-plugin#run.run-goal.parameter-details.includes maven-plugin#run.run-goal.parameter-details.jvm-arguments maven-plugin#run.run-goal.parameter-details.main-class maven-plugin#run.run-goal.parameter-details.noverify maven-plugin#run.run-goal.parameter-details.optimized-launch maven-plugin#run.run-goal.parameter-details.profiles maven-plugin#run.run-goal.parameter-details.skip maven-plugin#run.run-goal.parameter-details.system-property-variables maven-plugin#run.run-goal.parameter-details.use-test-classpath maven-plugin#run.run-goal.parameter-details.working-directory maven-plugin#run.run-goal.parameter-details maven-plugin#run.run-goal.required-parameters maven-plugin#run.run-goal maven-plugin#run.test-run-goal.optional-parameters maven-plugin#run.test-run-goal.parameter-details.add-resources maven-plugin#run.test-run-goal.parameter-details.additional-classpath-elements maven-plugin#run.test-run-goal.parameter-details.directories maven-plugin#run.test-run-goal.parameter-details.agents maven-plugin#run.test-run-goal.parameter-details.arguments maven-plugin#run.test-run-goal.parameter-details.classes-directory maven-plugin#run.test-run-goal.parameter-details.commandline-arguments maven-plugin#run.test-run-goal.parameter-details.environment-variables maven-plugin#run.test-run-goal.parameter-details.exclude-group-ids maven-plugin#run.test-run-goal.parameter-details.excludes maven-plugin#run.test-run-goal.parameter-details.includes maven-plugin#run.test-run-goal.parameter-details.jvm-arguments maven-plugin#run.test-run-goal.parameter-details.main-class maven-plugin#run.test-run-goal.parameter-details.noverify maven-plugin#run.test-run-goal.parameter-details.optimized-launch maven-plugin#run.test-run-goal.parameter-details.profiles maven-plugin#run.test-run-goal.parameter-details.skip maven-plugin#run.test-run-goal.parameter-details.system-property-variables maven-plugin#run.test-run-goal.parameter-details.test-classes-directory maven-plugin#run.test-run-goal.parameter-details.working-directory maven-plugin#run.test-run-goal.parameter-details maven-plugin#run.test-run-goal.required-parameters maven-plugin#run.test-run-goal maven-plugin#run maven-plugin#using.import maven-plugin#using.overriding-command-line maven-plugin#using.parent-pom maven-plugin#using #actuator.auditing.custom #production-ready-auditing-custom #actuator.auditing #production-ready-auditing #actuator.cloud-foundry.custom-context-path #production-ready-custom-context-path #actuator.cloud-foundry.disable #production-ready-cloudfoundry-disable #actuator.cloud-foundry.ssl #production-ready-cloudfoundry-ssl #actuator.cloud-foundry #production-ready-cloudfoundry #actuator.enabling #production-ready-enabling #actuator.endpoints.caching #production-ready-endpoints-caching #actuator.endpoints.enabling #production-ready-endpoints-enabling-endpoints #actuator.endpoints.cors #production-ready-endpoints-cors #actuator.endpoints.exposing #production-ready-endpoints-exposing-endpoints #actuator.endpoints.health.auto-configured-health-indicators #production-ready-health-indicators #actuator.endpoints.health.auto-configured-reactive-health-indicators #reactive-health-indicators-autoconfigured #actuator.endpoints.health.datasource #production-ready-health-datasource #actuator.endpoints.health.groups #production-ready-health-groups #actuator.endpoints.health.reactive-health-indicators #reactive-health-indicators #actuator.endpoints.health.writing-custom-health-indicators #production-ready-health-indicators-writing #actuator.endpoints.health #production-ready-health #actuator.endpoints.", "start_char_idx": 7075, "end_char_idx": 11200, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4a97f98-4c2d-4465-8508-afeeffa10ec0": {"__data__": {"id_": "a4a97f98-4c2d-4465-8508-afeeffa10ec0", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c4ad4df-af22-4942-b087-43da0c2e4d9c", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cc1e1725c95e17345e4b61a918912b665efc001ee91e84513f71df73a97a5872", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5d33378-1d4a-4bff-909d-2294fb807abd", "node_type": "1", "metadata": {}, "hash": "674ae9c74e26e519b244eeb7eba0eeb7d2dd25ce3f134be59ab26f7465b08b3c", "class_name": "RelatedNodeInfo"}}, "text": "caching #production-ready-endpoints-caching #actuator.endpoints.enabling #production-ready-endpoints-enabling-endpoints #actuator.endpoints.cors #production-ready-endpoints-cors #actuator.endpoints.exposing #production-ready-endpoints-exposing-endpoints #actuator.endpoints.health.auto-configured-health-indicators #production-ready-health-indicators #actuator.endpoints.health.auto-configured-reactive-health-indicators #reactive-health-indicators-autoconfigured #actuator.endpoints.health.datasource #production-ready-health-datasource #actuator.endpoints.health.groups #production-ready-health-groups #actuator.endpoints.health.reactive-health-indicators #reactive-health-indicators #actuator.endpoints.health.writing-custom-health-indicators #production-ready-health-indicators-writing #actuator.endpoints.health #production-ready-health #actuator.endpoints.hypermedia #production-ready-endpoints-hypermedia #actuator.endpoints.implementing-custom.input.conversion #production-ready-endpoints-custom-input-conversion #actuator.endpoints.implementing-custom.input #production-ready-endpoints-custom-input #actuator.endpoints.implementing-custom.web.consumes-predicates #production-ready-endpoints-custom-web-predicate-consumes #actuator.endpoints.implementing-custom.web.method-predicates #production-ready-endpoints-custom-web-predicate-http-method #actuator.endpoints.implementing-custom.web.path-predicates #production-ready-endpoints-custom-web-predicate-path #actuator.endpoints.implementing-custom.web.produces-predicates #production-ready-endpoints-custom-web-predicate-produces #actuator.endpoints.implementing-custom.web.range-requests #production-ready-endpoints-custom-web-range-requests #actuator.endpoints.implementing-custom.web.request-predicates #production-ready-endpoints-custom-web-predicate #actuator.endpoints.implementing-custom.web.response-status #production-ready-endpoints-custom-web-response-status #actuator.endpoints.implementing-custom.web.security #production-ready-endpoints-custom-web-security #actuator.endpoints.implementing-custom.web #production-ready-endpoints-custom-web #actuator.endpoints.implementing-custom #production-ready-endpoints-custom #actuator.endpoints.info.auto-configured-info-contributors #production-ready-application-info-autoconfigure #actuator.endpoints.info.build-information #production-ready-application-info-build #actuator.endpoints.info.custom-application-information #production-ready-application-info-env #actuator.endpoints.info.git-commit-information #production-ready-application-info-git #actuator.endpoints.info.java-information #actuator.endpoints.info.os-information #actuator.endpoints.info.process-information #actuator.endpoints.info.writing-custom-info-contributors #production-ready-application-info-custom #actuator.endpoints.info #production-ready-application-info #actuator.endpoints.kubernetes-probes.external-state #production-ready-kubernetes-probes-external-state #actuator.endpoints.kubernetes-probes.lifecycle #production-ready-kubernetes-probes-lifecycle #actuator.endpoints.kubernetes-probes #production-ready-kubernetes-probes #actuator.endpoints.sanitization #howto-sanitize-sensible-values #howto-sanitize-sensitive-values #howto.actuator.sanitize-sensitive-values #actuator.endpoints.sbom.additional #actuator.endpoints.sbom.other-formats #actuator.endpoints.sbom #actuator.endpoints.security.csrf #boot-features-security-csrf #features.security.actuator.csrf #actuator.endpoints.security #boot-features-security-actuator #production-ready-endpoints-security #actuator.endpoints #production-ready-endpoints #actuator.http-exchanges.custom #actuator.tracing.custom #production-ready-http-tracing-custom #actuator.http-exchanges #actuator.tracing #production-ready-http-tracing #actuator #production-ready #actuator actuator #actuator.jmx.custom-mbean-names #production-ready-custom-mbean-names #actuator.jmx.disable-jmx-endpoints #production-ready-disable-jmx-endpoints #actuator.jmx #boot-features-jmx #production-ready-jmx #actuator.loggers.configure #production-ready-logger-configuration #actuator.loggers #production-ready-loggers #actuator.metrics.customizing.common-tags #production-ready-metrics-common-tags #actuator.metrics.customizing.per-meter-properties #production-ready-metrics-per-meter-properties #actuator.", "start_char_idx": 10338, "end_char_idx": 14658, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5d33378-1d4a-4bff-909d-2294fb807abd": {"__data__": {"id_": "d5d33378-1d4a-4bff-909d-2294fb807abd", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4a97f98-4c2d-4465-8508-afeeffa10ec0", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d6d21c701b9a9091b17748df501e42989b68e4cf4d42448659daaf736f4def85", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6d2db28-2218-433a-b5ac-235cfbc37e9d", "node_type": "1", "metadata": {}, "hash": "6fe2e22075bcd286af974f1d7a243f895f25fcac6d861df8cc9b241ab371c6fe", "class_name": "RelatedNodeInfo"}}, "text": "endpoints #production-ready-endpoints #actuator.http-exchanges.custom #actuator.tracing.custom #production-ready-http-tracing-custom #actuator.http-exchanges #actuator.tracing #production-ready-http-tracing #actuator #production-ready #actuator actuator #actuator.jmx.custom-mbean-names #production-ready-custom-mbean-names #actuator.jmx.disable-jmx-endpoints #production-ready-disable-jmx-endpoints #actuator.jmx #boot-features-jmx #production-ready-jmx #actuator.loggers.configure #production-ready-logger-configuration #actuator.loggers #production-ready-loggers #actuator.metrics.customizing.common-tags #production-ready-metrics-common-tags #actuator.metrics.customizing.per-meter-properties #production-ready-metrics-per-meter-properties #actuator.metrics.customizing #production-ready-metrics-customizing #actuator.metrics.endpoint #production-ready-metrics-endpoint #actuator.metrics.export.appoptics #production-ready-metrics-export-appoptics #actuator.metrics.export.atlas #production-ready-metrics-export-atlas #actuator.metrics.export.datadog #production-ready-metrics-export-datadog #actuator.metrics.export.dynatrace.v1-api #actuator.metrics.export.dynatrace.v2-api.auto-config #actuator.metrics.export.dynatrace.v2-api.manual-config #actuator.metrics.export.dynatrace.v2-api #actuator.metrics.export.dynatrace.version-independent-settings #actuator.metrics.export.dynatrace #production-ready-metrics-export-dynatrace #actuator.metrics.export.elastic #production-ready-metrics-export-elastic #actuator.metrics.export.ganglia #production-ready-metrics-export-ganglia #actuator.metrics.export.graphite #production-ready-metrics-export-graphite #actuator.metrics.export.humio #production-ready-metrics-export-humio #actuator.metrics.export.influx #production-ready-metrics-export-influx #actuator.metrics.export.jmx #production-ready-metrics-export-jmx #actuator.metrics.export.kairos #production-ready-metrics-export-kairos #actuator.metrics.export.newrelic #production-ready-metrics-export-newrelic #actuator.metrics.export.otlp #actuator.metrics.export.prometheus #production-ready-metrics-export-prometheus #actuator.metrics.export.simple #production-ready-metrics-export-simple #actuator.metrics.export.stackdriver #production-ready-metrics-export-stackdriver #actuator.metrics.export.statsd #production-ready-metrics-export-statsd #actuator.metrics.export.wavefront #production-ready-metrics-export-wavefront #actuator.metrics.export #production-ready-metrics-export #actuator.metrics.getting-started #production-ready-metrics-getting-started #actuator.metrics.micrometer-observation #actuator.metrics.registering-custom #production-ready-metrics-custom #actuator.metrics.supported.application-startup #actuator.metrics.supported.cache #production-ready-metrics-cache #actuator.metrics.supported.hibernate #production-ready-metrics-hibernate #actuator.metrics.supported.http-clients #production-ready-metrics-http-clients #actuator.metrics.supported.jdbc #production-ready-metrics-jdbc #actuator.metrics.supported.jersey #production-ready-metrics-jersey-server #actuator.metrics.supported.jetty #actuator.metrics.supported.jms #actuator.metrics.supported.jvm #production-ready-metrics-jvm #actuator.metrics.supported.kafka #production-ready-metrics-kafka #actuator.metrics.supported.logger #production-ready-metrics-logger #actuator.metrics.supported.mongodb.command #production-ready-metrics-mongodb-command #actuator.metrics.supported.mongodb.connection-pool #production-ready-metrics-mongodb-connectionpool #actuator.metrics.supported.mongodb #production-ready-metrics-mongodb #actuator.metrics.supported.rabbitmq #production-ready-metrics-rabbitmq #actuator.metrics.supported.redis #actuator.metrics.supported.spring-batch #actuator.metrics.supported.spring-data-repository #production-ready-metrics-data-repository #actuator.metrics.supported.spring-graphql #actuator.metrics.supported.spring-integration #production-ready-metrics-integration #actuator.metrics.supported.spring-mvc #production-ready-metrics-spring-mvc #actuator.", "start_char_idx": 13904, "end_char_idx": 17955, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c6d2db28-2218-433a-b5ac-235cfbc37e9d": {"__data__": {"id_": "c6d2db28-2218-433a-b5ac-235cfbc37e9d", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5d33378-1d4a-4bff-909d-2294fb807abd", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6caec7c6cc7aa9a51472789790304f157319796ac4d28cdc7e3c5178491c44d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86ade1b9-7255-4eb0-9728-2922a450f990", "node_type": "1", "metadata": {}, "hash": "e8e6293e0dfd94ac779a18eb758af9611dd205dd82cc3a80c42e51ee002fed63", "class_name": "RelatedNodeInfo"}}, "text": "metrics.supported.kafka #production-ready-metrics-kafka #actuator.metrics.supported.logger #production-ready-metrics-logger #actuator.metrics.supported.mongodb.command #production-ready-metrics-mongodb-command #actuator.metrics.supported.mongodb.connection-pool #production-ready-metrics-mongodb-connectionpool #actuator.metrics.supported.mongodb #production-ready-metrics-mongodb #actuator.metrics.supported.rabbitmq #production-ready-metrics-rabbitmq #actuator.metrics.supported.redis #actuator.metrics.supported.spring-batch #actuator.metrics.supported.spring-data-repository #production-ready-metrics-data-repository #actuator.metrics.supported.spring-graphql #actuator.metrics.supported.spring-integration #production-ready-metrics-integration #actuator.metrics.supported.spring-mvc #production-ready-metrics-spring-mvc #actuator.metrics.supported.spring-webflux #production-ready-metrics-web-flux #actuator.metrics.supported.system #production-ready-metrics-system #actuator.metrics.supported.tasks #actuator.metrics.supported.tomcat #production-ready-metrics-tomcat #actuator.metrics.supported #production-ready-metrics-meter #actuator.metrics #production-ready-metrics #actuator.monitoring.customizing-management-server-address #production-ready-customizing-management-server-address #actuator.monitoring.customizing-management-server-context-path #production-ready-customizing-management-server-context-path #actuator.monitoring.customizing-management-server-port #production-ready-customizing-management-server-port #actuator.monitoring.disabling-http-endpoints #production-ready-disabling-http-endpoints #actuator.monitoring.management-specific-ssl #production-ready-management-specific-ssl #actuator.monitoring #production-ready-monitoring #actuator.metrics.supported.timed-annotation #actuator.observability.annotations #production-ready-metrics-timed-annotation #actuator.observability.common-tags #actuator.observability.opentelemetry #actuator.observability.preventing-observations #actuator.observability #actuator.process-monitoring.configuration #production-ready-process-monitoring-configuration #actuator.process-monitoring.programmatically #production-ready-process-monitoring-programmatically #actuator.process-monitoring #production-ready-process-monitoring #actuator.micrometer-tracing.baggage #actuator.micrometer-tracing.creating-spans #actuator.micrometer-tracing.getting-started #actuator.micrometer-tracing.logging #actuator.micrometer-tracing.micrometer-observation #actuator.micrometer-tracing.propagating-traces #actuator.micrometer-tracing.tests #actuator.micrometer-tracing.tracer-implementations.brave-wavefront #actuator.micrometer-tracing.tracer-implementations.brave-zipkin #actuator.micrometer-tracing.tracer-implementations.otel-otlp #actuator.micrometer-tracing.tracer-implementations.otel-wavefront #actuator.micrometer-tracing.tracer-implementations.otel-zipkin #actuator.micrometer-tracing.tracer-implementations #actuator.micrometer-tracing.tracers #actuator.micrometer-tracing #data #data data #boot-features-connecting-to-cassandra #data.nosql.cassandra.connecting #features.nosql.cassandra.connecting #boot-features-spring-data-cassandra-repositories #data.nosql.cassandra.repositories #features.nosql.cassandra.repositories #boot-features-cassandra #data.nosql.cassandra #features.nosql.cassandra #boot-features-connecting-to-couchbase #data.nosql.couchbase.connecting #features.nosql.couchbase.connecting #boot-features-spring-data-couchbase-repositories #data.nosql.couchbase.repositories #features.nosql.couchbase.repositories #boot-features-couchbase #data.nosql.couchbase #features.nosql.couchbase #data.nosql.elasticsearch.connecting-using-rest.javaapiclient #data.nosql.elasticsearch.connecting-using-rest.reactiveclient #data.nosql.elasticsearch.connecting-using-rest.webclient #data.nosql.elasticsearch.connecting-using-rest.restclient #boot-features-connecting-to-elasticsearch-rest #data.nosql.elasticsearch.connecting-using-reactive-rest #data.nosql.elasticsearch.connecting-using-rest #features.nosql.elasticsearch.", "start_char_idx": 17120, "end_char_idx": 21198, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86ade1b9-7255-4eb0-9728-2922a450f990": {"__data__": {"id_": "86ade1b9-7255-4eb0-9728-2922a450f990", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6d2db28-2218-433a-b5ac-235cfbc37e9d", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "901635ec04b99af7636b71253b43b0df995362dd11402b824d651b160b906eb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3f08c44-53be-4a0f-871a-310cac17ee9c", "node_type": "1", "metadata": {}, "hash": "4d8a593ab069af04008b175df535f3ad0b7b3c610b5a97403bf4946aa323e77c", "class_name": "RelatedNodeInfo"}}, "text": "nosql.couchbase.connecting #features.nosql.couchbase.connecting #boot-features-spring-data-couchbase-repositories #data.nosql.couchbase.repositories #features.nosql.couchbase.repositories #boot-features-couchbase #data.nosql.couchbase #features.nosql.couchbase #data.nosql.elasticsearch.connecting-using-rest.javaapiclient #data.nosql.elasticsearch.connecting-using-rest.reactiveclient #data.nosql.elasticsearch.connecting-using-rest.webclient #data.nosql.elasticsearch.connecting-using-rest.restclient #boot-features-connecting-to-elasticsearch-rest #data.nosql.elasticsearch.connecting-using-reactive-rest #data.nosql.elasticsearch.connecting-using-rest #features.nosql.elasticsearch.connecting-using-rest #boot-features-connecting-to-elasticsearch-spring-data #data.nosql.elasticsearch.connecting-using-spring-data #features.nosql.elasticsearch.connecting-using-spring-data #boot-features-spring-data-elasticsearch-repositories #data.nosql.elasticsearch.repositories #features.nosql.elasticsearch.repositories #boot-features-connecting-to-elasticsearch-reactive-rest #boot-features-elasticsearch #data.nosql.elasticsearch #features.nosql.elasticsearch #boot-features-ldap-connecting #data.nosql.ldap.connecting #features.nosql.ldap.connecting #boot-features-ldap-embedded #data.nosql.ldap.embedded #features.nosql.ldap.embedded #boot-features-ldap-spring-data-repositories #data.nosql.ldap.repositories #features.nosql.ldap.repositories #boot-features-ldap #data.nosql.ldap #features.nosql.ldap #boot-features-connecting-to-mongodb #data.nosql.mongodb.connecting #features.nosql.mongodb.connecting #boot-features-spring-data-mongo-repositories #boot-features-spring-data-mongodb-repositories #data.nosql.mongodb.repositories #features.nosql.mongodb.repositories #boot-features-mongo-template #data.nosql.mongodb.template #features.nosql.mongodb.template #boot-features-mongodb #data.nosql.mongodb #features.nosql.mongodb #boot-features-connecting-to-neo4j #data.nosql.neo4j.connecting #features.nosql.neo4j.connecting #boot-features-spring-data-neo4j-repositories #data.nosql.neo4j.repositories #features.nosql.neo4j.repositories #boot-features-neo4j #data.nosql.neo4j #features.nosql.neo4j #boot-features-connecting-to-redis #data.nosql.redis.connecting #features.nosql.redis.connecting #boot-features-redis #data.nosql.redis #features.nosql.redis #boot-features-nosql #data.nosql #features.nosql #boot-features-connect-to-production-database-configuration #data.sql.datasource.configuration #features.sql.datasource.configuration #boot-features-connect-to-production-database-connection-pool #data.sql.datasource.connection-pool #features.sql.datasource.connection-pool #boot-features-embedded-database-support #data.sql.datasource.embedded #features.sql.datasource.embedded #boot-features-connecting-to-a-jndi-datasource #data.sql.datasource.jndi #features.sql.datasource.jndi #boot-features-connect-to-production-database #data.sql.datasource.production #features.sql.datasource.production #boot-features-configure-datasource #data.sql.datasource #features.sql.datasource #boot-features-sql-h2-console-custom-path #data.sql.h2-web-console.custom-path #features.sql.h2-web-console.custom-path #data.sql.h2-web-console.spring-security #boot-features-sql-h2-console #data.sql.h2-web-console #features.sql.h2-web-console #data.sql.jdbc-client #boot-features-using-jdbc-template #data.sql.jdbc-template #features.sql.jdbc-template #boot-features-data-jdbc #data.sql.jdbc #features.sql.jdbc #boot-features-jooq-codegen #data.sql.jooq.codegen #features.sql.jooq.codegen #boot-features-jooq-customizing #data.sql.", "start_char_idx": 20512, "end_char_idx": 24124, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3f08c44-53be-4a0f-871a-310cac17ee9c": {"__data__": {"id_": "d3f08c44-53be-4a0f-871a-310cac17ee9c", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86ade1b9-7255-4eb0-9728-2922a450f990", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "887fee9e5b1ed9ce8f6aff8222f8c47fa04d0858ed80b21f25005128c554e8c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6c0262a-8584-41cc-8666-e955795ed3ec", "node_type": "1", "metadata": {}, "hash": "9fc92db860ad6f8db6ea67ea2a5a1e0851c3e1a7207dad7f6913b1f890429563", "class_name": "RelatedNodeInfo"}}, "text": "production #features.sql.datasource.production #boot-features-configure-datasource #data.sql.datasource #features.sql.datasource #boot-features-sql-h2-console-custom-path #data.sql.h2-web-console.custom-path #features.sql.h2-web-console.custom-path #data.sql.h2-web-console.spring-security #boot-features-sql-h2-console #data.sql.h2-web-console #features.sql.h2-web-console #data.sql.jdbc-client #boot-features-using-jdbc-template #data.sql.jdbc-template #features.sql.jdbc-template #boot-features-data-jdbc #data.sql.jdbc #features.sql.jdbc #boot-features-jooq-codegen #data.sql.jooq.codegen #features.sql.jooq.codegen #boot-features-jooq-customizing #data.sql.jooq.customizing #features.sql.jooq.customizing #boot-features-jooq-dslcontext #data.sql.jooq.dslcontext #features.sql.jooq.dslcontext #boot-features-jooq-sqldialect #data.sql.jooq.sqldialect #features.sql.jooq.sqldialect #boot-features-jooq #data.sql.jooq #features.sql.jooq #boot-features-creating-and-dropping-jpa-databases #data.sql.jpa-and-spring-data.creating-and-dropping #features.sql.jpa-and-spring-data.creating-and-dropping #boot-features-entity-classes #data.sql.jpa-and-spring-data.entity-classes #features.sql.jpa-and-spring-data.entity-classes #data.sql.jpa-and-spring-data.envers-repositories #features.sql.jpa-and-spring-data.envers-repositories #boot-features-jpa-in-web-environment #data.sql.jpa-and-spring-data.open-entity-manager-in-view #features.sql.jpa-and-spring-data.open-entity-manager-in-view #boot-features-spring-data-jpa-repositories #data.sql.jpa-and-spring-data.repositories #features.sql.jpa-and-spring-data.repositories #boot-features-jpa-and-spring-data #data.sql.jpa-and-spring-data #features.sql.jpa-and-spring-data #boot-features-r2dbc-embedded-database #data.sql.r2dbc.embedded #features.sql.r2dbc.embedded #boot-features-spring-data-r2dbc-repositories #data.sql.r2dbc.repositories #features.sql.r2dbc.repositories #boot-features-r2dbc-using-database-client #data.sql.r2dbc.using-database-client #features.sql.r2dbc.using-database-client #boot-features-r2dbc #data.sql.r2dbc #features.sql.r2dbc #boot-features-sql #data.sql #features.sql #features.aop #features.docker-compose.custom-images #features.docker-compose.lifecycle #features.docker-compose.prerequisites #features.docker-compose.profiles #features.docker-compose.readiness #features.docker-compose.service-connections #features.docker-compose.skipping #features.docker-compose.specific-file #features.docker-compose #features.testcontainers.at-development-time.devtools #features.testing.testcontainers.at-development-time.devtools #features.testcontainers.at-development-time.dynamic-properties #features.testing.testcontainers.at-development-time.dynamic-properties #features.testcontainers.at-development-time.importing-container-declarations #features.testing.testcontainers.at-development-time.importing-container-declarations #features.testcontainers.at-development-time #features.testing.testcontainers.at-development-time #features.testcontainers #boot-features-bean-conditions #features.developing-auto-configuration.condition-annotations.bean-conditions #boot-features-class-conditions #features.developing-auto-configuration.condition-annotations.class-conditions #boot-features-property-conditions #features.developing-auto-configuration.condition-annotations.property-conditions #boot-features-resource-conditions #features.developing-auto-configuration.condition-annotations.resource-conditions #boot-features-spel-conditions #features.developing-auto-configuration.condition-annotations.spel-conditions #boot-features-web-application-conditions #features.developing-auto-configuration.condition-annotations.web-application-conditions #boot-features-condition-annotations #features.", "start_char_idx": 23462, "end_char_idx": 27221, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6c0262a-8584-41cc-8666-e955795ed3ec": {"__data__": {"id_": "b6c0262a-8584-41cc-8666-e955795ed3ec", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3f08c44-53be-4a0f-871a-310cac17ee9c", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9d81fc80251c9547be6fd586692dd4042e8b3e05fed0f52bdc90f18e2d9c26e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79697e99-a3c6-437f-bc4e-bac1d8460589", "node_type": "1", "metadata": {}, "hash": "a5c27d3f02b6544b0a0cab764001ef4dcf202c14ee7d2bace90732d2a3dfd4bb", "class_name": "RelatedNodeInfo"}}, "text": "importing-container-declarations #features.testing.testcontainers.at-development-time.importing-container-declarations #features.testcontainers.at-development-time #features.testing.testcontainers.at-development-time #features.testcontainers #boot-features-bean-conditions #features.developing-auto-configuration.condition-annotations.bean-conditions #boot-features-class-conditions #features.developing-auto-configuration.condition-annotations.class-conditions #boot-features-property-conditions #features.developing-auto-configuration.condition-annotations.property-conditions #boot-features-resource-conditions #features.developing-auto-configuration.condition-annotations.resource-conditions #boot-features-spel-conditions #features.developing-auto-configuration.condition-annotations.spel-conditions #boot-features-web-application-conditions #features.developing-auto-configuration.condition-annotations.web-application-conditions #boot-features-condition-annotations #features.developing-auto-configuration.condition-annotations #boot-features-custom-starter-module-autoconfigure #features.developing-auto-configuration.custom-starter.autoconfigure-module #boot-features-custom-starter-configuration-keys #features.developing-auto-configuration.custom-starter.configuration-keys #boot-features-custom-starter-naming #features.developing-auto-configuration.custom-starter.naming #boot-features-custom-starter-module-starter #features.developing-auto-configuration.custom-starter.starter-module #boot-features-custom-starter #features.developing-auto-configuration.custom-starter #boot-features-locating-auto-configuration-candidates #features.developing-auto-configuration.locating-auto-configuration-candidates #boot-features-test-autoconfig-overriding-classpath #features.developing-auto-configuration.testing.overriding-classpath #boot-features-test-autoconfig-simulating-web-context #features.developing-auto-configuration.testing.simulating-a-web-context #boot-features-test-autoconfig #features.developing-auto-configuration.testing #boot-features-understanding-auto-configured-beans #features.developing-auto-configuration.understanding-auto-configured-beans #boot-features-developing-auto-configuration #features.developing-auto-configuration #boot-features-external-config-application-json #features.external-config.application-json #boot-features-external-config-command-line-args #features.external-config.command-line-args #boot-features-encrypting-properties #features.external-config.encrypting #boot-features-external-config-file-activation-properties #features.external-config.files.activation-properties #boot-features-external-config-files-configtree #features.external-config.files.configtree #boot-features-external-config-files-importing-extensionless #features.external-config.file.importing-extensionless #features.external-config.files.importing-extensionless #boot-features-external-config-files-importing #features.external-config.files.importing #features.external-config.files.location-groups #boot-features-external-config-files-multi-document #features.external-config.files.multi-document #boot-features-external-config-optional-prefix #features.external-config.files.optional-prefix #boot-features-external-config-files-profile-specific #features.external-config.files.profile-specific #boot-features-external-config-placeholders-in-properties #features.external-config.files.property-placeholders #boot-features-external-config-files-wildcards #features.external-config.files.wildcard-locations #boot-features-external-config-files #features.external-config.files #boot-features-external-config-random-values #features.external-config.random-values #boot-features-external-config-system-environment #features.external-config.system-environment #boot-features-external-config-constructor-binding #features.external-config.typesafe-configuration-properties.constructor-binding #boot-features-external-config-conversion-datasize #features.external-config.typesafe-configuration-properties.conversion.data-sizes #boot-features-external-config-conversion-duration #features.external-config.typesafe-configuration-properties.conversion.durations #boot-features-external-config-conversion-period #features.external-config.typesafe-configuration-properties.conversion.periods #boot-features-external-config-conversion #features.external-config.typesafe-configuration-properties.conversion #boot-features-external-config-enabling #features.external-config.typesafe-configuration-properties.enabling-annotated-types #boot-features-external-config-java-bean-binding #features.external-config.typesafe-configuration-properties.java-bean-binding #boot-features-external-config-complex-type-merge #features.external-config.typesafe-configuration-properties.merging-complex-types #features.external-config.", "start_char_idx": 26238, "end_char_idx": 31067, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79697e99-a3c6-437f-bc4e-bac1d8460589": {"__data__": {"id_": "79697e99-a3c6-437f-bc4e-bac1d8460589", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6c0262a-8584-41cc-8666-e955795ed3ec", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "33bdefc6579c477882111290d266f292e07cec5d26deb1cbdab602aefcdc8b89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71e3d86c-ec24-4951-962b-8f3741353a45", "node_type": "1", "metadata": {}, "hash": "e2319265643e00c4bfd900030262342ac80e0b4ab1075ec084706ee5c01a724a", "class_name": "RelatedNodeInfo"}}, "text": "typesafe-configuration-properties.constructor-binding #boot-features-external-config-conversion-datasize #features.external-config.typesafe-configuration-properties.conversion.data-sizes #boot-features-external-config-conversion-duration #features.external-config.typesafe-configuration-properties.conversion.durations #boot-features-external-config-conversion-period #features.external-config.typesafe-configuration-properties.conversion.periods #boot-features-external-config-conversion #features.external-config.typesafe-configuration-properties.conversion #boot-features-external-config-enabling #features.external-config.typesafe-configuration-properties.enabling-annotated-types #boot-features-external-config-java-bean-binding #features.external-config.typesafe-configuration-properties.java-bean-binding #boot-features-external-config-complex-type-merge #features.external-config.typesafe-configuration-properties.merging-complex-types #features.external-config.typesafe-configuration-properties.relaxed-binding.caching #boot-features-external-config-relaxed-binding-from-environment-variables #features.external-config.typesafe-configuration-properties.relaxed-binding.environment-variables #boot-features-external-config-relaxed-binding-maps #features.external-config.typesafe-configuration-properties.relaxed-binding.maps #boot-features-external-config-relaxed-binding #features.external-config.typesafe-configuration-properties.relaxed-binding #boot-features-external-config-3rd-party-configuration #features.external-config.typesafe-configuration-properties.third-party-configuration #boot-features-external-config-using #features.external-config.typesafe-configuration-properties.using-annotated-types #boot-features-external-config-validation #features.external-config.typesafe-configuration-properties.validation #features.external-config.typesafe-configuration-properties.vs-value-annotation.note #boot-features-external-config-vs-value #features.external-config.typesafe-configuration-properties.vs-value-annotation #boot-features-external-config-typesafe-configuration-properties #features.external-config.typesafe-configuration-properties #boot-features-external-config-loading-yaml #features.external-config.yaml.directly-loading #boot-features-external-config-yaml-to-properties #features.external-config.yaml.mapping-to-properties #boot-features-external-config-yaml #features.external-config.yaml #boot-features-external-config #features.external-config #boot-features #features #features features #boot-features-internationalization #features.internationalization #boot-features-json-gson #features.json.gson #boot-features-json-components #features.developing-web-applications.spring-mvc.json #features.json.jackson.custom-serializers-and-deserializers #web.servlet.spring-mvc.json #features.json.jackson.mixins #boot-features-json-jackson #features.json.jackson #boot-features-json-json-b #features.json.json-b #boot-features-json #features.json #boot-features-kotlin-api-extensions #features.kotlin.api.extensions #boot-features-kotlin-api-runapplication #features.kotlin.api.run-application #boot-features-kotlin-api #features.kotlin.api #boot-features-kotlin-configuration-properties #features.kotlin.configuration-properties #boot-features-kotlin-dependency-management #features.kotlin.dependency-management #boot-features-kotlin-null-safety #features.kotlin.null-safety #boot-features-kotlin-requirements #features.kotlin.requirements #boot-features-kotlin-resources-examples #features.kotlin.resources.examples #boot-features-kotlin-resources-further-reading #features.kotlin.resources.further-reading #boot-features-kotlin-resources #features.kotlin.resources #boot-features-kotlin-testing #features.kotlin.testing #boot-features-kotlin #features.kotlin #boot-features-logging-color-coded-output #features.logging.console-output.color-coded #boot-features-logging-console-output #features.logging.console-output #boot-features-custom-log-configuration #features.logging.custom-log-configuration #boot-features-logging-file-output #features.logging.file-output #boot-features-logging-file-rotation #features.logging.file-rotation #boot-features-logging-format #features.logging.log-format #boot-features-custom-log-groups #features.logging.log-groups #boot-features-custom-log-levels #features.logging.log-levels #features.logging.log4j2-extensions.environment-properties-lookup #features.logging.log4j2-extensions.environment-property-source #features.logging.log4j2-extensions.", "start_char_idx": 30097, "end_char_idx": 34609, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "71e3d86c-ec24-4951-962b-8f3741353a45": {"__data__": {"id_": "71e3d86c-ec24-4951-962b-8f3741353a45", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79654719-cfdf-4272-9cfd-f828592c7f0c", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e058370a3cde2326511a78954b01ee6fab9e99e1908d8c7b91827676684fd1b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79697e99-a3c6-437f-bc4e-bac1d8460589", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d1b3d517d30f5aedcb2d2a95fc3bd74d5198489bb588a7f94a452bf1d1b83b56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ccec08ec-9858-456d-ab40-6e91e517ebe2", "node_type": "1", "metadata": {}, "hash": "49a0f7f9a3cb5516e36e9deb5a391c2b842900a777b9902f6c12a81d7305fde5", "class_name": "RelatedNodeInfo"}}, "text": "kotlin.resources #boot-features-kotlin-testing #features.kotlin.testing #boot-features-kotlin #features.kotlin #boot-features-logging-color-coded-output #features.logging.console-output.color-coded #boot-features-logging-console-output #features.logging.console-output #boot-features-custom-log-configuration #features.logging.custom-log-configuration #boot-features-logging-file-output #features.logging.file-output #boot-features-logging-file-rotation #features.logging.file-rotation #boot-features-logging-format #features.logging.log-format #boot-features-custom-log-groups #features.logging.log-groups #boot-features-custom-log-levels #features.logging.log-levels #features.logging.log4j2-extensions.environment-properties-lookup #features.logging.log4j2-extensions.environment-property-source #features.logging.log4j2-extensions.profile-specific #features.logging.log4j2-extensions #boot-features-logback-environment-properties #features.logging.logback-extensions.environment-properties #boot-features-logback-extensions-profile-specific #features.logging.logback-extensions.profile-specific #boot-features-logback-extensions #features.logging.logback-extensions #boot-features-log-shutdown-hook #features.logging.shutdown-hook #boot-features-logging #features.logging #boot-features-adding-active-profiles", "start_char_idx": 33774, "end_char_idx": 35087, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ccec08ec-9858-456d-ab40-6e91e517ebe2": {"__data__": {"id_": "ccec08ec-9858-456d-ab40-6e91e517ebe2", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71e3d86c-ec24-4951-962b-8f3741353a45", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "579a60fdc9aeba53836cb843913d4c56286edc91714db1777ba3ef6a1784c712", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb6fafe5-9daf-4a24-bfb7-5cb6efec9e22", "node_type": "1", "metadata": {}, "hash": "893a9df17330e34e9c8fe3b755320436ce8aa585f40a9c2592ea106de9e53227", "class_name": "RelatedNodeInfo"}}, "text": "#features.profiles.adding-active-profiles #boot-features-profiles-groups #features.profiles.groups #boot-features-profile-specific-configuration #features.profiles.profile-specific-configuration-files #boot-features-programmatically-setting-profiles #features.profiles.programmatically-setting-profiles #boot-features-profiles #features.profiles #boot-features-application-admin #features.spring-application.admin #boot-features-application-arguments #features.spring-application.application-arguments #boot-features-application-availability-liveness-state #features.spring-application.application-availability.liveness #boot-features-application-availability-managing #features.spring-application.application-availability.managing #boot-features-application-availability-readiness-state #features.spring-application.application-availability.readiness #boot-features-application-availability #features.spring-application.application-availability #boot-features-application-events-and-listeners #features.spring-application.application-events-and-listeners #boot-features-application-exit #features.spring-application.application-exit #boot-features-banner #features.spring-application.banner #boot-features-command-line-runner #features.spring-application.command-line-runner #boot-features-customizing-spring-application #features.spring-application.customizing-spring-application #boot-features-fluent-builder-api #features.spring-application.fluent-builder-api #boot-features-lazy-initialization #features.spring-application.lazy-initialization #boot-features-startup-failure #features.spring-application.startup-failure #boot-features-application-startup-tracking #features.spring-application.startup-tracking #features.spring-application.virtual-threads #boot-features-web-environment #features.spring-application.web-environment #boot-features-spring-application #features.spring-application #features.ssl.applying #features.ssl.bundles #features.ssl.jks #features.ssl.pem #features.ssl.reloading #features.ssl #boot-features-task-execution-scheduling #features.task-execution-and-scheduling #io.caching.provider.cache2k #boot-features-caching-provider-caffeine #features.caching.provider.caffeine #io.caching.provider.caffeine #boot-features-caching-provider-couchbase #features.caching.provider.couchbase #io.caching.provider.couchbase #boot-features-caching-provider-generic #features.caching.provider.generic #io.caching.provider.generic #boot-features-caching-provider-hazelcast #features.caching.provider.hazelcast #io.caching.provider.hazelcast #boot-features-caching-provider-infinispan #features.caching.provider.infinispan #io.caching.provider.infinispan #boot-features-caching-provider-jcache #features.caching.provider.ehcache2 #features.caching.provider.jcache #io.caching.provider.jcache #boot-features-caching-provider-none #features.caching.provider.none #io.caching.provider.none #boot-features-caching-provider-redis #features.caching.provider.redis #io.caching.provider.redis #boot-features-caching-provider-simple #features.caching.provider.simple #io.caching.provider.simple #boot-features-caching-provider #features.caching.provider #io.caching.provider #boot-features-caching #features.caching #io.caching #boot-features-email #features.email #io.email #boot-features-hazelcast #features.hazelcast #io.hazelcast #io #io io #boot-features-jta-javaee #features.jta.javaee #io.jta.jakartaee #boot-features-jta-mixed-jms #features.jta.mixing-xa-and-non-xa-connections #io.jta.mixing-xa-and-non-xa-connections #boot-features-jta-supporting-alternative-embedded #features.jta.supporting-alternative-embedded-transaction-manager #io.jta.supporting-embedded-transaction-manager #boot-features-jta #features.jta #io.jta #boot-features-quartz #features.quartz #io.quartz #io.rest-client.clienthttprequestfactory #io.rest-client.restclient.customization #io.rest-client.restclient.ssl #io.rest-client.restclient #boot-features-resttemplate-customization #features.resttemplate.customization #io.rest-client.resttemplate.customization #io.rest-client.resttemplate.", "start_char_idx": 0, "end_char_idx": 4081, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb6fafe5-9daf-4a24-bfb7-5cb6efec9e22": {"__data__": {"id_": "fb6fafe5-9daf-4a24-bfb7-5cb6efec9e22", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ccec08ec-9858-456d-ab40-6e91e517ebe2", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "30befc4c157047448b7321f007c7b5ab0f2f0e21f5d4f8ecd402501ca5da99b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4719def-a2e9-4127-aaa3-984d4192ccc0", "node_type": "1", "metadata": {}, "hash": "c0be344439d28cbf6e609fe52fc6673fd5fcd4ce0b5ddba780f9cb7cdca24200", "class_name": "RelatedNodeInfo"}}, "text": "jta.jakartaee #boot-features-jta-mixed-jms #features.jta.mixing-xa-and-non-xa-connections #io.jta.mixing-xa-and-non-xa-connections #boot-features-jta-supporting-alternative-embedded #features.jta.supporting-alternative-embedded-transaction-manager #io.jta.supporting-embedded-transaction-manager #boot-features-jta #features.jta #io.jta #boot-features-quartz #features.quartz #io.quartz #io.rest-client.clienthttprequestfactory #io.rest-client.restclient.customization #io.rest-client.restclient.ssl #io.rest-client.restclient #boot-features-resttemplate-customization #features.resttemplate.customization #io.rest-client.resttemplate.customization #io.rest-client.resttemplate.ssl #boot-features-resttemplate #features.resttemplate #io.rest-client.resttemplate #boot-features-webclient-customization #features.webclient.customization #io.rest-client.webclient.customization #boot-features-webclient-runtime #features.webclient.runtime #io.rest-client.webclient.runtime #io.rest-client.webclient.ssl #boot-features-webclient #features.webclient #io.rest-client.webclient #io.rest-client #boot-features-validation #features.validation #io.validation #boot-features-webservices-template #features.webservices.template #io.webservices.template #boot-features-webservices #features.webservices #io.webservices #boot-features-rabbitmq #features.messaging.amqp.rabbit #messaging.amqp.rabbit #messaging.amqp.rabbitmq #boot-features-using-amqp-receiving #features.messaging.amqp.receiving #messaging.amqp.receiving #messaging.amqp.sending-stream #boot-features-using-amqp-sending #features.messaging.amqp.sending #messaging.amqp.sending #boot-features-amqp #features.messaging.amqp #messaging.amqp #boot-features-messaging #features.messaging #messaging #messaging messaging #boot-features-activemq #features.messaging.jms.activemq #messaging.jms.activemq #boot-features-artemis #features.messaging.jms.artemis #messaging.jms.artemis #boot-features-jms-jndi #features.messaging.jms.jndi #messaging.jms.jndi #boot-features-using-jms-receiving #features.messaging.jms.receiving #messaging.jms.receiving #boot-features-using-jms-sending #features.messaging.jms.sending #messaging.jms.sending #boot-features-jms #features.messaging.jms #messaging.jms #boot-features-kafka-extra-props #features.messaging.kafka.additional-properties #messaging.kafka.additional-properties #boot-features-embedded-kafka #features.messaging.kafka.embedded #messaging.kafka.embedded #boot-features-kafka-receiving-a-message #features.messaging.kafka.receiving #messaging.kafka.receiving #boot-features-kafka-sending-a-message #features.messaging.kafka.sending #messaging.kafka.sending #boot-features-kafka-streams #features.messaging.kafka.streams #messaging.kafka.streams #boot-features-kafka #features.messaging.kafka #messaging.kafka #messaging.pulsar.additional-properties #messaging.pulsar.admin.auth #messaging.pulsar.admin #messaging.pulsar.connecting-reactive #messaging.pulsar.connecting.auth #messaging.pulsar.connecting.ssl #messaging.pulsar.connecting #messaging.pulsar.reading-reactive #messaging.pulsar.reading #messaging.pulsar.receiving-reactive #messaging.pulsar.receiving #messaging.pulsar.sending-reactive #messaging.pulsar.sending #messaging.pulsar #boot-features-rsocket-messaging #features.rsocket.messaging #messaging.rsocket.messaging #boot-features-rsocket-requester #features.rsocket.requester #messaging.rsocket.", "start_char_idx": 3403, "end_char_idx": 6809, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4719def-a2e9-4127-aaa3-984d4192ccc0": {"__data__": {"id_": "e4719def-a2e9-4127-aaa3-984d4192ccc0", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb6fafe5-9daf-4a24-bfb7-5cb6efec9e22", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3d44506268459f87edc082d8512f6de68451ec987a1e69e7bf205123b8f0d69c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cdd91ea-e22b-40ec-96e8-43f6d188e8d4", "node_type": "1", "metadata": {}, "hash": "17d2ffbbaec9f91a6c4fd7f283c3b5201c4cd345074cc59dcdaeb12340698dab", "class_name": "RelatedNodeInfo"}}, "text": "messaging.kafka #messaging.kafka #messaging.pulsar.additional-properties #messaging.pulsar.admin.auth #messaging.pulsar.admin #messaging.pulsar.connecting-reactive #messaging.pulsar.connecting.auth #messaging.pulsar.connecting.ssl #messaging.pulsar.connecting #messaging.pulsar.reading-reactive #messaging.pulsar.reading #messaging.pulsar.receiving-reactive #messaging.pulsar.receiving #messaging.pulsar.sending-reactive #messaging.pulsar.sending #messaging.pulsar #boot-features-rsocket-messaging #features.rsocket.messaging #messaging.rsocket.messaging #boot-features-rsocket-requester #features.rsocket.requester #messaging.rsocket.requester #boot-features-rsocket-server-auto-configuration #features.rsocket.server-auto-configuration #messaging.rsocket.server-auto-configuration #boot-features-rsocket-strategies-auto-configuration #features.rsocket.strategies-auto-configuration #messaging.rsocket.strategies-auto-configuration #boot-features-rsocket #features.rsocket #messaging.rsocket #boot-features-integration #features.spring-integration #messaging.spring-integration #boot-features-websockets #features.websockets #messaging.websockets #deployment.efficient.aot #deployment.efficient.checkpoint-restore #boot-features-container-images-buildpacks #container-images.buildpacks #features.container-images.building.buildpacks #boot-features-container-images-docker #container-images.dockerfiles #features.container-images.building.dockerfiles #boot-layering-docker-images #container-images.efficient-images.layering #features.container-images.layering #boot-features-container-images-building #boot-features-container-images #container-images.efficient-images #features.container-images.building #container-images #container-images container-images #container-images.efficient-images.unpacking #containers-deployment #deployment.containers #deployment.efficient.unpacking #deployment.efficient #native-image.advanced.converting-executable-jars.buildpacks #native-image.advanced.converting-executable-jars.native-image #native-image.advanced.converting-executable-jars #native-image.advanced.custom-hints.testing #native-image.advanced.custom-hints #native-image.advanced.known-limitations #native-image.advanced.nested-configuration-properties #native-image.advanced.using-the-tracing-agent.launch #native-image.advanced.using-the-tracing-agent #native-image.advanced #native-image #native-image native-image #packaging.native-image.introducing-graalvm-native-images.key-differences-with-jvm-deployments #packaging.native-image.introducing-graalvm-native-images.understanding-aot-processing.hint-file-generation #packaging.native-image.introducing-graalvm-native-images.understanding-aot-processing.proxy-class-generation #packaging.native-image.introducing-graalvm-native-images.understanding-aot-processing.source-code-generation #packaging.native-image.introducing-graalvm-native-images.understanding-aot-processing #native-image.introducing-graalvm-native-images #boot-features-testing #features.testing #boot-features-testing-spring-applications #features.testing.spring-applications #boot-features-testing-spring-boot-applications-testing-auto-configured-additional-auto-config #features.testing.spring-boot-applications.additional-autoconfiguration-and-slicing #boot-features-testing-spring-boot-applications-testing-autoconfigured-jdbc-test #features.testing.spring-boot-applications.autoconfigured-jdbc #boot-features-testing-spring-boot-applications-testing-autoconfigured-jooq-test #features.testing.spring-boot-applications.autoconfigured-jooq #boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-client #features.testing.spring-boot-applications.autoconfigured-rest-client #boot-features-testing-spring-boot-applications-testing-autoconfigured-cassandra-test #features.testing.spring-boot-applications.autoconfigured-spring-data-cassandra #features.testing.spring-boot-applications.autoconfigured-spring-data-couchbase #features.testing.spring-boot-applications.autoconfigured-spring-data-elasticsearch #boot-features-testing-spring-boot-applications-testing-autoconfigured-data-jdbc-test #features.testing.spring-boot-applications.autoconfigured-spring-data-jdbc #boot-features-testing-spring-boot-applications-testing-autoconfigured-jpa-test #features.testing.spring-boot-applications.", "start_char_idx": 6174, "end_char_idx": 10505, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cdd91ea-e22b-40ec-96e8-43f6d188e8d4": {"__data__": {"id_": "4cdd91ea-e22b-40ec-96e8-43f6d188e8d4", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4719def-a2e9-4127-aaa3-984d4192ccc0", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "476204dbeada23e6309aa13320ae95990e9a0544d2124d8802e75ff2cd77cd70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0886f63e-bb60-44b1-a245-9847f44392be", "node_type": "1", "metadata": {}, "hash": "8e54c46e43ea2852e4d4ccdda85a8eed3e11d1016c22c2c1a9a27af002abc62e", "class_name": "RelatedNodeInfo"}}, "text": "testing.spring-boot-applications.autoconfigured-jdbc #boot-features-testing-spring-boot-applications-testing-autoconfigured-jooq-test #features.testing.spring-boot-applications.autoconfigured-jooq #boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-client #features.testing.spring-boot-applications.autoconfigured-rest-client #boot-features-testing-spring-boot-applications-testing-autoconfigured-cassandra-test #features.testing.spring-boot-applications.autoconfigured-spring-data-cassandra #features.testing.spring-boot-applications.autoconfigured-spring-data-couchbase #features.testing.spring-boot-applications.autoconfigured-spring-data-elasticsearch #boot-features-testing-spring-boot-applications-testing-autoconfigured-data-jdbc-test #features.testing.spring-boot-applications.autoconfigured-spring-data-jdbc #boot-features-testing-spring-boot-applications-testing-autoconfigured-jpa-test #features.testing.spring-boot-applications.autoconfigured-spring-data-jpa #boot-features-testing-spring-boot-applications-testing-autoconfigured-ldap-test #features.testing.spring-boot-applications.autoconfigured-spring-data-ldap #boot-features-testing-spring-boot-applications-testing-autoconfigured-mongo-test #features.testing.spring-boot-applications.autoconfigured-spring-data-mongodb #boot-features-testing-spring-boot-applications-testing-autoconfigured-neo4j-test #features.testing.spring-boot-applications.autoconfigured-spring-data-neo4j #features.testing.spring-boot-applications.autoconfigured-spring-data-r2dbc #boot-features-testing-spring-boot-applications-testing-autoconfigured-redis-test #features.testing.spring-boot-applications.autoconfigured-spring-data-redis #boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs-mock-mvc #features.testing.spring-boot-applications.autoconfigured-spring-restdocs.with-mock-mvc #boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs-rest-assured #features.testing.spring-boot-applications.autoconfigured-spring-restdocs.with-rest-assured #boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs-web-test-client #features.testing.spring-boot-applications.autoconfigured-spring-restdocs.with-web-test-client #boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs #features.testing.spring-boot-applications.autoconfigured-spring-restdocs #boot-features-testing-spring-boot-applications-testing-autoconfigured-tests #features.testing.spring-boot-applications.autoconfigured-tests #features.testing.spring-boot-applications.autoconfigured-webservices.client #features.testing.spring-boot-applications.autoconfigured-webservices.server #boot-features-testing-spring-boot-applications-testing-autoconfigured-webservices #features.testing.spring-boot-applications.autoconfigured-webservices #boot-features-testing-spring-boot-applications-customizing-web-test-client #features.testing.spring-boot-applications.customizing-web-test-client #boot-features-testing-spring-boot-applications-detecting-config #features.testing.spring-boot-applications.detecting-configuration #boot-features-testing-spring-boot-applications-detecting-web-app-type #features.testing.spring-boot-applications.detecting-web-app-type #boot-features-testing-spring-boot-applications-excluding-config #features.testing.spring-boot-applications.excluding-configuration #boot-features-testing-spring-boot-applications-jmx #features.testing.spring-boot-applications.jmx #boot-features-testing-spring-boot-applications-testing-autoconfigured-json-tests #features.testing.spring-boot-applications.json-tests #boot-features-testing-spring-boot-applications-metrics #features.testing.spring-boot-applications.metrics #boot-features-testing-spring-boot-applications-mocking-beans #features.testing.spring-boot-applications.mocking-beans #features.testing.spring-boot-applications.observations #boot-features-testing-spring-boot-applications-with-spock #features.testing.spring-boot-applications.spock #features.testing.spring-boot-applications.spring-graphql-tests #boot-features-testing-spring-boot-applications-testing-autoconfigured-mvc-tests #features.testing.spring-boot-applications.spring-mvc-tests #boot-features-testing-spring-boot-applications-testing-autoconfigured-webflux-tests #features.testing.spring-boot-applications.spring-webflux-tests #features.testing.spring-boot-applications.tracing #boot-features-testing-spring-boot-applications-testing-user-configuration #features.testing.spring-boot-applications.user-configuration-and-slicing #boot-features-testing-spring-boot-application-arguments #features.testing.spring-boot-applications.using-application-arguments #features.", "start_char_idx": 9541, "end_char_idx": 14268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0886f63e-bb60-44b1-a245-9847f44392be": {"__data__": {"id_": "0886f63e-bb60-44b1-a245-9847f44392be", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cdd91ea-e22b-40ec-96e8-43f6d188e8d4", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c14e5cf83ec0b601e4f9d526a1e61710dd84739bfa0affb8c00d9444368f1d72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5811ffb3-ef32-47af-a763-bdec942184a5", "node_type": "1", "metadata": {}, "hash": "b9da144df69fffacdfa284f92905a6fcc19861a291dcaa8dd62cd756ca323a14", "class_name": "RelatedNodeInfo"}}, "text": "testing.spring-boot-applications.mocking-beans #features.testing.spring-boot-applications.observations #boot-features-testing-spring-boot-applications-with-spock #features.testing.spring-boot-applications.spock #features.testing.spring-boot-applications.spring-graphql-tests #boot-features-testing-spring-boot-applications-testing-autoconfigured-mvc-tests #features.testing.spring-boot-applications.spring-mvc-tests #boot-features-testing-spring-boot-applications-testing-autoconfigured-webflux-tests #features.testing.spring-boot-applications.spring-webflux-tests #features.testing.spring-boot-applications.tracing #boot-features-testing-spring-boot-applications-testing-user-configuration #features.testing.spring-boot-applications.user-configuration-and-slicing #boot-features-testing-spring-boot-application-arguments #features.testing.spring-boot-applications.using-application-arguments #features.testing.spring-boot-applications.using-main #boot-features-testing-spring-boot-applications-testing-with-mock-environment #features.testing.spring-boot-applications.with-mock-environment #boot-features-testing-spring-boot-applications-testing-with-running-server #features.testing.spring-boot-applications.with-running-server #boot-features-testing-spring-boot-applications #features.testing.spring-boot-applications #boot-features-test-scope-dependencies #features.testing.test-scope-dependencies #boot-features-configfileapplicationcontextinitializer-test-utility #features.testing.utilities.config-data-application-context-initializer #boot-features-output-capture-test-utility #features.testing.utilities.output-capture #boot-features-test-property-values #features.testing.utilities.test-property-values #boot-features-rest-templates-test-utility #features.testing.utilities.test-rest-template #boot-features-test-utilities #features.testing.utilities #features.testing.testcontainers.dynamic-properties #howto.testing.testcontainers.dynamic-properties #features.testing.testcontainers.service-connections #features.testing.testcontainers #howto-testcontainers #howto.testing.testcontainers #using-boot-disabling-specific-auto-configuration #using.auto-configuration.disabling-specific #using.auto-configuration.packages #using-boot-replacing-auto-configuration #using.auto-configuration.replacing #using-boot-auto-configuration #using.auto-configuration #using-boot-ant #using.build-systems.ant #using-boot-dependency-management #using.build-systems.dependency-management #build-tool-plugins.gradle #using-boot-gradle #using.build-systems.gradle #build-tool-plugins.maven #using-boot-maven #using.build-systems.maven #using-boot-starter #using.build-systems.starters #using-boot-build-systems #using.build-systems #using-boot-importing-configuration #using.configuration-classes.importing-additional-configuration #using-boot-importing-xml-configuration #using.configuration-classes.importing-xml-configuration #using-boot-configuration-classes #using.configuration-classes #using.devtools.diagnosing-classloading-issues #configuring-file-system-watcher #using.devtools.globalsettings.configuring-file-system-watcher #using-boot-devtools-globalsettings #using.devtools.globalsettings #using-boot-devtools-livereload #using.devtools.livereload #using-boot-devtools-property-defaults #using.devtools.property-defaults #running-remote-client-application #using.devtools.remote-applications.client #using-boot-devtools-remote-update #using.devtools.remote-applications.update #using-boot-devtools-remote #using.devtools.remote-applications #using-boot-devtools-customizing-classload #using.devtools.restart.customizing-the-classload #using-boot-devtools-restart-disable #using.devtools.restart.disable #using-boot-devtools-restart-exclude #using.devtools.restart.excluding-resources #using-boot-devtools-known-restart-limitations #using.devtools.restart.limitations #using-boot-devtools-restart-logging-condition-delta #using.devtools.restart.logging-condition-delta #using-spring-boot-restart-vs-reload #using.devtools.restart.restart-vs-reload #using-boot-devtools-restart-triggerfile #using.devtools.restart.triggerfile #using-boot-devtools-restart-additional-paths #using.devtools.restart.watching-additional-paths #using-boot-devtools-restart #using.devtools.restart #using-boot-devtools #using.devtools #using-boot #using using #using-boot-packaging-for-production #using.", "start_char_idx": 13365, "end_char_idx": 17748, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5811ffb3-ef32-47af-a763-bdec942184a5": {"__data__": {"id_": "5811ffb3-ef32-47af-a763-bdec942184a5", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0886f63e-bb60-44b1-a245-9847f44392be", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6b3516f228a4c5f57c2eb8e52ca51bcfb7bab08d2b3398cb40d71081d85a0378", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b11c9006-a41e-4799-81c9-ec249fac783b", "node_type": "1", "metadata": {}, "hash": "e7745ddc9d2bf08dbd84b2ef574bbe441b52f4fcc6b57e14b31093235f5126ab", "class_name": "RelatedNodeInfo"}}, "text": "devtools.restart.customizing-the-classload #using-boot-devtools-restart-disable #using.devtools.restart.disable #using-boot-devtools-restart-exclude #using.devtools.restart.excluding-resources #using-boot-devtools-known-restart-limitations #using.devtools.restart.limitations #using-boot-devtools-restart-logging-condition-delta #using.devtools.restart.logging-condition-delta #using-spring-boot-restart-vs-reload #using.devtools.restart.restart-vs-reload #using-boot-devtools-restart-triggerfile #using.devtools.restart.triggerfile #using-boot-devtools-restart-additional-paths #using.devtools.restart.watching-additional-paths #using-boot-devtools-restart #using.devtools.restart #using-boot-devtools #using.devtools #using-boot #using using #using-boot-packaging-for-production #using.packaging-for-production #using-boot-running-as-a-packaged-application #using.running-your-application.as-a-packaged-application #using-boot-running-from-an-ide #using.running-your-application.from-an-ide #using-boot-hot-swapping #using.running-your-application.hot-swapping #using-boot-running-with-the-gradle-plugin #using.running-your-application.with-the-gradle-plugin #using-boot-running-with-the-maven-plugin #using.running-your-application.with-the-maven-plugin #using-boot-running-your-application #using.running-your-application #using-boot-spring-beans-and-dependency-injection #using.spring-beans-and-dependency-injection #using-boot-locating-the-main-class #using.structuring-your-code.locating-the-main-class #using-boot-using-the-default-package #using.structuring-your-code.using-the-default-package #using-boot-structuring-your-code #using.structuring-your-code #using-boot-using-springbootapplication-annotation #using.using-the-springbootapplication-annotation #boot-features-graceful-shutdown #features.graceful-shutdown #web.graceful-shutdown #boot-features-developing-web-applications #features.developing-web-applications #web #web web #boot-features-reactive-server-resources #features.developing-web-applications.reactive-server-resources-configuration #web.reactive.reactive-server-resources-configuration #web.reactive.reactive-server.customizing.direct #web.reactive.reactive-server.customizing.programmatic #web.reactive.reactive-server.customizing #boot-features-reactive-server #features.developing-web-applications.reactive-server #web.reactive.reactive-server #boot-features-webflux-auto-configuration #features.developing-web-applications.spring-webflux.auto-configuration #web.reactive.webflux.auto-configuration #web.reactive.webflux.conversion-service #boot-features-webflux-error-handling-custom-error-pages #features.developing-web-applications.spring-webflux.error-pages #web.reactive.webflux.error-handling.error-pages #boot-features-webflux-error-handling #features.developing-web-applications.spring-webflux.error-handling #web.reactive.webflux.error-handling #boot-features-webflux-httpcodecs #features.developing-web-applications.spring-webflux.httpcodecs #web.reactive.webflux.httpcodecs #boot-features-webflux-static-content #features.developing-web-applications.spring-webflux.static-context #web.reactive.webflux.static-content #boot-features-webflux-template-engines #features.developing-web-applications.spring-webflux.template-engines #web.reactive.webflux.template-engines #boot-features-webflux-web-filters #features.developing-web-applications.spring-webflux.web-filters #web.reactive.webflux.web-filters #boot-features-webflux-welcome-page #features.developing-web-applications.spring-webflux.welcome-page #web.reactive.webflux.welcome-page #boot-features-webflux #features.developing-web-applications.spring-webflux #web.reactive.webflux #web.reactive #boot-features-embedded-container-application-context #features.developing-web-applications.embedded-container.application-context #web.servlet.embedded-container.application-context #boot-features-embedded-container-servlets-filters-listeners-scanning #features.developing-web-applications.embedded-container.context-initializer.scanning #web.servlet.embedded-container.context-initializer.scanning #boot-features-embedded-container-context-initializer #features.developing-web-applications.embedded-container.context-initializer #web.", "start_char_idx": 16960, "end_char_idx": 21192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b11c9006-a41e-4799-81c9-ec249fac783b": {"__data__": {"id_": "b11c9006-a41e-4799-81c9-ec249fac783b", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5811ffb3-ef32-47af-a763-bdec942184a5", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "dad6793a8399b5a4f9705f724ae0293eeae61eefcdbf230ec723367fc385a9ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97b88c33-cec4-41e2-8cc8-3ef2a008ce1c", "node_type": "1", "metadata": {}, "hash": "4e17ac625c83f07d1d00cc74057b1b4094513386264bc7ece8f3207551df96fa", "class_name": "RelatedNodeInfo"}}, "text": "spring-webflux.web-filters #web.reactive.webflux.web-filters #boot-features-webflux-welcome-page #features.developing-web-applications.spring-webflux.welcome-page #web.reactive.webflux.welcome-page #boot-features-webflux #features.developing-web-applications.spring-webflux #web.reactive.webflux #web.reactive #boot-features-embedded-container-application-context #features.developing-web-applications.embedded-container.application-context #web.servlet.embedded-container.application-context #boot-features-embedded-container-servlets-filters-listeners-scanning #features.developing-web-applications.embedded-container.context-initializer.scanning #web.servlet.embedded-container.context-initializer.scanning #boot-features-embedded-container-context-initializer #features.developing-web-applications.embedded-container.context-initializer #web.servlet.embedded-container.context-initializer #boot-features-customizing-configurableservletwebserverfactory-directly #features.developing-web-applications.embedded-container.customizing.direct #web.servlet.embedded-container.customizing.direct #web.servlet.embedded-container.customizing.encoding #boot-features-programmatic-embedded-container-customization #features.developing-web-applications.embedded-container.customizing.programmatic #web.servlet.embedded-container.customizing.programmatic #web.servlet.embedded-container.customizing.samesite #boot-features-customizing-embedded-containers #features.developing-web-applications.embedded-container.customizing #web.servlet.embedded-container.customizing #boot-features-jsp-limitations #features.developing-web-applications.embedded-container.jsp-limitations #web.servlet.embedded-container.jsp-limitations #boot-features-embedded-container-servlets-filters-listeners-beans #features.developing-web-applications.embedded-container.servlets-filters-listeners.beans #web.servlet.embedded-container.servlets-filters-listeners.beans #boot-features-embedded-container-servlets-filters-listeners #features.developing-web-applications.embedded-container.servlets-filters-listeners #web.servlet.embedded-container.servlets-filters-listeners #boot-features-embedded-container #features.developing-web-applications.embedded-container #web.servlet.embedded-container #boot-features-jersey #features.developing-web-applications.jersey #web.servlet.jersey #boot-features-spring-mvc-auto-configuration #features.developing-web-applications.spring-mvc.auto-configuration #web.servlet.spring-mvc.auto-configuration #boot-features-spring-mvc-web-binding-initializer #features.developing-web-applications.spring-mvc.binding-initializer #web.servlet.spring-mvc.binding-initializer #boot-features-spring-mvc-pathmatch #features.developing-web-applications.spring-mvc.content-negotiation #web.servlet.spring-mvc.content-negotiation #web.servlet.spring-mvc.conversion-service #boot-features-cors #features.developing-web-applications.spring-mvc.cors #web.servlet.spring-mvc.cors #boot-features-error-handling-mapping-error-pages-without-mvc #features.developing-web-applications.spring-mvc.error-handling.error-pages-without-spring-mvc #web.servlet.spring-mvc.error-handling.error-pages-without-spring-mvc #boot-features-error-handling-custom-error-pages #features.developing-web-applications.spring-mvc.error-handling.error-pages #web.servlet.spring-mvc.error-handling.error-pages #boot-features-error-handling-war-deployment #features.developing-web-applications.spring-mvc.error-handling.in-a-war-deployment #web.servlet.spring-mvc.error-handling.in-a-war-deployment #boot-features-error-handling #features.developing-web-applications.spring-mvc.error-handling #web.servlet.spring-mvc.error-handling #features.developing-web-applications.spring-mvc.favicon #web.servlet.spring-mvc.favicon #boot-features-spring-message-codes #features.developing-web-applications.spring-mvc.message-codes #web.servlet.spring-mvc.message-codes #boot-features-spring-mvc-message-converters #features.developing-web-applications.spring-mvc.message-converters #web.servlet.spring-mvc.", "start_char_idx": 20346, "end_char_idx": 24393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "97b88c33-cec4-41e2-8cc8-3ef2a008ce1c": {"__data__": {"id_": "97b88c33-cec4-41e2-8cc8-3ef2a008ce1c", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b11c9006-a41e-4799-81c9-ec249fac783b", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "350be0f9eb352b997dcd75d1af1523da4ff0889eba49a8d7b066237fcd16b127", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e19fb3f4-44e3-4ea4-b297-1581e6e51a50", "node_type": "1", "metadata": {}, "hash": "456fc8155add4214f4e7347f764b575bf069136ac67728dee4073fb2e83a4209", "class_name": "RelatedNodeInfo"}}, "text": "spring-mvc.error-handling.error-pages #boot-features-error-handling-war-deployment #features.developing-web-applications.spring-mvc.error-handling.in-a-war-deployment #web.servlet.spring-mvc.error-handling.in-a-war-deployment #boot-features-error-handling #features.developing-web-applications.spring-mvc.error-handling #web.servlet.spring-mvc.error-handling #features.developing-web-applications.spring-mvc.favicon #web.servlet.spring-mvc.favicon #boot-features-spring-message-codes #features.developing-web-applications.spring-mvc.message-codes #web.servlet.spring-mvc.message-codes #boot-features-spring-mvc-message-converters #features.developing-web-applications.spring-mvc.message-converters #web.servlet.spring-mvc.message-converters #boot-features-spring-mvc-static-content #features.developing-web-applications.spring-mvc.static-content #web.servlet.spring-mvc.static-content #boot-features-spring-mvc-template-engines #features.developing-web-applications.spring-mvc.template-engines #web.servlet.spring-mvc.template-engines #boot-features-spring-mvc-welcome-page #features.developing-web-applications.spring-mvc.welcome-page #web.servlet.spring-mvc.welcome-page #boot-features-spring-mvc #features.developing-web-applications.spring-mvc #web.servlet.spring-mvc #web.servlet #web.graphql.data-query #web.graphql.exception-handling #web.graphql.graphiql #web.graphql.runtimewiring #web.graphql.schema #web.graphql.transports.http-websocket #web.graphql.transports.rsocket #web.graphql.transports #web.graphql #boot-features-spring-hateoas #features.spring-hateoas #web.spring-hateoas #boot-features-security-authorization-server #features.security.authorization-server #web.security.oauth2.authorization-server #boot-features-security-oauth2-common-providers #features.security.oauth2.client.common-providers #web.security.oauth2.client.common-providers #boot-features-security-oauth2-client #features.security.oauth2.client #web.security.oauth2.client #boot-features-security-oauth2-server #features.security.oauth2.server #web.security.oauth2.server #boot-features-security-oauth2 #features.security.oauth2 #web.security.oauth2 #boot-features-security-saml2-relying-party #features.security.saml2.relying-party #web.security.saml2.relying-party #boot-features-security-saml #features.security.saml2 #web.security.saml2 #boot-features-security-mvc #features.security.spring-mvc #web.security.spring-mvc #boot-features-security-webflux #features.security.spring-webflux #web.security.spring-webflux #boot-features-security #features.security #web.security #boot-features-session #features.spring-session #web.spring-session #appendix.configuration-metadata.annotation-processor.adding-additional-metadata #configuration-metadata.annotation-processor.adding-additional-metadata #appendix.configuration-metadata.annotation-processor.automatic-metadata-generation.nested-properties #configuration-metadata.annotation-processor.automatic-metadata-generation.nested-properties #appendix.configuration-metadata.annotation-processor.automatic-metadata-generation #configuration-metadata.annotation-processor.automatic-metadata-generation #appendix.configuration-metadata.annotation-processor.configuring #configuration-metadata.annotation-processor.configuring #appendix.configuration-metadata.annotation-processor #configuration-metadata.annotation-processor #appendix.configuration-metadata.format.group #configuration-metadata.format.group #appendix.configuration-metadata.format.hints #configuration-metadata.format.hints #appendix.configuration-metadata.format.property #configuration-metadata.format.property #appendix.configuration-metadata.format.repeated-items #configuration-metadata.format.repeated-items #appendix.configuration-metadata.format #configuration-metadata.format #appendix.configuration-metadata #configuration-metadata #configuration-metadata configuration-metadata #appendix.configuration-metadata.manual-hints.value-hint #configuration-metadata.manual-hints.value-hint #appendix.configuration-metadata.manual-hints.value-providers.any #configuration-metadata.manual-hints.value-providers.any #appendix.configuration-metadata.manual-hints.", "start_char_idx": 23671, "end_char_idx": 27838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e19fb3f4-44e3-4ea4-b297-1581e6e51a50": {"__data__": {"id_": "e19fb3f4-44e3-4ea4-b297-1581e6e51a50", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "97b88c33-cec4-41e2-8cc8-3ef2a008ce1c", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2e35415829ed904610a0bf913fbd67700c0692ad604e8b04c205d7bb1f7d9c82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc6045a4-2e5f-4c73-a145-f45f44fd75b5", "node_type": "1", "metadata": {}, "hash": "ac8e880ac0e4ba6451f158f7960c4874658618c553494387d0a377213b88c965", "class_name": "RelatedNodeInfo"}}, "text": "configuration-metadata.annotation-processor.configuring #configuration-metadata.annotation-processor.configuring #appendix.configuration-metadata.annotation-processor #configuration-metadata.annotation-processor #appendix.configuration-metadata.format.group #configuration-metadata.format.group #appendix.configuration-metadata.format.hints #configuration-metadata.format.hints #appendix.configuration-metadata.format.property #configuration-metadata.format.property #appendix.configuration-metadata.format.repeated-items #configuration-metadata.format.repeated-items #appendix.configuration-metadata.format #configuration-metadata.format #appendix.configuration-metadata #configuration-metadata #configuration-metadata configuration-metadata #appendix.configuration-metadata.manual-hints.value-hint #configuration-metadata.manual-hints.value-hint #appendix.configuration-metadata.manual-hints.value-providers.any #configuration-metadata.manual-hints.value-providers.any #appendix.configuration-metadata.manual-hints.value-providers.class-reference #configuration-metadata.manual-hints.value-providers.class-reference #appendix.configuration-metadata.manual-hints.value-providers.handle-as #configuration-metadata.manual-hints.value-providers.handle-as #appendix.configuration-metadata.manual-hints.value-providers.logger-name #configuration-metadata.manual-hints.value-providers.logger-name #appendix.configuration-metadata.manual-hints.value-providers.spring-bean-reference #configuration-metadata.manual-hints.value-providers.spring-bean-reference #appendix.configuration-metadata.manual-hints.value-providers.spring-profile-name #configuration-metadata.manual-hints.value-providers.spring-profile-name #appendix.configuration-metadata.manual-hints.value-providers #configuration-metadata.manual-hints.value-providers #appendix.configuration-metadata.manual-hints #configuration-metadata.manual-hints #appendix.executable-jar.alternatives #executable-jar.alternatives #appendix.executable-jar #executable-jar #executable-jar executable-jar #appendix.executable-jar.jarfile-class.compatibility #executable-jar.jarfile-class.compatibility #appendix.executable-jar.jarfile-class #executable-jar.jarfile-class #appendix.executable-jar.launching.manifest #executable-jar.launching.manifest #appendix.executable-jar.launching #executable-jar.launching #appendix.executable-jar.nested-jars.classpath-index #executable-jar.nested-jars.classpath-index #appendix.executable-jar.nested-jars.index-files #executable-jar.nested-jars.index-files #appendix.executable-jar.nested-jars.jar-structure #executable-jar.nested-jars.jar-structure #appendix.executable-jar.nested-jars.layer-index #executable-jar.nested-jars.layer-index #appendix.executable-jar.nested-jars.war-structure #executable-jar.nested-jars.war-structure #appendix.executable-jar.nested-jars #executable-jar.nested-jars #appendix.executable-jar.property-launcher #executable-jar.property-launcher #appendix.executable-jar-system-classloader #appendix.executable-jar-zip-entry-compression #appendix.executable-jar.restrictions #executable-jar.restrictions #getting-started-first-application-main-method #getting-started.first-application.code.main-method #getting-started-first-application-annotations #getting-started.first-application.code.mvc-annotations #getting-started-first-application-auto-configuration #getting-started.first-application.code.enable-auto-configuration #getting-started.first-application.code.spring-boot-application #getting-started-first-application-code #getting-started.first-application.code #getting-started.first-application.dependencies.gradle #getting-started.first-application.dependencies.maven #getting-started-first-application-dependencies #getting-started.first-application.dependencies #getting-started.first-application.executable-jar.gradle #getting-started.first-application.executable-jar.maven #getting-started-first-application-executable-jar #getting-started.first-application.executable-jar #getting-started.first-application.gradle #getting-started-first-application-pom #getting-started.first-application.pom #getting-started.first-application.prerequisites.gradle #getting-started.first-application.prerequisites.maven #getting-started.first-application.prerequisites #getting-started.first-application.run.gradle #getting-started.first-application.run.maven #getting-started-first-application-run #getting-started.first-application.", "start_char_idx": 26821, "end_char_idx": 31260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc6045a4-2e5f-4c73-a145-f45f44fd75b5": {"__data__": {"id_": "cc6045a4-2e5f-4c73-a145-f45f44fd75b5", "embedding": null, "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "082c3c85-88d9-4e53-a971-c502bef628d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "727fe643bc3bcb5df99673d099edde021a19133f935bc3c19cb793331868d405", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e19fb3f4-44e3-4ea4-b297-1581e6e51a50", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "84271740d677c200124f75fd578f0c45667d9d192c09529a19efced702c08349", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "35c544f8-cd8d-47bd-b9b1-bd7b49737eda", "node_type": "1", "metadata": {}, "hash": "a7dd6dc3e88deb4a8741f452ac42991107087c4bb86d6e7994ccf3bfa5cc8000", "class_name": "RelatedNodeInfo"}}, "text": "first-application.code #getting-started.first-application.dependencies.gradle #getting-started.first-application.dependencies.maven #getting-started-first-application-dependencies #getting-started.first-application.dependencies #getting-started.first-application.executable-jar.gradle #getting-started.first-application.executable-jar.maven #getting-started-first-application-executable-jar #getting-started.first-application.executable-jar #getting-started.first-application.gradle #getting-started-first-application-pom #getting-started.first-application.pom #getting-started.first-application.prerequisites.gradle #getting-started.first-application.prerequisites.maven #getting-started.first-application.prerequisites #getting-started.first-application.run.gradle #getting-started.first-application.run.maven #getting-started-first-application-run #getting-started.first-application.run #getting-started-first-application #getting-started.first-application #upgrading upgrading", "start_char_idx": 30374, "end_char_idx": 31354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "35c544f8-cd8d-47bd-b9b1-bd7b49737eda": {"__data__": {"id_": "35c544f8-cd8d-47bd-b9b1-bd7b49737eda", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_0.txt", "file_name": "dzone.com_24_0.txt", "file_type": "text/plain", "file_size": 6194, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a9cbeaa-63ca-4ba3-9968-a32359775ff2", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_0.txt", "file_name": "dzone.com_24_0.txt", "file_type": "text/plain", "file_size": 6194, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "569f5cdeb10e212a9834d5577603d6f311dbe9fabfd45d1653f93d126ea3d372", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc6045a4-2e5f-4c73-a145-f45f44fd75b5", "node_type": "1", "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "de2d2397cf4f197cc023228e35ea28ce635803c175c29f16e7211810f46fc46e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b0c8924-859c-4c1d-b7f2-c72fa1ac291f", "node_type": "1", "metadata": {}, "hash": "7f3a0fc253ba2e06cd9f500968629d6168c7d72a7ca4314b207f6177da42f07b", "class_name": "RelatedNodeInfo"}}, "text": "Java Resources Java Java is an object-oriented programming language that allows engineers to produce software for multiple platforms. Our resources in this Zone are designed to help engineers with Java program development, Java SDKs, compilers, interpreters, documentation generators, and other tools used to produce a complete application. Latest Premium Content Trend Report Low-Code Development Download Trend Report Development at Scale Download Refcard #400 Java Application Containerization and Deployment Download DZone's Featured Java Resources Create a Custom Logger to Log Response Details With Playwright Java By Faisal Khatri CORE While working on the series of tutorial blogs for GET, POST, PUT, PATCH, and DELETE requests for API Automation using Playwright Java. I noticed that there is no logging method provided by the Playwright Java framework to log the requests and responses. In the REST-assured framework, we have the log().all() method available that is used for logging the request as well as the response. However, Playwright does not provide any such method. However, Playwright offers a text() method in the APIResponse interface that could be well used to extract the response text. Playwright currently does not have the feature to access the request body and request headers while performing API Testing. The issue is already raised on GitHub for this feature, please add an upvote to this issue so this feature gets implemented soon in the framework. In this blog, we will learn how to extract the response and create a custom logger to log the response of the API tests using Playwright Java. How to Log Response Details in Playwright Java Before we begin with actual coding and implementation for the logger, let\u2019s discuss the dependencies, configuration, and setup required for logging the response details. Getting Started As we are working with Playwright Java using Maven, we will use the Log4J2 Maven dependency to log the response details. The dependency for Jackson Databind will be used for parsing the JSON response. XML <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-api</artifactId> <version>${log4j-api-version}</version> </dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-core</artifactId> <version>${log4j-core-version}</version> </dependency> <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> <version>${jackson-databind-version}</version> </dependency> As a best practice, the versions of these dependencies will be added in the properties block as it allows users to easily check and update the newer version of dependencies in the project. XML <properties> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <log4j-core-version>2.24.1</log4j-core-version> <log4j-api-version>2.24.1</log4j-api-version> <jackson-databind-version>2.18.0</jackson-databind-version> </properties> The next step is to create a log4j2.xml file in the src/main/resources folder. This file stores the configuration for logs, such as log level, where the logs should be printed \u2014 to the console or to the file, the pattern of the log layout, etc. XML <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Configuration status=\"INFO\"> <Appenders> <Console name=\"LogToConsole\" target=\"SYSTEM_OUT\"> <PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\"/> </Console> </Appenders> <Loggers> <Logger name=\"io.github.mfaisalkhatri\" level=\"info\" additivity=\"false\"> <AppenderRef ref=\"LogToConsole\"/> </Logger> <Root level=\"error\"> <AppenderRef ref=\"LogToConsole\"/> </Root> </Loggers> <Loggers> <Logger name=\"io.github.mfaisalkhatri\" level=\"trace\" additivity=\"false\"> <AppenderRef ref=\"LogToConsole\"/> </Logger> <Root level=\"error\"> <AppenderRef ref=\"LogToConsole\"/> </Root> </Loggers> </Configuration> The <Appenders> section contains the information related to log printing and its pattern format to print. The <Loggers> section contains the log-level details and how it should be printed. There can be multiple blocks of <Loggers> in the file, each for different log levels, such as \u201cinfo,\u201d \u201cdebug,\u201d \u201ctrace,\u201d etc. Implementing the Custom Logger A new Java class Logger is created to implement the methods for logging the response details.", "start_char_idx": 0, "end_char_idx": 4299, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b0c8924-859c-4c1d-b7f2-c72fa1ac291f": {"__data__": {"id_": "1b0c8924-859c-4c1d-b7f2-c72fa1ac291f", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_0.txt", "file_name": "dzone.com_24_0.txt", "file_type": "text/plain", "file_size": 6194, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a9cbeaa-63ca-4ba3-9968-a32359775ff2", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_0.txt", "file_name": "dzone.com_24_0.txt", "file_type": "text/plain", "file_size": 6194, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "569f5cdeb10e212a9834d5577603d6f311dbe9fabfd45d1653f93d126ea3d372", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "35c544f8-cd8d-47bd-b9b1-bd7b49737eda", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_0.txt", "file_name": "dzone.com_24_0.txt", "file_type": "text/plain", "file_size": 6194, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b04a6be983c4f8850cbea2f6ba829fc94b4b7b21ec995b574aad270ee24261f9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcb2b2dc-3dad-4483-bb15-6710179a1d40", "node_type": "1", "metadata": {}, "hash": "870c65cd98e2b2dea6b2a2a8307994086a7e8e5e43081b9743883fb16d892ec4", "class_name": "RelatedNodeInfo"}}, "text": "The <Loggers> section contains the log-level details and how it should be printed. There can be multiple blocks of <Loggers> in the file, each for different log levels, such as \u201cinfo,\u201d \u201cdebug,\u201d \u201ctrace,\u201d etc. Implementing the Custom Logger A new Java class Logger is created to implement the methods for logging the response details. Java public class Logger { private final APIResponse response; private final org.apache.logging.log4j.Logger log; public Logger (final APIResponse response) { this.response = response; this.log = LogManager.getLogger (getClass ()); } //... } This class has the APIResponse interface of Playwright and the Logger interface from Log4j declared at the class level to ensure that we can reuse it in further methods in the same class and avoid duplicate code lines. The constructor of the Logger class is used for creating objects of the implementing classes. The APIResponse interface is added as a parameter as we need the response object to be supplied to this class for logging the respective details. The logResponseDetails() method implements the function to log all the response details. Java public void logResponseDetails () { String responseBody = this.response.text (); this.log.info (\"Logging Response Details....\\n responseHeaders: {}, \\nstatusCode: {},\", this.response.headers (), this.response.status ()); this.log.info (\"\\n Response body: {}\", prettyPrintJson (responseBody)); this.log.info (\"End of Logs!\"); } The responseBody variable will store the response received after executing the API. The next line of code will print the response details, Headers, and Status Code. As the response returned is not pretty printed, meaning the JSON format is shown in String in multiple lines wrapped up, this makes the logs look untidy. Hence, we have created a prettyPrintJson() method that consumes the response in String format and returns it in pretty format. Java private String prettyPrintJson (final String text) { if (StringUtils.isNotBlank (text) && StringUtils.isNotEmpty (text)) { try { final ObjectMapper objectMapper = new ObjectMapper (); final Object jsonObject = objectMapper.readValue (text, Object.class); return objectMapper.writerWithDefaultPrettyPrinter", "start_char_idx": 3967, "end_char_idx": 6178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcb2b2dc-3dad-4483-bb15-6710179a1d40": {"__data__": {"id_": "dcb2b2dc-3dad-4483-bb15-6710179a1d40", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_1.txt", "file_name": "dzone.com_24_1.txt", "file_type": "text/plain", "file_size": 5760, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa4e1152-4b67-47a4-9e26-ba70ff26868f", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_1.txt", "file_name": "dzone.com_24_1.txt", "file_type": "text/plain", "file_size": 5760, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "354ced38c18f7039ec6dcd6cd4dd39d306745d3ff1cebaf015fa29cfbfd600aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b0c8924-859c-4c1d-b7f2-c72fa1ac291f", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_0.txt", "file_name": "dzone.com_24_0.txt", "file_type": "text/plain", "file_size": 6194, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f41630c7e61d46770a703c2052a28be5b4b28882f3b7859e4432adee78cc52ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31361112-7dc3-4845-8fa4-03b50970be21", "node_type": "1", "metadata": {}, "hash": "33283270b0c36805cf3f673b4381ce9ddc56379d66a2dc8a4dde7b11f4c8fbad", "class_name": "RelatedNodeInfo"}}, "text": "() .writeValueAsString (jsonObject); } catch (final JsonProcessingException e) { this.log.error (\"Failed to pretty print JSON: {}\", e.getMessage (), e); } } return \"No response body found!\"; } This method accepts the String in the method parameter where the response object will be supplied. A check is performed using the if() condition to verify that the text supplied is not blank, null and it is not empty. If the condition is satisfied, then the ObjectMapper class from the Jackson Databind dependency is instantiated. Next, the text value of the response is read, and it is converted and returned as the JSON pretty print format using the writerWithDefaultPrettyPrinter() and writeValueAsString() methods of the ObjectMapper class. If the response is null, empty, and blank, it will print the message \u201cNo response body found!\u201d and the method will be exited. How to Use the Logger in the API Automation Tests The Logger class needs to be instantiated and its respective methods need to be called in order to get the response details printed while the tests are executed. We need to make sure that we don\u2019t write duplicate code everywhere in the tests to get the response details logged. In order to handle this, we would be using the BaseTest class and creating a new method, logResponse(APIResponse response). This method will accept the APIResponse as parameter, and the logResponseDetails() method will be called after instantiating the Logger class. Java public class BaseTest { //... protected void logResponse (final APIResponse response) { final Logger logger = new Logger (response); logger.logResponseDetails (); } } As the BaseTest class is extended to all the Test classes; it becomes easier to call the methods directly in the test class. The HappyPathTests class that we have used in previous blogs for adding happy scenario tests for testing GET, POST, PUT, PATCH, and DELETE requests already extends the BaseTest class. Let\u2019s print the response logs for the POST and GET API request test. The testShouldCreateNewOrders() verifies that the new orders are created successfully. Let\u2019s add the logResponse() method to this test and get the response printed in the logs. Java public class HappyPathTests extends BaseTest{ @Test public void testShouldCreateNewOrders() { final int totalOrders = 4; for (int i = 0; i < totalOrders; i++) { this.orderList.add(getNewOrder()); } final APIResponse response = this.request.post(\"/addOrder\", RequestOptions.create() .setData(this.orderList)); logResponse (response); //... // Assertion Statements... } } The logResponse() method will be called after the POST request is sent. This will enable us to know what response was received before we start performing assertions. The testShouldGetAllOrders() verifies the GET /getAllOrder API request. Let\u2019s add the logResponse() method to this test and check the response logs getting printed. Java public class HappyPathTests extends BaseTest{ @Test public void testShouldGetAllOrders() { final APIResponse response = this.request.get(\"/getAllOrders\"); logResponse (response); final JSONObject responseObject = new JSONObject(response.text()); final JSONArray ordersArray = responseObject.getJSONArray(\"orders\"); assertEquals(response.status(), 200); assertEquals(responseObject.get(\"message\"), \"Orders fetched successfully!\"); assertEquals(this.orderList.get(0).getUserId(), ordersArray.getJSONObject(0).get(\"user_id\")); assertEquals(this.orderList.get(0).getProductId(), ordersArray.getJSONObject(0).get(\"product_id\")); assertEquals(this.orderList.get(0).getTotalAmt(), ordersArray.getJSONObject(0).get(\"total_amt\")); } } The logResponse() method is called after the GET request is sent and will print the response logs in the console. Test Execution The tests will be executed in order where POST request will be executed first so new orders are created and then the GET request will be executed. It will be done using the testng-restfulecommerce-postandgetorder.xml file. XML <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite name=\"Restful ECommerce Test Suite\"> <test name=\"Testing Happy Path Scenarios of Creating and Updating Orders\"> <classes> <class name=\"io.github.mfaisalkhatri.api.restfulecommerce.HappyPathTests\"> <methods> <include name=\"testShouldCreateNewOrders\"/> <include name=\"testShouldGetAllOrders\"/> </methods> </class> </classes> </test> </suite> On executing the above testng-restfulecommerce-postandgetorder.xml file, the POST, as well as GET API requests, are executed, and the response is printed in the console, which can be seen in the screenshots below.", "start_char_idx": 0, "end_char_idx": 4637, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31361112-7dc3-4845-8fa4-03b50970be21": {"__data__": {"id_": "31361112-7dc3-4845-8fa4-03b50970be21", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_1.txt", "file_name": "dzone.com_24_1.txt", "file_type": "text/plain", "file_size": 5760, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa4e1152-4b67-47a4-9e26-ba70ff26868f", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_1.txt", "file_name": "dzone.com_24_1.txt", "file_type": "text/plain", "file_size": 5760, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "354ced38c18f7039ec6dcd6cd4dd39d306745d3ff1cebaf015fa29cfbfd600aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcb2b2dc-3dad-4483-bb15-6710179a1d40", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_1.txt", "file_name": "dzone.com_24_1.txt", "file_type": "text/plain", "file_size": 5760, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a9170cd764206828832868b8e38ce8f5d38470a0576010213d40608a459e3184", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4ed01be-f859-4090-a32e-ce637f0923a7", "node_type": "1", "metadata": {}, "hash": "7e191778338cc3d213db592a56e838df7b620008434eb1bc355a973ebb638d43", "class_name": "RelatedNodeInfo"}}, "text": "It will be done using the testng-restfulecommerce-postandgetorder.xml file. XML <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\"> <suite name=\"Restful ECommerce Test Suite\"> <test name=\"Testing Happy Path Scenarios of Creating and Updating Orders\"> <classes> <class name=\"io.github.mfaisalkhatri.api.restfulecommerce.HappyPathTests\"> <methods> <include name=\"testShouldCreateNewOrders\"/> <include name=\"testShouldGetAllOrders\"/> </methods> </class> </classes> </test> </suite> On executing the above testng-restfulecommerce-postandgetorder.xml file, the POST, as well as GET API requests, are executed, and the response is printed in the console, which can be seen in the screenshots below. POST API Response Logs GET API Response Logs It can be seen from the screenshots that the response logs are printed correctly in the console and can now help us know the exact results of the test execution. Summary Adding a custom logger in the project can help in multiple ways. It will provide us with the details of the test data that was processed along with the final output, giving us control over the tests. It also helps in debugging the issue for failed tests and finding a fix quickly for it. If the response data is readily available we can quickly find the pattern of the issue and try for a quick fix. As Playwright does not provide any method for logging the response details, we can add our own custom logger that can help us in fetching the required details. Happy testing! More Buildpacks: An Open-Source Alternative to Chainguard By Sylvain Kalache The industry's increasing focus on secure container images is undeniable. Companies like Chainguard \u2014 specializing in delivering container images free of CVEs \u2014 have demonstrated the demand by recently raising an impressive $140 million at", "start_char_idx": 3899, "end_char_idx": 5744, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4ed01be-f859-4090-a32e-ce637f0923a7": {"__data__": {"id_": "d4ed01be-f859-4090-a32e-ce637f0923a7", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_10.txt", "file_name": "dzone.com_24_10.txt", "file_type": "text/plain", "file_size": 5585, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3b77ad6e-113f-48c3-95dd-2f7969f95cc0", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_10.txt", "file_name": "dzone.com_24_10.txt", "file_type": "text/plain", "file_size": 5585, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "464ef42cfd70575e9fcb9c434b8f0bb1d396eb1234cf2872e98c9089560c0651", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31361112-7dc3-4845-8fa4-03b50970be21", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_1.txt", "file_name": "dzone.com_24_1.txt", "file_type": "text/plain", "file_size": 5760, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cefefe7bb92be7503e3934569414135915efbf75e4c12f122b8bdafae9a669c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b1155f7-acab-47cf-b391-7aad342a7761", "node_type": "1", "metadata": {}, "hash": "5efe065b2f17f982e93a969bdcc08731324167d794cb6d5b671c504f8203ab6a", "class_name": "RelatedNodeInfo"}}, "text": "worse productivity in larger teams, as the level of understanding of Lombok will differ across developers, not to mention the increased complexity of new developers or code maintainers to understand how everything fits together. For the reasons presented so far, Lombok's @UtilityClass can also be misleading: Java @UtilityClass public class ParseUtils { public static CustomerId parseCustomerId(String CustomerIdentifier) { //... } } Instead, a standard-based approach is recommended: Java public final class ParseUtils { private ParseUtils() { throw new AssertionError(\"This class should not be instantiated.\"); } public static CustomerId parseCustomerId(String CustomerIdentifier) { //... } } \"Logging Is Effortless With @Slf4j in My Classes\" Another usage of the auto-generation capabilities of Lombok is for boilerplate logging setup within classes through the @Slf4j annotation : Java @Slf4j public class MyService { public void doSomething() { log.info(\"log when i'm doing something\"); } } You have just tightly coupled the implementation of logging capabilities using a particular framework (Slf4j) with your code implementation. Instead, consider using CDI for a more flexible approach: Java public class SomeService { private final Logger logger; public SomeService(Logger logger) { this.logger = Objects.requireNonNull(logger); } public void doSomething() { logger.info(\"Doing something\"); } } \u201cControlling Access and Updating an Attribute To Reflect a DB Column Change, for Example, Is Way Simpler With Lombok\u201d Developers argue that addressing some types of changes in the code can be way faster when not having boilerplate code. For example, in Hibernate entities, changes in database columns could reflect updating the code of attributes and getters/setters. Instead of tightly coupling the database and code implementation (e.g., attribute name and column name), consider alternatives that provide proper abstraction between these two layers, such as the Hibernate annotations for customizing column names. Finally, you may also want better control over the persistence behaviors instead of hidden generated code. Another popular annotation in Lombok is @With. It's used to create a deep copy of an object and may result in excessive object creation, without any validation of business rules. \u201c@Builder Simplifies Creating and Working With Complex Objects\u201d Oversimplified domain models and anemic models are expected results for projects that rely on Lombok. On the generation of the equals, hashcode and toString methods, be aware of the following: @EqualsAndHashCode may conflict with entity identity in JPA, resulting in unexpected behaviors on the comparison between detached entities, or collections' operations. Java @Entity @EqualsAndHashCode public class Order { @Id @GeneratedValue private Long id; private String orderNumber; // Other fields... } @Data automatically creates toString() methods that by default expose all attributes, including, sensitive information. Consider carefully implementing these methods based on domain requirements: Java @Entity public class User { @Id private Long id; private String username; private String passwordHash; // Sensitive information @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof User)) return false; User user = (User) o; return Objects.equals(id, user.id); } @Override public int hashCode() { return Objects.hash(id); } @Override public String toString() { return \"User{id=\" + id + \", username='\" + username + \"'}\"; // Note: passwordHash is deliberately excluded } } \u201cLombok Lets Me Use Inheritance, Unlike Java Records\u201d It's true that when using records, we can't use hierarchy. However, this is a limitation that often has us delivering better code design. Here's how to address this need through the use of composition and interfaces: Java public interface Vehicle { String getRegistrationNumber(); int getNumberOfWheels(); } public record Car(String registrationNumber, String model) implements Vehicle { @Override public int getNumberOfWheels() { return 4; } } public record Motorcycle(String registrationNumber, boolean hasSidecar) implements Vehicle { @Override public int getNumberOfWheels() { return hasSidecar ? 3 : 2; } } \u201cLombok Streamlines My Build Process and Maintenance\u201d Lombok's magic comes at the cost of code clarity and goes against SOLID principles: Hidden implementation: You can not see the generated methods in the source code. Developers may face challenges to fully understanding all the class' behaviors without dedicating time to learn how Lombok works behind the scenes.Debugging complications: Debugging the code may not work consistently as the source code you have often is not a reflection of the behavior in runtime. Final Thoughts \"The ratio of time spent reading versus writing is well over 10 to 1... Making it easy to read makes it easier to write.\"", "start_char_idx": 0, "end_char_idx": 4901, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b1155f7-acab-47cf-b391-7aad342a7761": {"__data__": {"id_": "5b1155f7-acab-47cf-b391-7aad342a7761", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_10.txt", "file_name": "dzone.com_24_10.txt", "file_type": "text/plain", "file_size": 5585, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3b77ad6e-113f-48c3-95dd-2f7969f95cc0", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_10.txt", "file_name": "dzone.com_24_10.txt", "file_type": "text/plain", "file_size": 5585, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "464ef42cfd70575e9fcb9c434b8f0bb1d396eb1234cf2872e98c9089560c0651", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4ed01be-f859-4090-a32e-ce637f0923a7", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_10.txt", "file_name": "dzone.com_24_10.txt", "file_type": "text/plain", "file_size": 5585, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ee5e76ba7c5cfad9215160dda191b61dc567f300a7fe9dd798cc15170a94517a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b697e8be-9157-41a9-8eb3-bd2258d05475", "node_type": "1", "metadata": {}, "hash": "00fa3383821c0b5830e7ed90fe20be6d0095722b55229746ecf0dc7bccd28bf0", "class_name": "RelatedNodeInfo"}}, "text": "3 : 2; } } \u201cLombok Streamlines My Build Process and Maintenance\u201d Lombok's magic comes at the cost of code clarity and goes against SOLID principles: Hidden implementation: You can not see the generated methods in the source code. Developers may face challenges to fully understanding all the class' behaviors without dedicating time to learn how Lombok works behind the scenes.Debugging complications: Debugging the code may not work consistently as the source code you have often is not a reflection of the behavior in runtime. Final Thoughts \"The ratio of time spent reading versus writing is well over 10 to 1... Making it easy to read makes it easier to write.\" - Robert C. Martin, Clean Code While Lombok offers short-term productivity gains, its use in enterprise Java development introduces significant risks to code maintainability, readability, and long-term project health. To avoid the challenges we've explored that derive from Lombok usage, consider alternative options that give you much higher chances of creating more stable, maintainable, and predictable code. Developers who seek to deliver successful, long-term, enterprise software projects in critical domains have higher chances to succeed in their endeavors by embracing best practices and good principles of Java development for creating robust, maintainable,", "start_char_idx": 4236, "end_char_idx": 5569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b697e8be-9157-41a9-8eb3-bd2258d05475": {"__data__": {"id_": "b697e8be-9157-41a9-8eb3-bd2258d05475", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_11.txt", "file_name": "dzone.com_24_11.txt", "file_type": "text/plain", "file_size": 6639, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "54a42ba5-8909-421d-a428-d5b1494b2313", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_11.txt", "file_name": "dzone.com_24_11.txt", "file_type": "text/plain", "file_size": 6639, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9b75a1ca0aed6103acbba6eec745324142ba0d435a101cd91572bf2eda891b19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b1155f7-acab-47cf-b391-7aad342a7761", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_10.txt", "file_name": "dzone.com_24_10.txt", "file_type": "text/plain", "file_size": 5585, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a1cb1a9c7f0786c93308975fe7883376e1997d1e2e34e65f58e0a38533abd6c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc56ccf9-3a1d-4a36-a32d-8f5bea840955", "node_type": "1", "metadata": {}, "hash": "5b8825d32b2d3de99bdd7bdafe277e2e4a5642250fc4416ca3eb22048af251a0", "class_name": "RelatedNodeInfo"}}, "text": "and secure software. Learn More \"Unraveling Lombok\u2019s Code Design Pitfalls: Exploring the Pros and Cons,\" Otavio Santana By Karina Varela Mastering Multi-Cloud and Edge Data Synchronization: A Retail Use Case With KubeMQ\u2019s Java SDK In today\u2019s rapidly evolving enterprise landscape, managing and synchronizing data across complex environments is a significant challenge. As businesses increasingly adopt multi-cloud strategies to enhance resilience and avoid vendor lock-in, they are also turning to edge computing to process data closer to the source. This combination of multi-cloud and edge computing offers significant advantages, but it also presents unique challenges, particularly in ensuring seamless and reliable data synchronization across diverse environments. In this post, we\u2019ll explore how the open-source KubeMQ\u2019s Java SDK provides an ideal solution for these challenges. We\u2019ll focus on a real-life use case involving a global retail chain that uses KubeMQ to manage inventory data across its multi-cloud and edge infrastructure. Through this example, we\u2019ll demonstrate how the solution enables enterprises to achieve reliable, high-performance data synchronization, transforming their operations. The Complexity of Multi-Cloud and Edge Environments Enterprises today are increasingly turning to multi-cloud architectures to optimize costs, enhance system resilience, and avoid being locked into a single cloud provider. However, managing data across multiple cloud providers is far from straightforward. The challenge is compounded when edge computing enters the equation. Edge computing involves processing data closer to where it\u2019s generated, such as in IoT devices or remote locations, reducing latency and improving real-time decision-making. When multi-cloud and edge computing are combined, the result is a highly complex environment where data needs to be synchronized not just across different clouds but also between central systems and edge devices. Achieving this requires a robust messaging infrastructure capable of managing these complexities while ensuring data consistency, reliability, and performance. KubeMQ\u2019s Open-Source Java SDK: A Unified Solution for Messaging Across Complex Environments KubeMQ is a messaging and queue management solution designed to handle modern enterprise infrastructure. The KubeMQ Java SDK is particularly appropriate for developers working within Java environments, offering a versatile toolset for managing messaging across multi-cloud and edge environments. Key features of the KubeMQ Java SDK include: All messaging patterns in one SDK: KubeMQ\u2019s Java SDK supports all major messaging patterns, providing developers with a unified experience that simplifies integration and development.Utilizes GRPC streaming for high performance: The SDK leverages GRPC streaming to deliver high performance, making it suitable for handling large-scale, real-time data synchronization tasks.Simplicity and ease of use: With numerous code examples and encapsulated logic, the SDK simplifies the development process by managing complexities typically handled on the client side. Real-Life Use Case: Retail Inventory Management Across Multi-Cloud and Edge To illustrate how to use KubeMQ\u2019s Java SDK, let\u2019s consider a real-life scenario involving a global retail chain. This retailer operates thousands of stores worldwide, each equipped with IoT devices that monitor inventory levels in real-time. The company has adopted a multi-cloud strategy to enhance resilience and avoid vendor lock-in while leveraging edge computing to process data locally at each store. The Challenge The retailer needs to synchronize inventory data from thousands of edge devices across different cloud providers. Ensuring that every store has accurate, up-to-date stock information is critical for optimizing the supply chain and preventing stockouts or overstock situations. This requires a robust, high-performance messaging system that can handle the complexities of multi-cloud and edge environments. The Solution Using the KubeMQ Java SDK, the retailer implements a messaging system that synchronizes inventory data across its multi-cloud and edge infrastructure.", "start_char_idx": 0, "end_char_idx": 4192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc56ccf9-3a1d-4a36-a32d-8f5bea840955": {"__data__": {"id_": "fc56ccf9-3a1d-4a36-a32d-8f5bea840955", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_11.txt", "file_name": "dzone.com_24_11.txt", "file_type": "text/plain", "file_size": 6639, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "54a42ba5-8909-421d-a428-d5b1494b2313", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_11.txt", "file_name": "dzone.com_24_11.txt", "file_type": "text/plain", "file_size": 6639, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9b75a1ca0aed6103acbba6eec745324142ba0d435a101cd91572bf2eda891b19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b697e8be-9157-41a9-8eb3-bd2258d05475", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_11.txt", "file_name": "dzone.com_24_11.txt", "file_type": "text/plain", "file_size": 6639, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b3eaa8de024665b1a1d466b4dc9bb14b4ea41294294965d0670c69ecb5b9aeca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a17f064b-e135-4228-b126-f0152aa27d01", "node_type": "1", "metadata": {}, "hash": "43a0e0632c3bbad77729a4b30ac4c840112b00b4b69ed210036f119a82af7d82", "class_name": "RelatedNodeInfo"}}, "text": "Real-Life Use Case: Retail Inventory Management Across Multi-Cloud and Edge To illustrate how to use KubeMQ\u2019s Java SDK, let\u2019s consider a real-life scenario involving a global retail chain. This retailer operates thousands of stores worldwide, each equipped with IoT devices that monitor inventory levels in real-time. The company has adopted a multi-cloud strategy to enhance resilience and avoid vendor lock-in while leveraging edge computing to process data locally at each store. The Challenge The retailer needs to synchronize inventory data from thousands of edge devices across different cloud providers. Ensuring that every store has accurate, up-to-date stock information is critical for optimizing the supply chain and preventing stockouts or overstock situations. This requires a robust, high-performance messaging system that can handle the complexities of multi-cloud and edge environments. The Solution Using the KubeMQ Java SDK, the retailer implements a messaging system that synchronizes inventory data across its multi-cloud and edge infrastructure. Here\u2019s how the solution is built: Store Side Code Step 1: Install KubeMQ SDK Add the following dependency to your Maven pom.xml file: XML <dependency> <groupId>io.kubemq.sdk</groupId> <artifactId>kubemq-sdk-Java</artifactId> <version>2.0.0</version> </dependency> Step 2: Synchronizing Inventory Data Across Multi-Clouds Java import io.kubemq.sdk.queues.QueueMessage; import io.kubemq.sdk.queues.QueueSendResult; import io.kubemq.sdk.queues.QueuesClient; import java.util.UUID; public class StoreInventoryManager { private final QueuesClient client1; private final QueuesClient client2; private final String queueName = \"store-1\"; public StoreInventoryManager() { this.client1 = QueuesClient.builder() .address(\"cloudinventory1:50000\") .clientId(\"store-1\") .build(); this.client2 = QueuesClient.builder() .address(\"cloudinventory2:50000\") .clientId(\"store-1\") .build(); } public void sendInventoryData(String inventoryData) { QueueMessage message = QueueMessage.builder() .channel(queueName) .body(inventoryData.getBytes()) .metadata(\"Inventory Update\") .id(UUID.randomUUID().toString()) .build(); try { // Send to cloudinventory1 QueueSendResult result1 = client1.sendQueuesMessage(message); System.out.println(\"Sent to cloudinventory1: \" + result1.isError()); // Send to cloudinventory2 QueueSendResult result2 = client2.sendQueuesMessage(message); System.out.println(\"Sent to cloudinventory2: \" + result2.isError()); } catch (RuntimeException e) { System.err.println(\"Failed to send inventory data: \" + e.getMessage()); } } public static void main(String[] args) { StoreInventoryManager manager = new StoreInventoryManager(); manager.sendInventoryData(\"{'item': 'Laptop', 'quantity': 50}\"); } } Cloud Side Code Step 1: Install KubeMQ SDK Add the following dependency to your Maven pom.xml file: XML <dependency> <groupId>io.kubemq.sdk</groupId> <artifactId>kubemq-sdk-Java</artifactId> <version>2.0.0</version> </dependency> Step 2: Managing Data on Cloud Side Java import io.kubemq.sdk.queues.QueueMessage; import io.kubemq.sdk.queues.QueuesPollRequest; import io.kubemq.sdk.queues.QueuesPollResponse; import io.kubemq.sdk.queues.QueuesClient; public class CloudInventoryManager { private final QueuesClient client; private final String queueName = \"store-1\"; public CloudInventoryManager() { this.client = QueuesClient.builder() .address(\"cloudinventory1:50000\") .clientId(\"cloudinventory1\") .build(); } public void", "start_char_idx": 3126, "end_char_idx": 6613, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a17f064b-e135-4228-b126-f0152aa27d01": {"__data__": {"id_": "a17f064b-e135-4228-b126-f0152aa27d01", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_12.txt", "file_name": "dzone.com_24_12.txt", "file_type": "text/plain", "file_size": 5225, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "73132eb3-9df5-4263-9889-45ef72523ca3", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_12.txt", "file_name": "dzone.com_24_12.txt", "file_type": "text/plain", "file_size": 5225, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "25183fc23258bc077be8c0f75d1ec2eda24ae7afc15497cfdfddbc854a4e5279", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc56ccf9-3a1d-4a36-a32d-8f5bea840955", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_11.txt", "file_name": "dzone.com_24_11.txt", "file_type": "text/plain", "file_size": 6639, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ae3038b64e82b39ca3c78f6e9f7a513393c611e95e28517000f7fc42a0808751", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "435be80c-76df-4617-b2f3-b5f8202588ed", "node_type": "1", "metadata": {}, "hash": "ab94cf5d71cd832fb8d9d832c4ee564ef94edbfe8bd9b7afb1292e3f989b89d1", "class_name": "RelatedNodeInfo"}}, "text": "receiveInventoryData() { QueuesPollRequest pollRequest = QueuesPollRequest.builder() .channel(queueName) .pollMaxMessages(1) .pollWaitTimeoutInSeconds(10) .build(); try { while (true) { QueuesPollResponse response = client.receiveQueuesMessages(pollRequest); if (!response.isError()) { for (QueueMessage msg : response.getMessages()) { String inventoryData = new String(msg.getBody()); System.out.println(\"Received inventory data: \" + inventoryData); // Process the data here // Acknowledge the message msg.ack(); } } else { System.out.println(\"Error receiving messages: \" + response.getError()); } // Wait for a bit before polling again Thread.sleep(1000); } } catch (RuntimeException | InterruptedException e) { System.err.println(\"Failed to receive inventory data: \" + e.getMessage()); } } public static void main(String[] args) { CloudInventoryManager manager = new CloudInventoryManager(); manager.receiveInventoryData(); } } The Benefits of Using KubeMQ for Retail Inventory Management Implementing KubeMQ\u2019s Java SDK in this retail scenario offers several benefits: Improved inventory accuracy: The retailer can ensure that all stores have accurate, up-to-date stock information, reducing the risk of stockouts and overstock.Optimized supply chain: Accurate data flow from the edge to the cloud streamlines the supply chain, reducing waste and improving response times.Enhanced resilience: The multi-cloud and edge approach provides a resilient infrastructure that can adapt to regional disruptions or cloud provider issues. Conclusion KubeMQ\u2019s open-source Java SDK provides a powerful solution for enterprises looking to manage data across complex multi-cloud and edge environments. In the retail use case discussed, the SDK enables seamless data synchronization, transforming how the retailer manages its inventory across thousands of stores worldwide. For more information and support, check out their quick start, documentation, tutorials, and community forums. Have a really great day! By John Vester CORE My Journey With AWS CDK and Java: What You Need To Know One of the first decisions you\u2019ll need to make when working with the AWS Cloud Development Kit (CDK) is choosing the language for writing your Infrastructure as Code (IaC). The CDK currently supports TypeScript, JavaScript, Python, Java, C#, and Go. Over the past few years, I\u2019ve worked with the CDK in TypeScript, Python, and Java. While there is ample information available online for TypeScript and Python, this post aims to share my experience using Java as the language of choice for the AWS CDK. Wait\u2026What? Use Java With the AWS CDK? Some may say that TypeScript is the most obvious language to use while working with the AWS CDK. The CDK itself is written in TypeScript and it\u2019s also the most used language according to the 2023 CDK Community Survey. Java is coming in 3rd place with a small percentage of use. I do wonder if this still holds true given the number of responses to the survey. I\u2019ve worked with small businesses and large enterprise organizations over the last years and I see more and more Java-oriented teams move their workloads to AWS while adopting AWS CDK as their Infrastructure as Code tool. Depending on the type of service(s) being built by these teams they may or may not have any experience with either Python or TypeScript and the Node.js ecosystem, which makes sticking to Java an easy choice. General Observations From what I\u2019ve seen, adopting the CDK in Java is relatively easy for most of these teams as they already understand the language and the ecosystem. Integrating the CDK with their existing build tools like Maven and Gradle is well documented, which leaves them with the learning curve of understanding how to work with infrastructure as code, how to structure a CDK project, and when to use L1, L2, and L3 constructs. Compared to TypeScript the CDK stacks and constructs written in Java contain a bit more boilerplate code and therefore might feel a bit more bloated if you come from a different language. I personally don\u2019t feel this makes the code less readable and with modern IDEs and coding assistants, I don\u2019t feel I\u2019m less productive. The CDK also seems to become more widely adopted in the Java community with more recent Java frameworks like Micronaut even having built-in support for AWS CDK in the framework. See for instance the following Micronaut launch configurations: Micronaut Application with API Gateway and CDK for Java runtimeMicronaut Function with API Gateway and CDK for Java runtime One of the advantages of Java is that it\u2019s a statically typed language, which means it will catch most CDK coding errors during compile time. There are still some errors which you will only see during an actual cdk synth or cdk deploy.", "start_char_idx": 0, "end_char_idx": 4766, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "435be80c-76df-4617-b2f3-b5f8202588ed": {"__data__": {"id_": "435be80c-76df-4617-b2f3-b5f8202588ed", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_12.txt", "file_name": "dzone.com_24_12.txt", "file_type": "text/plain", "file_size": 5225, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "73132eb3-9df5-4263-9889-45ef72523ca3", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_12.txt", "file_name": "dzone.com_24_12.txt", "file_type": "text/plain", "file_size": 5225, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "25183fc23258bc077be8c0f75d1ec2eda24ae7afc15497cfdfddbc854a4e5279", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a17f064b-e135-4228-b126-f0152aa27d01", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_12.txt", "file_name": "dzone.com_24_12.txt", "file_type": "text/plain", "file_size": 5225, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3938382bc843162f0f33cd4ebded79e44f94a80cff5a2848f0d9fcd686d4c90d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93de86e4-212e-414d-a83a-552d2f01774b", "node_type": "1", "metadata": {}, "hash": "a45f1b7c1e60af9e146d2a4d186df4890fbc6d078b22292538b30eb11c0a2778", "class_name": "RelatedNodeInfo"}}, "text": "Compared to TypeScript the CDK stacks and constructs written in Java contain a bit more boilerplate code and therefore might feel a bit more bloated if you come from a different language. I personally don\u2019t feel this makes the code less readable and with modern IDEs and coding assistants, I don\u2019t feel I\u2019m less productive. The CDK also seems to become more widely adopted in the Java community with more recent Java frameworks like Micronaut even having built-in support for AWS CDK in the framework. See for instance the following Micronaut launch configurations: Micronaut Application with API Gateway and CDK for Java runtimeMicronaut Function with API Gateway and CDK for Java runtime One of the advantages of Java is that it\u2019s a statically typed language, which means it will catch most CDK coding errors during compile time. There are still some errors which you will only see during an actual cdk synth or cdk deploy. For instance, some constructs have required properties that will only become visible if you try to synthesize the stack, but in my experience, you will have that in other languages as well. Performance-wise, it feels like the CDK in Java is a bit slower compared to using TypeScript or any other interpreted language. I\u2019ve not measured this, but it\u2019s more of a gut feeling. This might have to do with the static nature of Java and", "start_char_idx": 3841, "end_char_idx": 5197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93de86e4-212e-414d-a83a-552d2f01774b": {"__data__": {"id_": "93de86e4-212e-414d-a83a-552d2f01774b", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_13.txt", "file_name": "dzone.com_24_13.txt", "file_type": "text/plain", "file_size": 5205, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae2c5cb3-4fc3-41dd-b44a-7d16e454a79d", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_13.txt", "file_name": "dzone.com_24_13.txt", "file_type": "text/plain", "file_size": 5205, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f73470bfe09c91584bb75e07b753da7e29acd93bc96e6a5788cb4873132625f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "435be80c-76df-4617-b2f3-b5f8202588ed", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_12.txt", "file_name": "dzone.com_24_12.txt", "file_type": "text/plain", "file_size": 5225, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "98da6454302db3d15891fe952cc77a8265f1af3c62b1fc369e1e4f6e5a76b63e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b6f81e4-8672-4c28-bebe-8107fb85ce7e", "node_type": "1", "metadata": {}, "hash": "e807c6ecd8fd1f0974db5a67929e8d6c2adb41f0117b6255add76adc75e0f4d6", "class_name": "RelatedNodeInfo"}}, "text": "its corresponding build tools and compile phase. On the other hand, it might be that the JSII runtime architecture also has an effect and how Java interacts with a JavaScript environment. Java Builders One of the biggest differences when using the AWS CDK with Java is the use of Builders. When creating constructs with TypeScript, you\u2019re mainly using the props argument (map of configuration properties) while creating a construct. Let\u2019s take a look at an example: TypeScript const bucket = new s3.Bucket(this,\"MyBucket\", { versioned: true, encryption: BucketEncryption.KMS_MANAGED }) The Java version of the above snippet uses a Builder class that follows the builder pattern for constructing the properties. If you\u2019re unfamiliar with the Builder pattern in Java, I recommend checking out this blog post about using the Builder pattern. Depending on the CDK construct, you might be able to define a CDK resource in two different ways. In the first example, you use the Builder for the Bucket properties. Java Bucket bucket = new Bucket(this, \"MyBucket\", new BucketProps.Builder() .versioned(true) .encryption(BucketEncryption.KMS_MANAGED) .build()); The alternative is that constructs can have their own builder class, which makes it a little less verbose and easier to read. Java Bucket bucket = Bucket.Builder .create(this, \"MyBucket\") .versioned(true) .encryption(BucketEncryption.KMS_MANAGED) .build(); IDE Support Overall IDE support is really great when working with CDK in Java. I use IntelliJ IDEA on a daily basis and auto-completion really helps when using the Builder objects. As the CDK documentation is also inside the CDK Java source code, looking up documentation is really easy. It\u2019s similar to how you would do it with any kind of other object or library. Third-Party Construct Support The CDK itself is written in TypeScript, and for each supported programming language, a specific binding is generated. This means that when a new resource or feature for an AWS service is added in the TypeScript variant of the CDK, it\u2019s also available to developers using a Java-based CDK. Besides the default CDK constructs, there are also a lot of community-generated constructs. Construct Hub is a great place to find them. From what I\u2019ve seen, most constructs coming out of AWS will support Java as one of the default languages. Community-supported constructs however might not. There are several popular constructs that only support TypeScript and Python. Filtering on Construct Hub for AWS CDK v2-based constructs, sorted by programming languages results in the following data. LanguageNumber of constructs librariesTypescript1164Python781.Net511Java455Go132 Depending on the type of infrastructure or third-party services you\u2019re planning to use, you might not be able to use all available constructs. For instance, the constructs maintained by DataDog are only available in Typescript, Python, and Go. In my personal experience, though, most construct developers are open to supporting Java. Third-party constructs are based on projen and jsii, which means that adding a Java-based version is most of the time a matter of configuration in the package.json file of the project. JSON \"jsii\": { \"outdir\": \"dist\", \"targets\": { \"java\": { \"package\": \"io.github.cdklabs.cdknag\", \"maven\": { \"groupId\": \"io.github.cdklabs\", \"artifactId\": \"cdknag\" } }, \"python\": { \"distName\": \"cdk-nag\", \"module\": \"cdk_nag\" }, \"dotnet\": { \"namespace\": \"Cdklabs.CdkNag\", \"packageId\": \"Cdklabs.CdkNag\" }, \"go\": { \"moduleName\": \"github.com/cdklabs/cdk-nag-go\" } }, \"tsc\": { \"outDir\": \"lib\", \"rootDir\": \"src\" } }, (An example of how JSII is configured for the CDK NAG project) Once the configuration is in place and the artifacts have been pushed to, for instance, Maven Central, you\u2019re good to go. When thinking about it, I once had a 3rd party construct I wanted to use that did not support Java (yet). It got added quite quickly and there was also an alternative solution for it, so I can't remember having issues with the lower number of available constructs. Examples, Tutorials, and Documentation I think it\u2019s good to reflect on the fact that there are more CDK examples and tutorials available in TypeScript and Python compared to Java. This reflects the findings in the usage chart from the CDK Community Survey. However, reading TypeScript as a Java programmer is relatively easy (in my personal opinion).", "start_char_idx": 0, "end_char_idx": 4396, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b6f81e4-8672-4c28-bebe-8107fb85ce7e": {"__data__": {"id_": "3b6f81e4-8672-4c28-bebe-8107fb85ce7e", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_13.txt", "file_name": "dzone.com_24_13.txt", "file_type": "text/plain", "file_size": 5205, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae2c5cb3-4fc3-41dd-b44a-7d16e454a79d", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_13.txt", "file_name": "dzone.com_24_13.txt", "file_type": "text/plain", "file_size": 5205, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f73470bfe09c91584bb75e07b753da7e29acd93bc96e6a5788cb4873132625f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93de86e4-212e-414d-a83a-552d2f01774b", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_13.txt", "file_name": "dzone.com_24_13.txt", "file_type": "text/plain", "file_size": 5205, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "21deb0df172e2a97edb6db030d352d3ca6cf64169948ee1d18603e272aa3d7d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1445678c-5e23-44a2-bd70-a507b4196273", "node_type": "1", "metadata": {}, "hash": "275ce0fe810d660f76db98db86fe98b3d7800f303622fac19a9cf6a8c6352994", "class_name": "RelatedNodeInfo"}}, "text": "When thinking about it, I once had a 3rd party construct I wanted to use that did not support Java (yet). It got added quite quickly and there was also an alternative solution for it, so I can't remember having issues with the lower number of available constructs. Examples, Tutorials, and Documentation I think it\u2019s good to reflect on the fact that there are more CDK examples and tutorials available in TypeScript and Python compared to Java. This reflects the findings in the usage chart from the CDK Community Survey. However, reading TypeScript as a Java programmer is relatively easy (in my personal opinion). If you\u2019re new to the AWS CDK, there is a ton of example code available on GitHub, YouTube, and numerous blog posts and tutorials. If you\u2019re already using the CDK in combination with Java be sure to write some blog posts or tutorials, so others can see that and benefit from your knowledge! Summary Java is a very viable option when working with the AWS CDK, especially for workload teams already familiar with the language and its ecosystem. IDE support for the CDK is excellent with features like auto-completion and easy access to source code documentation. All in all, the experience is really good. Keep in mind that picking Java for your infrastructure as code all depends on the context and the environment you\u2019re in. I would suggest picking the language that is most applicable", "start_char_idx": 3781, "end_char_idx": 5181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1445678c-5e23-44a2-bd70-a507b4196273": {"__data__": {"id_": "1445678c-5e23-44a2-bd70-a507b4196273", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_14.txt", "file_name": "dzone.com_24_14.txt", "file_type": "text/plain", "file_size": 5083, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a5e84e1-6d5d-4050-a1b6-39dbc0e0f174", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_14.txt", "file_name": "dzone.com_24_14.txt", "file_type": "text/plain", "file_size": 5083, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "af26d9168273b0b6609bde401f510e2d016caf68cc555dbd481ff7b45d056812", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b6f81e4-8672-4c28-bebe-8107fb85ce7e", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_13.txt", "file_name": "dzone.com_24_13.txt", "file_type": "text/plain", "file_size": 5205, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b98fa543958c3afe9e723be844ee963c9f60c54f491c7719503e815d2c0cd2e7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc3dddd3-26a9-4aca-a28e-ad64465a9b50", "node_type": "1", "metadata": {}, "hash": "8f2501b3fbb02eea0d2a72bfb09062de01812d1193f2e3f5204278e9b0de6cec", "class_name": "RelatedNodeInfo"}}, "text": "to your specific situation. If you still need to make the choice and are already working with Java, I would definitely recommend trying it out! By Jeroen Reijn CORE Java Performance Tuning: Adjusting GC Threads for Optimal Results Garbage Collection (GC) plays an important role in Java\u2019s memory management. It helps to reclaim memory that is no longer in use. A garbage collector uses its own set of threads to reclaim memory. These threads are called GC threads. Sometimes JVM can end up either with too many or too few GC threads. In this post, we will discuss why JVM can end up having too many/too few GC threads, the consequences of it, and potential solutions to address them. How To Find Your Application\u2019s GC Thread Count You can determine your application\u2019s GC thread count by doing a thread dump analysis as outlined below: Capture thread dump from your production server.Analyze the dump using a thread dump analysis tool.The tool will immediately report the GC thread count, as shown in the figure below. Figure 1: fastThread tool reporting GC Thread count How To Set GC Thread Count You can manually adjust the number of GC threads by setting the following two JVM arguments: -XX:ParallelGCThreads=n: Sets the number of threads used in the parallel phase of the garbage collectors-XX:ConcGCThreads=n: Controls the number of threads used in concurrent phases of garbage collectors What Is the Default GC Thread Count? If you don\u2019t explicitly set the GC thread count using the above two JVM arguments, then the default GC thread count is derived based on the number of CPUs in the server/container. \u2013XX:ParallelGCThreads Default: On Linux/x86 machines, it is derived based on the formula: if (num of processors <=8) { return num of processors; } else { return 8+(num of processors-8)*(5/8); } So if your JVM is running on a server with 32 processors, then the ParallelGCThread value is going to be: 23(i.e. 8 + (32 \u2013 8)*(5/8)). -XX:ConcGCThreads Default: It\u2019s derived based on the formula: max((ParallelGCThreads+2)/4, 1) So if your JVM is running on a server with 32 processors, then: ParallelGCThread value is going to be: 23 (i.e. 8 + (32 \u2013 8)*(5/8)).ConcGCThreads value is going to be: 6 (i.e. max(25/4, 1). Can JVM End Up With Too Many GC Threads? It\u2019s possible for your JVM to unintentionally have too many GC threads, often without your awareness. This typically happens because the default number of GC threads is automatically determined based on the number of CPUs in your server or container. For example, on a machine with 128 CPUs, the JVM might allocate around 80 threads for the parallel phase of garbage collection and about 20 threads for the concurrent phase, resulting in a total of approximately 100 GC threads. If you\u2019re running multiple JVMs on this 128-CPU machine, each JVM could end up with around 100 GC threads. This can lead to excessive resource usage because all these threads are competing for the same CPU resources. This problem is particularly noticeable in containerized environments, where multiple applications share the same CPU cores. It will cause JVM to allocate more GC threads than necessary, which can degrade overall performance. Why Is Having Too Many GC Threads a Problem? While GC threads are essential for efficient memory management, having too many of them can lead to significant performance challenges in your Java application. Increased context switching: When the number of GC threads is too high, the operating system must frequently switch between these threads. This leads to increased context switching overhead, where more CPU cycles are spent managing threads rather than executing your application\u2019s code. As a result, your application may slow down significantly.CPU overhead: Each GC thread consumes CPU resources. If too many threads are active simultaneously, they can compete for CPU time, leaving less processing power available for your application\u2019s primary tasks. This competition can degrade your application\u2019s performance, especially in environments with limited CPU resources.Memory contention: With an excessive number of GC threads, there can be increased contention for memory resources. Multiple threads trying to access and modify memory simultaneously can lead to lock contention, which further slows down your application and can cause performance bottlenecks.Increased GC pause times and lower throughput: When too many GC threads are active, the garbage collection process can become less efficient, leading to longer GC pause times where the application is temporarily halted. These extended pauses can cause noticeable delays or stutters in your application.", "start_char_idx": 0, "end_char_idx": 4655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc3dddd3-26a9-4aca-a28e-ad64465a9b50": {"__data__": {"id_": "cc3dddd3-26a9-4aca-a28e-ad64465a9b50", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_14.txt", "file_name": "dzone.com_24_14.txt", "file_type": "text/plain", "file_size": 5083, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a5e84e1-6d5d-4050-a1b6-39dbc0e0f174", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_14.txt", "file_name": "dzone.com_24_14.txt", "file_type": "text/plain", "file_size": 5083, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "af26d9168273b0b6609bde401f510e2d016caf68cc555dbd481ff7b45d056812", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1445678c-5e23-44a2-bd70-a507b4196273", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_14.txt", "file_name": "dzone.com_24_14.txt", "file_type": "text/plain", "file_size": 5083, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e0e4182e774d719c032c6a9a8618099ad337fbdc1142bda2be532ba670985e36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04777407-0ff5-45f3-a5ef-46eb6b2357e0", "node_type": "1", "metadata": {}, "hash": "283d4cfb789f544adf88357b49f35b83fdcdc1bafb0aec344221709a1fbcb0cd", "class_name": "RelatedNodeInfo"}}, "text": "This leads to increased context switching overhead, where more CPU cycles are spent managing threads rather than executing your application\u2019s code. As a result, your application may slow down significantly.CPU overhead: Each GC thread consumes CPU resources. If too many threads are active simultaneously, they can compete for CPU time, leaving less processing power available for your application\u2019s primary tasks. This competition can degrade your application\u2019s performance, especially in environments with limited CPU resources.Memory contention: With an excessive number of GC threads, there can be increased contention for memory resources. Multiple threads trying to access and modify memory simultaneously can lead to lock contention, which further slows down your application and can cause performance bottlenecks.Increased GC pause times and lower throughput: When too many GC threads are active, the garbage collection process can become less efficient, leading to longer GC pause times where the application is temporarily halted. These extended pauses can cause noticeable delays or stutters in your application. Additionally, as more time is spent on garbage collection rather than processing requests, your application\u2019s overall throughput may decrease, handling fewer transactions or requests per second and affecting its ability to scale and perform under load.Higher latency: Increased GC activity due to an excessive number of threads can lead to higher latency in responding to user requests or processing", "start_char_idx": 3532, "end_char_idx": 5055, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04777407-0ff5-45f3-a5ef-46eb6b2357e0": {"__data__": {"id_": "04777407-0ff5-45f3-a5ef-46eb6b2357e0", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_15.txt", "file_name": "dzone.com_24_15.txt", "file_type": "text/plain", "file_size": 5169, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "11eac1ec-1076-415e-87b6-0546941b12b0", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_15.txt", "file_name": "dzone.com_24_15.txt", "file_type": "text/plain", "file_size": 5169, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4fc15b1bea510bdd3dcae1fa556b06cb8c35674edab302a37947f9f71ada0994", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc3dddd3-26a9-4aca-a28e-ad64465a9b50", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_14.txt", "file_name": "dzone.com_24_14.txt", "file_type": "text/plain", "file_size": 5083, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e476a6ca8e30f812e408950a1ce8ea6ec185a321e885c4a16699ac6b64a7a5eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6948ffe-feb9-4b7d-92af-e137479c665b", "node_type": "1", "metadata": {}, "hash": "2468e2044ab92fd66432ab0a081c0180c43a8db2d4afcb428a01a484f726ccb7", "class_name": "RelatedNodeInfo"}}, "text": "tasks. This is particularly problematic for applications that require low latency, such as real-time systems or high-frequency trading platforms, where even slight delays can have significant consequences.Diminishing returns: Beyond a certain point, adding more GC threads does not improve performance. Instead, it leads to diminishing returns, where the overhead of managing these threads outweighs the benefits of faster garbage collection. This can result in degraded application performance, rather than the intended optimization. Why Is Having Too Few GC Threads a Problem? While having too many GC threads can create performance issues, having too few GC threads can be equally problematic for your Java application. Here\u2019s why: Longer Garbage Collection times: With fewer GC threads, the garbage collection process may take significantly longer to complete. Since fewer threads are available to handle the workload, the time required to reclaim memory increases, leading to extended GC pause times.Increased application latency: Longer garbage collection times result in increased latency, particularly for applications that require low-latency operations. Users might experience delays, as the application becomes unresponsive while waiting for garbage collection to finish.Reduced throughput: A lower number of GC threads means the garbage collector can\u2019t work as efficiently, leading to reduced overall throughput. Your application may process fewer requests or transactions per second, affecting its ability to scale under load.Inefficient CPU utilization: With too few GC threads, the CPU cores may not be fully utilized during garbage collection. This can lead to inefficient use of available resources, as some cores remain idle while others are overburdened.Increased risk of OutOfMemoryErrors and memory leaks: If the garbage collector is unable to keep up with the rate of memory allocation due to too few threads, it may not be able to reclaim memory quickly enough. This increases the risk of your application running out of memory, resulting in OutOfMemoryErrors and potential crashes. Additionally, insufficient GC threads can exacerbate memory leaks by slowing down the garbage collection process, allowing more unused objects to accumulate in memory. Over time, this can lead to excessive memory usage and further degrade application performance. Solutions To Optimize GC Thread Count If your application is suffering from performance issues due to an excessive or insufficient number of GC threads, consider manually setting the GC thread count using the above-mentioned JVM arguments: -XX:ParallelGCThreads=n -XX:ConcGCThreads=n Before making these changes in production, it\u2019s essential to study your application\u2019s GC behavior. Start by collecting and analyzing GC logs using tools. This analysis will help you identify if the current thread count is causing performance bottlenecks. Based on these insights, you can make informed adjustments to the GC thread count without introducing new issues Note: Always test changes in a controlled environment first to confirm that they improve performance before rolling them out to production. Conclusion Balancing the number of GC threads is key to ensuring your Java application runs smoothly. By carefully monitoring and adjusting these settings, you can avoid potential performance issues and keep your application operating efficiently. By Ram Lakshmanan CORE Why OOP Is a Bad Fit for Custom Software Ever notice that custom OOP projects tend towards a flaming pile of spaghetti crap? Have you ever seen anti-patterns like the following: Changing a line of code to fix screen A blows up screen B, which have no relation to each other.Many wrappers: A Service is wrapped by a Provider is wrapped by a Performer is wrapped by a ...It is hard to track down where is the code that performs a certain operation.Playing whack a mole, where each bug fix just yields a new bug. Ever ask yourself why OOP has design patterns? I would argue that OOP assumes upfront design before writing any code. In particular, OOP shines when every important thing is known at the outset. Take a Java List or Map as an example. They have remained virtually the same since the rollout of Java 1.2 when the collections API was added, replacing older classes like Vector and Dictionary. A List or Map is a simple beast - they are just ordered sets of data. A list orders items by index, a map by their keys. Once you have basic operations like add, change, iterate, and delete, what more do you really need? This is why Java has really only added conveniences like Map.computeIfAbsent, ConcurrentHashMap, and so on. Nothing huge, just some nice things that people were already doing anyway with their own convenience functions and/or classes. But custom software paid for by a customer who only knows what they want today is something altogether different. You literally don't know from one month to the next what feature the customer will ask for, or what bug they will report. Remember that OOP design pattern for random structural changes on a dime? Neither do I. Why Imperative Is Better OOP intrinsically means", "start_char_idx": 0, "end_char_idx": 5161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6948ffe-feb9-4b7d-92af-e137479c665b": {"__data__": {"id_": "f6948ffe-feb9-4b7d-92af-e137479c665b", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_16.txt", "file_name": "dzone.com_24_16.txt", "file_type": "text/plain", "file_size": 4946, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5ca87fd6-89ac-4531-83e5-40d7fb69b0f0", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_16.txt", "file_name": "dzone.com_24_16.txt", "file_type": "text/plain", "file_size": 4946, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ea7ce142bd451596dc452ca469732b7cd5729f2cdf6c3e614dee5b621404e895", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04777407-0ff5-45f3-a5ef-46eb6b2357e0", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_15.txt", "file_name": "dzone.com_24_15.txt", "file_type": "text/plain", "file_size": 5169, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4fc15b1bea510bdd3dcae1fa556b06cb8c35674edab302a37947f9f71ada0994", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04a66de3-217a-4c65-b4a2-938b454cca27", "node_type": "1", "metadata": {}, "hash": "858016d127b7872772625676486796e60da72018e6ca003443344fefd9e3459e", "class_name": "RelatedNodeInfo"}}, "text": "some kind of entanglement: once you pick a design pattern for a set of classes, and write a bunch of code for it, you can't easily change to some other design pattern. You can use different patterns for different sets of code, composing them as needed into a larger system. But each part is kind of locked into a chosen pattern, and it is a significant hassle to change the pattern later. It's like the coding equivalent of vendor lock-in. Unfortunately, a set of code doesn't necessarily shout out \"Hey, this is the strategy pattern.\" You have to examine a set of code to reverse engineer its pattern or ask someone. Have you worked on a team that stated up front what patterns were being used for different parts of the system? I don't recall getting very much of this in my career. Really, in a lot of cases, there simply isn't any real conscious choice of design patterns, just replication of whatever the devs saw before elsewhere, often without any real contextual information of why. This entanglement easily leads to hard to deal with code if someone doesn't fully grok whatever pattern(s) are present. More often than not, using OOP for custom who-knows-what-the-customer-wants-next-week software is setting the system up for failure. Not failure as in it doesn't work, but failure as in it will virtually be guaranteed to become very hard to maintain. Using a simple imperative pattern is much better, which you can do even if the language is primarily OOP language like Java. In the case of Java, just use static methods, where each class corresponds to either a data structure or a series of static methods that operate on data structures. By passing data structures as arguments and returning new data structures, effectively the code is working from the outside, which makes the code simpler to understand and tends towards less entanglement. You could organize packages like this: Top-level packages represent functional areas (e.g., configuration, database access, REST API, validations, etc.)Sub-packages for data structures and functions that operate on themSome sub-packages can represent a design pattern like model, view, and controller For example, it might be organized like this, where app is the top-level dir checked out of the repo: app/db/util: Some utility functions to make DB access easierapp/db/dto: Database transfer objects that represent data as stored/retrieved in the DBapp/db/dao: Database access objects that store/retrieve dtosapp/rest/util: Some utility methods to make REST a bit easier app/rest/view: Objects that represent the data as sent/received over HTTPapp/rest/translate: Translate app/db/dto to /from app/rest/viewapp/rest/model: Make app/db/dao calls to store/retrieve data, uses /app/rest/{view, translate}app/rest/controller: Define endpoints and methods, use app/rest/model to do the workapp/html: SSR HTML generation You'll notice I mention MVC above, which is an OOP pattern. However, this pattern can be simplified as a set of directories with one responsibility per directory, which can still be an imperative way of writing code. It can still be operating on the data objects from the outside. Just because we don't want to use OOP doesn't mean we can't apply some of what we've learned from it over the years in an imperative way. The above looks like a monolithic design. It can be a hybrid if you want: Make app/{service} dirs, which in turn contain DB, REST, and HTML as shown above.Each service can be its own application.Services can be grouped into a smaller number of deployments: you don't have to deploy each service in its own container. The Other Most Common Mistake One of the most important things to consider is (DO)RY versus (DONT)RY. The overuse of (DONT)RY is often a very big pain point in OOP. Like Lists and Maps, (DONT)RY works best in a limited area of code, such as reusing some common code across all Map implementations. Essentially, it is just another variation of what I said earlier about knowing the design in advance - (DONT)RY can be quite useful when you know the considerations up front, but just another factor in making spaghetti code when you don't. (DO)RY is far more useful when you have a changes-by-the-week application: the duplication isolates changes. For example, say you have a customer address and a business address. They seem kind of the same thing, with only minor differences: Businesses have 3 lines, for doors and stops and other cupboard-under-the-stairs things individuals don't need.Businesses can have multiple addresses, so they need a type (physical, mailing, billing).", "start_char_idx": 0, "end_char_idx": 4588, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04a66de3-217a-4c65-b4a2-938b454cca27": {"__data__": {"id_": "04a66de3-217a-4c65-b4a2-938b454cca27", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_16.txt", "file_name": "dzone.com_24_16.txt", "file_type": "text/plain", "file_size": 4946, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5ca87fd6-89ac-4531-83e5-40d7fb69b0f0", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_16.txt", "file_name": "dzone.com_24_16.txt", "file_type": "text/plain", "file_size": 4946, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ea7ce142bd451596dc452ca469732b7cd5729f2cdf6c3e614dee5b621404e895", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6948ffe-feb9-4b7d-92af-e137479c665b", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_16.txt", "file_name": "dzone.com_24_16.txt", "file_type": "text/plain", "file_size": 4946, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "928163f5b9063f8b8e514515caf7abfc474684030495b1c65099668e47a89764", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9dc3faf-34b0-48a1-ad38-d65f4d74035d", "node_type": "1", "metadata": {}, "hash": "503585f7e189c9f76432d36828d6f15b1e42ae86e94d1dda4be9a9157aba8be4", "class_name": "RelatedNodeInfo"}}, "text": "The overuse of (DONT)RY is often a very big pain point in OOP. Like Lists and Maps, (DONT)RY works best in a limited area of code, such as reusing some common code across all Map implementations. Essentially, it is just another variation of what I said earlier about knowing the design in advance - (DONT)RY can be quite useful when you know the considerations up front, but just another factor in making spaghetti code when you don't. (DO)RY is far more useful when you have a changes-by-the-week application: the duplication isolates changes. For example, say you have a customer address and a business address. They seem kind of the same thing, with only minor differences: Businesses have 3 lines, for doors and stops and other cupboard-under-the-stairs things individuals don't need.Businesses can have multiple addresses, so they need a type (physical, mailing, billing). It sounds like you could use the same code for both. But over time, random requests are made for random changes, and some changes need to only apply to one or the other address type. (DONT)RY causes these increasing differences to get harder and harder to manage, which is exactly the bad form of entanglement I keep seeing. (DO)RY means copying code when a", "start_char_idx": 3711, "end_char_idx": 4946, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9dc3faf-34b0-48a1-ad38-d65f4d74035d": {"__data__": {"id_": "c9dc3faf-34b0-48a1-ad38-d65f4d74035d", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_17.txt", "file_name": "dzone.com_24_17.txt", "file_type": "text/plain", "file_size": 5481, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9b8401e-d2d0-45ed-9fef-9946f385fa08", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_17.txt", "file_name": "dzone.com_24_17.txt", "file_type": "text/plain", "file_size": 5481, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "074b4e3508c4862b9bd77c3872129bdf5efec56537dec1b3b85c717348bd84f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04a66de3-217a-4c65-b4a2-938b454cca27", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_16.txt", "file_name": "dzone.com_24_16.txt", "file_type": "text/plain", "file_size": 4946, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "13d07053221839deb94bf3e8c195654b44f0c69e4d5a8ab892c31761b402592f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e5f31cd-d37c-4d13-a095-4aac168372be", "node_type": "1", "metadata": {}, "hash": "ba23ae572b5ed9192aec19e27b22d388fe471d09bed5450e7312909ced7ada8a", "class_name": "RelatedNodeInfo"}}, "text": "change needs to be done for both. The improvement stems from the fact that when a particular change must be implemented quite differently due to their differing code bases, there is no tangled mess problem - instead, it is just more effort to do the change twice in different ways, without causing either code base to become any harder to read or modify. In some cases, a data type that has its own logic for persistence and retrieval/display might also be contained inside another data type for another use case. When contained, there is no reason to believe in the face of random changes that it will necessarily always require the same validations, persistence, and display logic as when it is used as a top-level object. As such, all the logic for the contained object should be a copy of the top-level code, so the two use cases can be as different as they need to be. Conclusion Imperative programming combined with (DO)RY encourages making separate silos for each data type - separate queries, separate DB reads/writes, separate REST endpoints, and separate HTML generation. This separation expresses an important truth I alluded to earlier about your data - every top-level data type is completely unrelated to any other data type, it is a thing unto itself. Any correlation or similarity in two separate data types should be viewed as both accidental and temporal: in other words, they just so happen to be similar at the moment - there is no reason to believe their similarity will continue in the face of random unknowable future changes. Separating all your top-level data types with their own imperative code and using (DO)RY - copying code as necessary to maintain the separation - is the key to managing code that has to be dynamic in response to frequent unknowable future changes. The resulting code will be larger as a result of copying logic, but more maintainable. In other words, everything in programming is a trade-off, and the combination of imperative and (DO)RY is the best trade-off that results in more total code, but more maintainable code. By Greg Hall Twenty Things Every Java Software Architect Should Know As the software development landscape continues to evolve at a rapid pace, Java stands out as a foundational language that drives a multitude of applications on a global scale. In 2024, the role of a Java software architect has assumed unprecedented significance. Software architects must not only possess a profound comprehension of Java and its ecosystem but also remain current with the latest trends, technologies, and best practices in order to construct resilient, scalable, and efficient applications. This article meticulously examines 20 essential areas that every Java software architect should aim to master in 2024. Encompassing diverse topics such as microservices, cloud-native applications, reactive programming, and blockchain technology, these areas encapsulate the requisite skills and knowledge crucial for navigating the ever-changing realm of software architecture. Furthermore, each section provides insights into related technologies and recommends pertinent books to furnish architects with a comprehensive roadmap for remaining at the forefront of their field. The Premium Java Programming Certification Bundle* *Affiliate link. See Terms of Use. 1. Microservices Architecture Adopting a microservices architecture entails reimagining applications as a collection of smaller, independently deployable services that are loosely coupled. This approach allows for individual development and scaling of services. Proficiency in this architectural style is essential for contemporary Java architects, as it facilitates the effective design and maintenance of robust, scalable, and resilient systems. Related Technologies Spring Boot A robust framework for creating stand-alone, production-grade Spring applications that you can \"just run.\" Spring Cloud: Provides tools for developers to quickly build some of the common patterns in distributed systems (e.g., configuration management, service discovery, circuit breakers).Spring Data: Simplifies data access, making it easier to work with various databases and storage technologies.Spring Security: Comprehensive security services for Java applications, including authentication, authorization, and other security features. Quarkus Designed for Kubernetes and optimized for GraalVM and OpenJDK, Quarkus provides fast startup times and a low memory footprint. Quarkus Extensions: Enhancements and integrations with various technologies like Hibernate, RESTEasy, and Kafka.Panache: Simplifies the development of data access layers, making it easier to work with databases.Qute: A templating engine for Quarkus, enabling dynamic content rendering. OpenShift A Kubernetes-based platform that helps manage and deploy containerized applications, simplifying the orchestration of microservices. OpenShift Service Mesh: Integrates Istio, Jaeger, and Kiali to manage microservices traffic flow, observability, and tracing.OpenShift Pipelines: Based on Tekton, it provides a Kubernetes-native CI/CD framework to automate deployments.OpenShift Serverless: Based on Knative, it offers a serverless experience to build and deploy applications on demand.", "start_char_idx": 0, "end_char_idx": 5250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e5f31cd-d37c-4d13-a095-4aac168372be": {"__data__": {"id_": "3e5f31cd-d37c-4d13-a095-4aac168372be", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_17.txt", "file_name": "dzone.com_24_17.txt", "file_type": "text/plain", "file_size": 5481, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9b8401e-d2d0-45ed-9fef-9946f385fa08", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_17.txt", "file_name": "dzone.com_24_17.txt", "file_type": "text/plain", "file_size": 5481, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "074b4e3508c4862b9bd77c3872129bdf5efec56537dec1b3b85c717348bd84f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9dc3faf-34b0-48a1-ad38-d65f4d74035d", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_17.txt", "file_name": "dzone.com_24_17.txt", "file_type": "text/plain", "file_size": 5481, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "da1d60f005187b2c9f04a2ad0550c705b8a6e316ced2e74c7c8405e86cabc1c4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8675365-3f1e-4e38-9029-83cf172f06f2", "node_type": "1", "metadata": {}, "hash": "c527d44b762687704d14e3c0c6f2803419e2f229091bf33b4a9b5a145b983725", "class_name": "RelatedNodeInfo"}}, "text": "Quarkus Designed for Kubernetes and optimized for GraalVM and OpenJDK, Quarkus provides fast startup times and a low memory footprint. Quarkus Extensions: Enhancements and integrations with various technologies like Hibernate, RESTEasy, and Kafka.Panache: Simplifies the development of data access layers, making it easier to work with databases.Qute: A templating engine for Quarkus, enabling dynamic content rendering. OpenShift A Kubernetes-based platform that helps manage and deploy containerized applications, simplifying the orchestration of microservices. OpenShift Service Mesh: Integrates Istio, Jaeger, and Kiali to manage microservices traffic flow, observability, and tracing.OpenShift Pipelines: Based on Tekton, it provides a Kubernetes-native CI/CD framework to automate deployments.OpenShift Serverless: Based on Knative, it offers a serverless experience to build and deploy applications on demand. Recommended Books \"Building Microservices: Designing Fine-Grained Systems\" by Sam Newman\"Spring Microservices in Action\" by John Carnell\"Quarkus Cookbook: Kubernetes-Native Java\" by Alex Soto Bueno and Jason Porter 2. Cloud-Native", "start_char_idx": 4334, "end_char_idx": 5481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8675365-3f1e-4e38-9029-83cf172f06f2": {"__data__": {"id_": "d8675365-3f1e-4e38-9029-83cf172f06f2", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_18.txt", "file_name": "dzone.com_24_18.txt", "file_type": "text/plain", "file_size": 6212, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f663381-6d8b-48ce-b876-2929bfa69a47", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_18.txt", "file_name": "dzone.com_24_18.txt", "file_type": "text/plain", "file_size": 6212, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0b46596d2ed1ecf8a3617209a956a840dbfeb229a2357d00a3834b115832da5c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e5f31cd-d37c-4d13-a095-4aac168372be", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_17.txt", "file_name": "dzone.com_24_17.txt", "file_type": "text/plain", "file_size": 5481, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d7f5b21c21064b2174860bdf75ab271561d55fec5375f5fbc5a3d74fe9d7a7ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0d3af4a-8121-4d20-824c-df5092245519", "node_type": "1", "metadata": {}, "hash": "0971577fea1b3834dfda6dc2c4065cc33b6d96d268805fa1341881aab064620e", "class_name": "RelatedNodeInfo"}}, "text": "Applications Developing robust applications that harness the full potential of cloud computing is imperative for businesses and organizations. This entails strategically leveraging cloud platforms and services to achieve seamless scalability, heightened reliability, and optimal operational efficiency. By effectively leveraging cloud computing, businesses can streamline their operations, enhance their agility, and facilitate cost-effective resource utilization. Related Technologies AWS: Amazon Web Services offers a comprehensive suite of cloud services.Google Cloud Platform: Provides a range of computing, storage, and application services.Microsoft Azure: Another leading cloud platform with extensive tools for building and managing applications. Recommended Books \"Cloud Native Java: Designing Resilient Systems with Spring Boot, Spring Cloud, and Cloud Foundry\" by Josh Long and Kenny Bastani 3. Containerization and Orchestration Mastering containerization and orchestration technologies ensures applications run smoothly across different environments, enhancing scalability and reliability. Related Technologies Docker: Enables you to package and run applications in containers.Kubernetes: An open-source system for automating deployment, scaling, and management of containerized applications.OpenShift: Extends Kubernetes with DevOps tools to facilitate container orchestration and management. Recommended Books \"Docker: Up & Running\" by Karl Matthias and Sean P. Kane\"Kubernetes Up & Running\" by Kelsey Hightower, Brendan Burns, and Joe Beda 4. Reactive Programming Reactive programming allows for handling asynchronous data streams effectively, which is crucial for modern web applications. Related Technologies Project Reactor: A foundational library for building reactive applications on the JVM.Akka: Toolkit and runtime for building highly concurrent, distributed, and resilient message-driven applications.RxJava: A library for composing asynchronous and event-based programs using observable sequences. Recommended Books \"Reactive Programming with RxJava\" by Tomasz Nurkiewicz and Ben Christensen\"Reactive Spring\" by Josh Long 5. Serverless Computing Serverless architecture enables you to build applications without managing infrastructure, improving agility and reducing operational overhead. Related Technologies AWS Lambda: A service that lets you run code without provisioning or managing servers.Azure Functions: A solution for easily running small pieces of code or \"functions\" in the cloud.Google Cloud Functions: Lightweight, event-based asynchronous compute solutions. Recommended Books \"Serverless Architectures on AWS\" by Peter Sbarski\"Building Serverless Applications with Python\" by Mohamed Labouardy 6. Event-Driven Architecture Designing systems that react to events in real time enhances scalability and responsiveness, making them ideal for modern applications. Related Technologies Apache Kafka: A distributed event streaming platform capable of handling trillions of events a day.RabbitMQ: A reliable messaging system that supports multiple messaging protocols.AWS SNS/SQS: Simple Notification Service (SNS) and Simple Queue Service (SQS) for scalable message queueing. Recommended Books \"Designing Event-Driven Systems\" by Ben Stopford\"Kafka: The Definitive Guide\" by Neha Narkhede, Gwen Shapira, and Todd Palino 7. Security Best Practices Implementing robust security measures to protect applications from threats and vulnerabilities is paramount for any architect. Related Technologies Spring Security: A powerful and customizable authentication and access control framework.OWASP Tools: Various tools and resources from the Open Web Application Security Project.JWT (JSON Web Tokens): A compact, URL-safe means of representing claims to be transferred between two parties. Recommended Books \"Spring Security in Action\" by Laurentiu Spilca\"Java Security: Writing Secure Code\" by Scott Oaks 8. DevOps and CI/CD Integrating development and operations through DevOps practices and implementing CI/CD pipelines is crucial for efficient and reliable software delivery. Related Technologies Jenkins: An open-source automation server that supports building, deploying, and automating projects.GitLab CI/CD: Provides robust CI/CD pipeline support integrated with GitLab.Travis CI: A continuous integration service used to build and test projects hosted on GitHub. Recommended Books \"The DevOps Handbook\" by Gene Kim, Patrick Debois, John Willis, and Jez Humble\"Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation\" by Jez Humble and David Farley 9. APIs and Integration Designing robust APIs for service integration ensures seamless communication between different systems, essential for microservices and hybrid cloud environments. Related Technologies REST: An architectural style for designing networked applications.GraphQL: A query language for your API, and a runtime for executing those queries by using a type system you define for your data.OpenAPI/Swagger: Tools for designing, building, documenting, and consuming RESTful web services. Recommended Books \"Designing Web APIs\" by Brenda Jin, Saurabh Sahni, and Amir Shevat\"GraphQL: A Practical Guide with Examples\" by Marc-Andre Giroux 10.", "start_char_idx": 0, "end_char_idx": 5276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0d3af4a-8121-4d20-824c-df5092245519": {"__data__": {"id_": "f0d3af4a-8121-4d20-824c-df5092245519", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_18.txt", "file_name": "dzone.com_24_18.txt", "file_type": "text/plain", "file_size": 6212, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f663381-6d8b-48ce-b876-2929bfa69a47", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_18.txt", "file_name": "dzone.com_24_18.txt", "file_type": "text/plain", "file_size": 6212, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0b46596d2ed1ecf8a3617209a956a840dbfeb229a2357d00a3834b115832da5c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8675365-3f1e-4e38-9029-83cf172f06f2", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_18.txt", "file_name": "dzone.com_24_18.txt", "file_type": "text/plain", "file_size": 6212, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4a1af415fd84c9b64a65f4d8047183408773b99647d6a4c93d943f6a5f33832e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "581fb0f2-10b2-4b8a-846e-e0c2b13b44e5", "node_type": "1", "metadata": {}, "hash": "6ee253ea97ebcaad155f1a242763d1b3660ee6ea5df9e9ac9f494a3c7fe50abc", "class_name": "RelatedNodeInfo"}}, "text": "Recommended Books \"The DevOps Handbook\" by Gene Kim, Patrick Debois, John Willis, and Jez Humble\"Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation\" by Jez Humble and David Farley 9. APIs and Integration Designing robust APIs for service integration ensures seamless communication between different systems, essential for microservices and hybrid cloud environments. Related Technologies REST: An architectural style for designing networked applications.GraphQL: A query language for your API, and a runtime for executing those queries by using a type system you define for your data.OpenAPI/Swagger: Tools for designing, building, documenting, and consuming RESTful web services. Recommended Books \"Designing Web APIs\" by Brenda Jin, Saurabh Sahni, and Amir Shevat\"GraphQL: A Practical Guide with Examples\" by Marc-Andre Giroux 10. Data Management and NoSQL Databases Handling large volumes of data effectively and understanding NoSQL databases is critical for performance and scalability. Related Technologies MongoDB: A document database with the scalability and flexibility that you want with the querying and indexing that you need.Cassandra: A distributed NoSQL database management system designed to handle large amounts of data across many commodity servers.Redis: An in-memory data structure store, used as a distributed, in-memory key\u2013value database, cache, and message broker. Recommended Books \"NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence\" by Pramod J. Sadalage and Martin Fowler\"MongoDB: The Definitive Guide\" by Kristina Chodorow 11. Distributed Systems Designing and managing distributed systems ensures high availability and fault tolerance, which are crucial for large-scale applications. Related Technologies Apache", "start_char_idx": 4400, "end_char_idx": 6210, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "581fb0f2-10b2-4b8a-846e-e0c2b13b44e5": {"__data__": {"id_": "581fb0f2-10b2-4b8a-846e-e0c2b13b44e5", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_19.txt", "file_name": "dzone.com_24_19.txt", "file_type": "text/plain", "file_size": 6267, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c9155214-a95c-40e9-b545-def6f18f052f", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_19.txt", "file_name": "dzone.com_24_19.txt", "file_type": "text/plain", "file_size": 6267, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0a0344a981ddeab1aaeefa6593b93b6e90c48da67106dc6dba24b63d2afe3d15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0d3af4a-8121-4d20-824c-df5092245519", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_18.txt", "file_name": "dzone.com_24_18.txt", "file_type": "text/plain", "file_size": 6212, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "33114c14d7cc20145da23f27f42eebd2734c83f7c5cde4b876d040f17cb5cc9f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb538e94-94d1-49d7-b438-39a0e2f18c8f", "node_type": "1", "metadata": {}, "hash": "4af135185110ffe3fed482c7bfcdfed844ddafd9cfe93ba3eab629d1bb3e8bda", "class_name": "RelatedNodeInfo"}}, "text": "Zookeeper: A centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services.Consul: Provides service discovery, configuration, and segmentation functionality.Netflix Eureka: A REST-based service that is primarily used in the AWS cloud for locating services for the purpose of load balancing and failover of middle-tier servers. Recommended Books \"Designing Data-Intensive Applications\" by Martin Kleppmann\"Distributed Systems: Principles and Paradigms\" by Andrew S. Tanenbaum and Maarten Van Steen 12. Concurrency and Parallelism Efficiently managing concurrency and parallelism improves application performance and responsiveness, making it a critical skill for architects. Related Technologies Java Concurrency Framework: Provides high-level concurrency constructs.Fork/Join Framework: Simplifies the process of developing parallel applications.Reactive Streams: An initiative to provide a standard for asynchronous stream processing with non-blocking backpressure. Recommended Books \"Java Concurrency in Practice\" by Brian Goetz\"Concurrency in Practice with Java\" by Heinz Kabutz 13. Performance Tuning and Optimization Regularly tuning and optimizing Java applications ensures they run efficiently under different conditions and scales. Related Technologies Java Mission Control: A suite of tools for monitoring, managing, and troubleshooting Java applications.VisualVM: A visual tool integrating several command-line JDK tools and lightweight profiling capabilities.JProfiler: A powerful profiler for Java that helps troubleshoot performance bottlenecks. Recommended Books \"Java Performance: The Definitive Guide\" by Scott Oaks\"Optimizing Java\" by Benjamin J. Evans, Jim Gough, and Chris Newland 14. Understanding Java Ecosystem and Updates Keeping up with the latest Java updates and the ecosystem ensures using the most efficient and secure versions. Related Technologies JDK 17+: The latest long-term support (LTS) version of Java.OpenJDK: The free and open-source implementation of the Java Platform, Standard Edition. Recommended Books \"Modern Java in Action\" by Raoul-Gabriel Urma, Mario Fusco, and Alan Mycroft\"Effective Java\" by Joshua Bloch 15. Architectural Patterns and Best Practices Applying proven architectural patterns and best practices leads to more robust and maintainable applications. Related Technologies MVC (Model-View-Controller): An architectural pattern commonly used for developing user interfaces.CQRS (Command Query Responsibility Segregation): A pattern that separates read and update operations for a data store.Event Sourcing: Stores the state of a business entity as a sequence of state-changing events. Recommended Books \"Patterns of Enterprise Application Architecture\" by Martin Fowler\"Domain-Driven Design: Tackling Complexity in the Heart of Software\" by Eric Evans 16. Testing and Test-Driven Development (TDD) Implementing thorough testing practices and embracing TDD enhances code quality and reliability. Related Technologies JUnit: A simple framework to write repeatable tests. It is an instance of the xUnit architecture for unit testing frameworks.Mockito: A mocking framework for unit tests in Java.Selenium: A portable framework for testing web applications. Recommended Books \"Test-Driven Development: By Example\" by Kent Beck\"JUnit in Action\" by Petar Tahchiev, Felipe Leme, Vincent Massol, and Gary Gregory 17. Graph Databases Understanding and using graph databases enables efficient handling of highly connected data, which is increasingly important in modern applications. Related Technologies Neo4j: A highly scalable native graph database, purpose-built to leverage data relationships.Amazon Neptune: A fully managed graph database service.ArangoDB: A native multi-model database system. Recommended Books \"Graph Databases\" by Ian Robinson, Jim Webber, and Emil Eifrem\"Learning Neo4j\" by Rik Van Bruggen 18. Big Data and Analytics Leveraging big data technologies and analytics tools is essential for extracting valuable insights from large datasets. Related Technologies Apache Hadoop: An open-source framework that allows for the distributed processing of large data sets across clusters of computers.Apache Spark: A unified analytics engine for large-scale data processing.Elasticsearch: A distributed, RESTful search and analytics engine. Recommended Books \"Big Data: Principles and Best Practices of Scalable Real-Time Data Systems\" by Nathan Marz and James Warren\"Spark: The Definitive Guide\" by Bill Chambers and Matei Zaharia 19. Artificial Intelligence and Machine Learning Integrating AI and ML capabilities into applications can offer competitive advantages and new functionalities. Related Technologies TensorFlow: An open-source library for machine learning.Deeplearning4j: A deep learning library for the JVM.Weka: A collection of machine learning algorithms for data mining tasks. Recommended Books \"Artificial Intelligence: A Guide for Thinking Humans\" by Melanie Mitchell\"Deep Learning with Java\" by Yusuke Sugomori 20. Blockchain Technology Understanding blockchain fundamentals and its potential applications can open new possibilities for secure, decentralized applications.", "start_char_idx": 0, "end_char_idx": 5231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb538e94-94d1-49d7-b438-39a0e2f18c8f": {"__data__": {"id_": "fb538e94-94d1-49d7-b438-39a0e2f18c8f", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_19.txt", "file_name": "dzone.com_24_19.txt", "file_type": "text/plain", "file_size": 6267, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c9155214-a95c-40e9-b545-def6f18f052f", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_19.txt", "file_name": "dzone.com_24_19.txt", "file_type": "text/plain", "file_size": 6267, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0a0344a981ddeab1aaeefa6593b93b6e90c48da67106dc6dba24b63d2afe3d15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "581fb0f2-10b2-4b8a-846e-e0c2b13b44e5", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_19.txt", "file_name": "dzone.com_24_19.txt", "file_type": "text/plain", "file_size": 6267, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f993cf326381870771d60e01c7191748c60c5172b4cb3fcc75048da9a9734925", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e585b66d-7776-4a86-99d0-9811d614dbed", "node_type": "1", "metadata": {}, "hash": "f642667d714e11717745dc22b49fb5d15dc93b7230c5c700d9f8abb58e82b7c5", "class_name": "RelatedNodeInfo"}}, "text": "Recommended Books \"Big Data: Principles and Best Practices of Scalable Real-Time Data Systems\" by Nathan Marz and James Warren\"Spark: The Definitive Guide\" by Bill Chambers and Matei Zaharia 19. Artificial Intelligence and Machine Learning Integrating AI and ML capabilities into applications can offer competitive advantages and new functionalities. Related Technologies TensorFlow: An open-source library for machine learning.Deeplearning4j: A deep learning library for the JVM.Weka: A collection of machine learning algorithms for data mining tasks. Recommended Books \"Artificial Intelligence: A Guide for Thinking Humans\" by Melanie Mitchell\"Deep Learning with Java\" by Yusuke Sugomori 20. Blockchain Technology Understanding blockchain fundamentals and its potential applications can open new possibilities for secure, decentralized applications. Related Technologies Hyperledger Fabric: A permissioned blockchain infrastructure.Ethereum: A decentralized platform that runs smart contracts.Corda: An open-source blockchain platform designed for business. Recommended Books \"Blockchain Basics: A Non-Technical Introduction in 25 Steps\" by Daniel Drescher\"Mastering Blockchain\" by Imran Bashir Conclusion The role of a Java software architect is becoming increasingly vital as the software development landscape continues to undergo rapid evolution. In this article, we emphasize the critical knowledge and skills that are indispensable for successfully navigating the intricacies of modern application development. Java architects must not only be proficient in mastering microservices architecture, cloud-native applications, containerization, reactive programming, serverless computing, event-driven architecture, and robust security practices, but they must also understand the interplay between these concepts to ensure that their applications are highly resilient, scalable, and", "start_char_idx": 4380, "end_char_idx": 6267, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e585b66d-7776-4a86-99d0-9811d614dbed": {"__data__": {"id_": "e585b66d-7776-4a86-99d0-9811d614dbed", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_2.txt", "file_name": "dzone.com_24_2.txt", "file_type": "text/plain", "file_size": 5452, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "56385e2f-29c9-4523-b37a-126b07425f30", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_2.txt", "file_name": "dzone.com_24_2.txt", "file_type": "text/plain", "file_size": 5452, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cd13653ebdcdf07b99cfa5dfbb78aeb1310d3e292a0416672ac8b2a1f53b2f3a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb538e94-94d1-49d7-b438-39a0e2f18c8f", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_19.txt", "file_name": "dzone.com_24_19.txt", "file_type": "text/plain", "file_size": 6267, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "33c40b250d7fb164a4f7b75bc716bd47898731f2eb5e337063d4a9308a7d1eb5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "711e76e4-cb5f-4c79-ba5d-032e461e9c6b", "node_type": "1", "metadata": {}, "hash": "dc9ef9ce41305779e26e32015fd22c545742ba21bb065e3e7d7260b6042617cf", "class_name": "RelatedNodeInfo"}}, "text": "a $1.1 billion valuation. In the open-source ecosystem, Cloud Native Buildpacks, an incubating CNCF project, and their vibrant communities deliver a comparable value proposition by automating the creation of optimized and secure container images. In this article, I'll explore Buildpack's core concepts, comparing them with Docker to illustrate their functionality and highlight how they provide a community-driven alternative to the value Chainguard brings to container security. What Are Buildpacks? Buildpacks automate the process of preparing your application for deployment, detecting dependencies, building runtime artifacts, and packaging everything into a container image. They abstract the manual effort to build images efficiently. In other words, if Docker allows you to define how a container is built through a Dockerfile explicitly, Buildpacks operate at a higher level of abstraction. They offer opinionated defaults that help developers ship production-ready images quickly. Comparing a Few Concepts Buildpacks do containerization differently and more efficiently. For those unfamiliar with the technology, let's review a few key Docker concepts and see how they translate to the Buildpacks world. Entrypoint and Start Commands In a Dockerfile, the ENTRYPOINT or CMD specifies the command that runs when the container starts. For example: Dockerfile CMD [\"java\", \"-jar\", \"app.jar\"] Buildpacks abstract this step; you have nothing to do. They automatically detect the appropriate start command for your application based on the runtime and build process. For example, when using a Java Buildpack, the resulting image includes logic to start your application with java -jar app.jar or a similar command. You don't need to configure it explicitly; Buildpacks \"just know\" how to start applications based on best practices. Writing a Dockerfile The concept of not doing anything goes even further; you don't even need to write the equivalent of a Dockerfile. Buildpacks will take care of everything that is needed to containerize your application into an OSI image. Multi-Stage Builds That abstraction is not coming at the cost of optimization. For example, multi-stage builds are a common technique in Docker to create lean images by separating the built environment from the runtime environment. For instance, you might compile a Java binary in one stage and copy it to a minimal base image in the final stage: Dockerfile # Build stage FROM maven:3.8-openjdk-11 as builder WORKDIR /app COPY . . RUN mvn package # Runtime stage FROM openjdk:11 COPY --from=builder /app/target/app.jar /app.jar CMD [\"java\", \"-jar\", \"/app.jar\"] Buildpacks handle the equivalent of multi-stage builds behind the scenes. During the build process, they: Detect your application's dependenciesBuild artifacts (e.g., compiled binaries for Java)Create a final image with only the necessary runtime components This is again done automatically, requiring no explicit configuration. About Security Let's jump into the security part and explore a few ways that the Buildpacks ecosystem can be seen as an OSS alternative to Chainguard. Non-Root Containers Running containers as non-root users is a best practice to improve security. In Dockerfiles, this typically involves creating a new user and configuring permissions. Buildpacks enforce non-root execution by default. The resulting container image is configured to run as an unprivileged user, with no extra effort required from the developer. CVEs Security is a significant focus for open-source Buildpack communities like Paketo Buildpacks, and Google Cloud. What these communities offer could be seen as the open-source alternative to Chainguard. By default, Buildpacks use pre-configured, community-maintained base images that are regularly updated to eliminate known vulnerabilities (CVEs). For example, Paketo Buildpacks stacks (build image and run image) are rebuilt whenever a package is patched to fix a CVE, and every stack is rebuilt weekly to ensure packages without CVEs are also up to date. The community releases stack updates that fix high and critical CVEs within 48 hours of the patch release and two weeks for low and medium CVEs. SBOM Buildpacks can provide an SBOM to describe the dependencies that they provide. It supports three ways to report SBOM data: CycloneDX, SPDX, or Syft. Paketo Buildpacks also uses SBOM generation to provide a detailed record of all dependencies in the images they provide, making it easier to track and audit components for vulnerabilities. A Solid OSS Chainguard Alternative Buildpacks offer a simple, secure, and standardized way to create production-ready container images, making them a potential cornerstone of platform engineering strategy. By automating tasks like dependency management, non-root execution, and security updates, Buildpacks provide a community-driven alternative to commercial security solutions like Chainguard.", "start_char_idx": 0, "end_char_idx": 4924, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "711e76e4-cb5f-4c79-ba5d-032e461e9c6b": {"__data__": {"id_": "711e76e4-cb5f-4c79-ba5d-032e461e9c6b", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_2.txt", "file_name": "dzone.com_24_2.txt", "file_type": "text/plain", "file_size": 5452, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "56385e2f-29c9-4523-b37a-126b07425f30", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_2.txt", "file_name": "dzone.com_24_2.txt", "file_type": "text/plain", "file_size": 5452, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cd13653ebdcdf07b99cfa5dfbb78aeb1310d3e292a0416672ac8b2a1f53b2f3a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e585b66d-7776-4a86-99d0-9811d614dbed", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_2.txt", "file_name": "dzone.com_24_2.txt", "file_type": "text/plain", "file_size": 5452, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "818ac462c94a921e73632901fb6453a0749c2d44f602eea5d74e98fd184fc4d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d90de296-4d02-4d54-be5b-3ca9baf673c8", "node_type": "1", "metadata": {}, "hash": "b28557f649173450c4defe613c39a36682f0415b56a4d68985272ac58c1327d1", "class_name": "RelatedNodeInfo"}}, "text": "The community releases stack updates that fix high and critical CVEs within 48 hours of the patch release and two weeks for low and medium CVEs. SBOM Buildpacks can provide an SBOM to describe the dependencies that they provide. It supports three ways to report SBOM data: CycloneDX, SPDX, or Syft. Paketo Buildpacks also uses SBOM generation to provide a detailed record of all dependencies in the images they provide, making it easier to track and audit components for vulnerabilities. A Solid OSS Chainguard Alternative Buildpacks offer a simple, secure, and standardized way to create production-ready container images, making them a potential cornerstone of platform engineering strategy. By automating tasks like dependency management, non-root execution, and security updates, Buildpacks provide a community-driven alternative to commercial security solutions like Chainguard. For teams looking to streamline workflows and enhance container security without the complexity of Dockerfiles and the cost and limitations of Chainguard, Buildpacks can be a solid starting point. More How to Edit a PowerPoint PPTX Document in Java By Brian O'Neill CORE Optimizing Java Applications for AWS Lambda By Vigneshwaran Manivelmurugan Efficient Asynchronous Processing Using CyclicBarrier and CompletableFuture in Java By Sulakshana Singh Virtual Threads: A Game-Changer for Concurrency Despite being nearly 30 years", "start_char_idx": 4041, "end_char_idx": 5452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d90de296-4d02-4d54-be5b-3ca9baf673c8": {"__data__": {"id_": "d90de296-4d02-4d54-be5b-3ca9baf673c8", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_20.txt", "file_name": "dzone.com_24_20.txt", "file_type": "text/plain", "file_size": 4963, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d9f63ce-b3fe-4143-a123-541a4ae4ee41", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_20.txt", "file_name": "dzone.com_24_20.txt", "file_type": "text/plain", "file_size": 4963, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "dcbe8fe243814b972ac9dc27ee8089bb67f69f87e53bfbe9913b3ae298453fbb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "711e76e4-cb5f-4c79-ba5d-032e461e9c6b", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_2.txt", "file_name": "dzone.com_24_2.txt", "file_type": "text/plain", "file_size": 5452, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ac0978f7b1606b7a4700c9245aa290b254bd7dd2ada9ffd0711e12bab3b1728d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f933de6-294c-4122-9479-0f39c095b363", "node_type": "1", "metadata": {}, "hash": "fe0b813be9c5db81e349a09232acf20456c20512af14365dc982437c24d950cc", "class_name": "RelatedNodeInfo"}}, "text": "secure in today's dynamic environment. Remaining abreast of the latest technologies and best practices, and engaging in continuous learning through recommended books, is essential for architects to consistently design and construct high-performance applications that can meet the demands of today's digital world. By embracing these fundamental principles, architects not only elevate the quality of their software but also position themselves to steer innovation and lead their organizations into the future. By Reza Ganji CORE Top Java Experts Shai Almog OSS Hacker, Developer Advocate and Entrepreneur, Codename One Software developer with ~30 years of professional experience in a multitude of platforms/languages. JavaOne rockstar/highly rated speaker, author, blogger and open source hacker. Shai has extensive experience in the full stack of backend, desktop and mobile. This includes going all the way into the internals of VM implementation, debuggers etc. Shai started working with Java in 96 (the first public beta) and later on moved to VM porting/authoring/internals and development tools. Shai is the co-founder of Codename One, an Open Source project allowing Java developers to build native applications for all mobile platforms in Java. He's the coauthor of the open source LWUIT project from Sun Microsystems and has developed/worked on countless other projects both open source and closed source. Shai is also a developer advocate at Lightrun. Ram Lakshmanan yCrash - Chief Architect Want to become Java Performance Expert? Attend my master class: https://ycrash.io/java-performance-training The Latest Java Topics Chat With Your Knowledge Base: A Hands-On Java and LangChain4j Guide In this hands-on guide, you will learn to build a Java RAG chat application with LangChain4j to query your custom knowledge base. May 22, 2025 by A N M Bazlur Rahman CORE \u00b7 2,807 Views \u00b7 5 Likes How to Merge HTML Documents in Java Merging HTML content in Java is more challenging than it sounds. This article covers some major difficulties of merging HTML and suggests a few API solutions. May 21, 2025 by Brian O'Neill CORE \u00b7 2,284 Views \u00b7 1 Like Enforcing Architecture With ArchUnit in Java In this article, we will discuss implementing architectural rules in code using ArchUnit, emphasizing its effectiveness over traditional documentation. May 21, 2025 by Gunter Rotsaert CORE \u00b7 3,244 Views \u00b7 2 Likes How To Introduce a New API Quickly Using Quarkus and ChatGPT Stepping outside of my comfort zone, let\u2019s see how quickly we can introduce an API-First-driven RESTful by leveraging ChatGPT, Quarkus, and Heroku. May 21, 2025 by John Vester CORE \u00b7 8,995 Views \u00b7 2 Likes The Future of Java and AI: Coding in 2025 Explore how Java developers are leveraging AI and modern frameworks like Quarkus to build cutting-edge applications in 2025. May 21, 2025 by Daniel Oh CORE \u00b7 2,472 Views \u00b7 1 Like Tired of Spring Overhead? Try Dropwizard for Your Next Java Microservice You'll learn how to set up your first Dropwizard project, create a RESTful API, and run it with an embedded Jetty server \u2014 all using minimal boilerplate. May 20, 2025 by Mohit Menghnani \u00b7 3,575 Views \u00b7 5 Likes Using Python Libraries in Java This article discusses how Python libraries can be integrated into Java by presenting real-world examples and Jython samples. May 16, 2025 by Constantin Kwiatkowski \u00b7 5,131 Views \u00b7 6 Likes Designing a Java Connector for Software Integrations A Java connector unites different systems by allowing them to send information effectively while making crucial data freely available through interoperable interfaces. May 15, 2025 by Anant Wairagade \u00b7 5,479 Views \u00b7 1 Like Memory Leak Due to Time-Taking finalize() Method All objects in Java implicitly inherit from java.lang.Object. This class contains multiple methods, which can be overridden in the child class. May 15, 2025 by Ram Lakshmanan CORE \u00b7 4,425 Views \u00b7 2 Likes DGS GraphQL and Spring Boot This article explain how to use and implement DGS GraphQL using Spring Boot, and the GraphQL dashboard to make specific REST requests. May 13, 2025 by Milan Karajovic \u00b7 4,647 Views \u00b7 3 Likes How to Convert XLS to XLSX in Java In this article, we discuss the structural differences between legacy Excel XLS format and modern XLSX, and we suggest conversion solutions for Java developers.", "start_char_idx": 0, "end_char_idx": 4342, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f933de6-294c-4122-9479-0f39c095b363": {"__data__": {"id_": "7f933de6-294c-4122-9479-0f39c095b363", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_20.txt", "file_name": "dzone.com_24_20.txt", "file_type": "text/plain", "file_size": 4963, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d9f63ce-b3fe-4143-a123-541a4ae4ee41", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_20.txt", "file_name": "dzone.com_24_20.txt", "file_type": "text/plain", "file_size": 4963, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "dcbe8fe243814b972ac9dc27ee8089bb67f69f87e53bfbe9913b3ae298453fbb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d90de296-4d02-4d54-be5b-3ca9baf673c8", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_20.txt", "file_name": "dzone.com_24_20.txt", "file_type": "text/plain", "file_size": 4963, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "abff8505de42ed1c25b1213fe93f2e11b9f52a4c632e2a0ce1048c3f92fdeaea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d3057d9-c79a-4c03-b508-6cb7d80015cf", "node_type": "1", "metadata": {}, "hash": "da14197a955c67175f27b34d37a3f1af4782440e53dbc5d5df7a8750d70fec13", "class_name": "RelatedNodeInfo"}}, "text": "May 15, 2025 by Anant Wairagade \u00b7 5,479 Views \u00b7 1 Like Memory Leak Due to Time-Taking finalize() Method All objects in Java implicitly inherit from java.lang.Object. This class contains multiple methods, which can be overridden in the child class. May 15, 2025 by Ram Lakshmanan CORE \u00b7 4,425 Views \u00b7 2 Likes DGS GraphQL and Spring Boot This article explain how to use and implement DGS GraphQL using Spring Boot, and the GraphQL dashboard to make specific REST requests. May 13, 2025 by Milan Karajovic \u00b7 4,647 Views \u00b7 3 Likes How to Convert XLS to XLSX in Java In this article, we discuss the structural differences between legacy Excel XLS format and modern XLSX, and we suggest conversion solutions for Java developers. May 9, 2025 by Brian O'Neill CORE \u00b7 4,383 Views \u00b7 1 Like How Clojure Shapes Teams and Products The first four episodes of \"Clojure in product. Would you do it again?\" podcast series reveal how Clojure, despite its smaller talent pool, actually helps companies. May 6, 2025 by Artem Barmin \u00b7 3,551 Views \u00b7 1 Like Recurrent Workflows With Cloud Native Dapr Jobs Workflow scheduling is something we see often. As part of this article, we will look at how Dapr Jobs helps to easily run periodic workloads. May 5, 2025 by Siri Varma Vegiraju CORE \u00b7 23,966 Views \u00b7 1 Like Java Virtual Threads and", "start_char_idx": 3620, "end_char_idx": 4933, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d3057d9-c79a-4c03-b508-6cb7d80015cf": {"__data__": {"id_": "8d3057d9-c79a-4c03-b508-6cb7d80015cf", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_21.txt", "file_name": "dzone.com_24_21.txt", "file_type": "text/plain", "file_size": 2207, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4bd1f52c-2ef5-43bb-9d91-02ef941b92ca", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_21.txt", "file_name": "dzone.com_24_21.txt", "file_type": "text/plain", "file_size": 2207, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9adeb365d4386e5809d668149e43fcb8053eb479fe221229c41fd6b156442e05", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f933de6-294c-4122-9479-0f39c095b363", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_20.txt", "file_name": "dzone.com_24_20.txt", "file_type": "text/plain", "file_size": 4963, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4e3ae520996f46bb8a9e078a9ab5e14fefaf567dc69d7a20885ef8962be2b5a5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9286d345-9b8d-48c3-92c7-25bd4902526c", "node_type": "1", "metadata": {}, "hash": "f40f1d722ee8cd3f5b206b62568c7cbbd3224ef944fb1b846ba7581d0e513c04", "class_name": "RelatedNodeInfo"}}, "text": "Scaling Learn how Java Virtual Threads, introduced in JDK 19 and fully supported in JDK 21, simplify concurrency with lightweight threads and enhance scalability. May 5, 2025 by Hitesh Jodhavat \u00b7 3,540 Views Selenium Pagination Tutorial: How to Handle Page Navigation This tutorial blog explains website pagination and details on how to handle pagination in web automation using Selenium WebDriver with Java. May 1, 2025 by Faisal Khatri CORE \u00b7 4,298 Views \u00b7 1 Like Java\u2019s Next Act: Native Speed for a Cloud-Native World The Graal Stack reinvents Java for the cloud era, combining GraalVM, Micronaut and GraalOS to deliver ultra-fast, lightweight, and serverless-ready applications. April 30, 2025 by Graziano Casto CORE \u00b7 6,510 Views \u00b7 7 Likes Understanding Java Signals Learn the challenges of the Observer pattern in Java and how it can be improved with Signals for clearer, more reusable code, using a Todo app as an example. April 29, 2025 by STEPHEN Maina \u00b7 5,018 Views \u00b7 4 Likes How to Convert Between PDF and TIFF in Java In this article, we highlight both the overlap between PDF and TIFF files in certain industries and suggest a few APIs to convert to and from each format. April 28, 2025 by Brian O'Neill CORE \u00b7 4,457 Views \u00b7 3 Likes Analyzing \u201cjava.lang.OutOfMemoryError: Failed to create a thread\u201d Error Java applications may throw the error \u201cjava.lang.OutOfMemoryError: Failed to create a thread: retVal\u201d when they cannot create a thread. April 25, 2025 by Harish Kumar Murugesan \u00b7 6,418 Views \u00b7 4 Likes Java's Quiet Revolution: Thriving in the Serverless Kubernetes Era Java evolves for serverless Kubernetes with Quarkus and Loom, tackling microservices and events, with cold start hurdles but a strong future in cloud-native apps. April 25, 2025 by Alok Tibrewala \u00b7 7,756 Views \u00b7 2 Likes 1 2 3 4 5 6 7 8 9 10 ... Next ABOUT US About DZone Support and feedback Community research Sitemap ADVERTISE Advertise with DZone CONTRIBUTE ON DZONE Article Submission Guidelines Become a Contributor Core Program Visit the Writers' Zone LEGAL Terms of Service Privacy Policy CONTACT US 3343 Perimeter Hill Drive Suite 100 Nashville, TN 37211 support@dzone.com Let's be friends:", "start_char_idx": 0, "end_char_idx": 2184, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9286d345-9b8d-48c3-92c7-25bd4902526c": {"__data__": {"id_": "9286d345-9b8d-48c3-92c7-25bd4902526c", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_3.txt", "file_name": "dzone.com_24_3.txt", "file_type": "text/plain", "file_size": 5776, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f11cb1b-3782-473e-8d71-4fa7c5874d97", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_3.txt", "file_name": "dzone.com_24_3.txt", "file_type": "text/plain", "file_size": 5776, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9d86c79b47162285cd421d57c9dc6ea6b36585786d3a1f8501af4f9519548e84", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d3057d9-c79a-4c03-b508-6cb7d80015cf", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_21.txt", "file_name": "dzone.com_24_21.txt", "file_type": "text/plain", "file_size": 2207, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9adeb365d4386e5809d668149e43fcb8053eb479fe221229c41fd6b156442e05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c908230-3025-4418-af0a-9029c537633a", "node_type": "1", "metadata": {}, "hash": "35d21da641555bef8de3f08d667642227147431953e56e2ad612624aa8973a36", "class_name": "RelatedNodeInfo"}}, "text": "old, the Java platform remains consistently among the top three most popular programming languages. This enduring popularity can be attributed to the Java Virtual Machine (JVM), which abstracts complexities such as memory management and compiles code during execution, enabling unparalleled internet-level scalability. Java's sustained relevance is also due to the rapid evolution of the language, its libraries, and the JVM. Java Virtual Threads, introduced in Project Loom, which is an initiative by the OpenJDK community, represent a groundbreaking change in how Java handles concurrency. The Complete Java Coder Bundle.* *Affiliate link. See Terms of Use. Exploring the Fabric: Unveiling Threads A thread is the smallest schedulable unit of processing, running concurrently and largely independently of other units. It's an instance of java.lang.Thread. There are two types of threads: platform threads and virtual threads. A platform thread is a thin wrapper around an operating system (OS) thread, running Java code on its underlying OS thread for its entire lifetime. Consequently, the number of platform threads is limited by the number of OS threads. These threads have large stacks and other OS-managed resources, making them suitable for all task types but potentially limited in number. Virtual threads in Java, unlike platform threads, aren't tied to specific OS threads but still execute on them. When a virtual thread encounters a blocking I/O operation, it pauses, allowing the OS thread to handle other tasks. Similar to virtual memory, where a large virtual address space maps to limited RAM, Java's virtual threads map many virtual threads to fewer OS threads. They're ideal for tasks with frequent I/O waits but not for sustained CPU-intensive operations. Hence virtual threads are lightweight threads that simplify the development, maintenance, and debugging of high-throughput concurrent applications. Comparing the Threads of Fabric: Virtual vs. Platform Let\u2019s compare platform threads with virtual threads to understand their differences better. Crafting Virtual Threads Creating Virtual Threads Using Thread Class and Thread.Builder Interface The example below creates and starts a virtual thread that prints a message. It uses the join method to ensure the virtual thread completes before the main thread terminates, allowing you to see the printed message. Java Thread thread = Thread.ofVirtual().start(() -> System.out.println(\"Hello World!! I am Virtual Thread\")); thread.join(); The Thread.Builder interface allows you to create threads with common properties like thread names. The Thread.Builder.OfPlatform subinterface creates platform threads, while Thread.Builder.OfVirtual creates virtual threads. Here\u2019s an example of creating a virtual thread named \"MyVirtualThread\" using the Thread.Builder interface: Java Thread.Builder builder = Thread.ofVirtual().name(\"MyVirtualThread\"); Runnable task = () -> { System.out.println(\"Thread running\"); }; Thread t = builder.start(task); System.out.println(\"Thread name is: \" + t.getName()); t.join(); Creating and Running a Virtual Thread Using Executors.newVirtualThreadPerTaskExecutor() Method Executors allow you to decouple thread management and creation from the rest of your application. In the example below, an ExecutorService is created using the Executors.newVirtualThreadPerTaskExecutor() method. Each time ExecutorService.submit(Runnable) is called, a new virtual thread is created and started to execute the task. This method returns a Future instance. It's important to note that the Future.get() method waits for the task in the thread to finish. As a result, this example prints a message once the virtual thread's task is completed. Java try (ExecutorService myExecutor = Executors.newVirtualThreadPerTaskExecutor()) { Future<?> future = myExecutor.submit(() -> System.out.println(\"Running thread\")); future.get(); System.out.println(\"Task completed\"); // ... Is Your Fabric Lightweight With Virtual Threads? Memory Program 1: Create 10,000 Platform Threads Java public class PlatformThreadMemoryAnalyzer { private static class MyTask implements Runnable { @Override public void run() { try { // Sleep for 10 minutes Thread.sleep(600000); } catch (InterruptedException e) { System.err.println(\"Interrupted Exception!!\"); } } } public static void main(String args[]) throws Exception { // Create 10000 platform threads int i = 0; while (i < 10000) { Thread myThread = new Thread(new MyTask()); myThread.start(); i++; } Thread.sleep(600000); } } Program 2: Create 10,000 Virtual Threads Java public class VirtualThreadMemoryAnalyzer { private static class MyTask implements Runnable { @Override public void run() { try { // Sleep for 10 minutes Thread.sleep(600000); } catch (InterruptedException e) { System.err.println(\"Interrupted Exception!!", "start_char_idx": 0, "end_char_idx": 4835, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c908230-3025-4418-af0a-9029c537633a": {"__data__": {"id_": "1c908230-3025-4418-af0a-9029c537633a", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_3.txt", "file_name": "dzone.com_24_3.txt", "file_type": "text/plain", "file_size": 5776, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f11cb1b-3782-473e-8d71-4fa7c5874d97", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_3.txt", "file_name": "dzone.com_24_3.txt", "file_type": "text/plain", "file_size": 5776, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9d86c79b47162285cd421d57c9dc6ea6b36585786d3a1f8501af4f9519548e84", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9286d345-9b8d-48c3-92c7-25bd4902526c", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_3.txt", "file_name": "dzone.com_24_3.txt", "file_type": "text/plain", "file_size": 5776, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e25702e593feff0b5e2905d508bb9aef42a6433563f6e2d8fe0035c471e2e917", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09e8bb78-5ad9-48a7-a502-9f0551779e5e", "node_type": "1", "metadata": {}, "hash": "d9867998b53be0bf5db6550029e8d47c609641cfcb2ce764a1ead1d8867ee3e4", "class_name": "RelatedNodeInfo"}}, "text": "Memory Program 1: Create 10,000 Platform Threads Java public class PlatformThreadMemoryAnalyzer { private static class MyTask implements Runnable { @Override public void run() { try { // Sleep for 10 minutes Thread.sleep(600000); } catch (InterruptedException e) { System.err.println(\"Interrupted Exception!!\"); } } } public static void main(String args[]) throws Exception { // Create 10000 platform threads int i = 0; while (i < 10000) { Thread myThread = new Thread(new MyTask()); myThread.start(); i++; } Thread.sleep(600000); } } Program 2: Create 10,000 Virtual Threads Java public class VirtualThreadMemoryAnalyzer { private static class MyTask implements Runnable { @Override public void run() { try { // Sleep for 10 minutes Thread.sleep(600000); } catch (InterruptedException e) { System.err.println(\"Interrupted Exception!!\"); } } } public static void main(String args[]) throws Exception { // Create 10000 virtual threads int i = 0; while (i < 10000) { Thread.ofVirtual().start(new Task()); i++; } Thread.sleep(600000); } } Executed both programs simultaneously in a RedHat VM. Configured the thread stack size to be 1mb (by passing JVM argument -Xss1m). This argument indicates that every thread in this application should be allocated 1mb of stack size. Below is the top command output of the threads running. You can notice that the virtual threads only occupies 7.8mb (i.e., 7842364 bytes), whereas the platform threads program occupies 19.2gb. This clearly indicates that virtual threads consume comparatively much less memory. Thread Creation Time Program 1: Launches 10,000 platform threads Java public class PlatformThreadCreationTimeAnalyzer { private static class Task implements Runnable { @Override public void run() { System.out.println(\"Hello! I", "start_char_idx": 4001, "end_char_idx": 5772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09e8bb78-5ad9-48a7-a502-9f0551779e5e": {"__data__": {"id_": "09e8bb78-5ad9-48a7-a502-9f0551779e5e", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_4.txt", "file_name": "dzone.com_24_4.txt", "file_type": "text/plain", "file_size": 5729, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3821836-f01c-45ba-b611-dc0dbfc162a6", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_4.txt", "file_name": "dzone.com_24_4.txt", "file_type": "text/plain", "file_size": 5729, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0f943b53a4ad9522de0771242b12379a8f8d4d8cd256f4b6b7325226b94ba5ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c908230-3025-4418-af0a-9029c537633a", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_3.txt", "file_name": "dzone.com_24_3.txt", "file_type": "text/plain", "file_size": 5776, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5b6687b9042a9a8a837030363d404c07e2eec3daa748fe658387b65149b62198", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba9f1b35-8232-4be9-a904-5282fd9d43e2", "node_type": "1", "metadata": {}, "hash": "ad88f87949516769a6b4bc6a1d753f7c5019ac0ec01ac8b6cc135fa18736a4a1", "class_name": "RelatedNodeInfo"}}, "text": "am a Platform Thread\"); } } public static void main(String[] args) throws Exception { long startTime = System.currentTimeMillis(); for (int counter = 0; counter < 10_000; ++counter) { new Thread(new Task()).start(); } System.out.print(\"Platform Thread Creation Time: \" + (System.currentTimeMillis() - startTime)); } } Program 2: Launches 10,000 virtual threads Java public class VirtualThreadCreationTimeAnalyzer { private static class Task implements Runnable { @Override public void run() { System.out.println(\"Hello! I am a Virtual Thread\"); } } public static void main(String[] args) throws Exception { long startTime = System.currentTimeMillis(); for (int counter = 0; counter < 10_000; ++counter) { Thread.startVirtualThread(new Task()); } System.out.print(\"Virtual Thread Creation Time: \" + (System.currentTimeMillis() - startTime)); } } Below is the table that summarizes the execution time of these two programs: Virtual Threads Platform Threads Execution Time 84 ms 346 ms You can see that the virtual Thread took only 84 ms to complete, whereas the Platform Thread took almost 346 ms. It\u2019s because platform threads are more expensive to create. Because whenever a platform needs to be created an operating system thread needs to be allocated to it. Creating and allocating an operating system thread is not a cheap operation. Reweaving the Fabric: Applications of Virtual Threads Virtual threads can significantly benefit various types of applications, especially those requiring high concurrency and efficient resource management. Here are a few examples: Web servers: Handling a large number of simultaneous HTTP requests can be efficiently managed with virtual threads, reducing the overhead and complexity of traditional thread pools.Microservices: Microservices often involve a lot of I/O operations, such as database queries and network calls. Virtual threads can handle these operations more efficiently.Data processing: Applications that process large amounts of data concurrently can benefit from the scalability of virtual threads, improving throughput and performance. Weaving Success: Avoiding Pitfalls To make the most out of virtual threads, consider the following best practices: Avoid synchronized blocks/methods: When using virtual threads with synchronized blocks, they may not relinquish control of the underlying OS thread when blocked, limiting their benefits. Avoid thread pools for virtual threads: Virtual threads are meant to be used without traditional thread pools. The JVM manages them efficiently, and thread pools can introduce unnecessary complexity.Reduce ThreadLocal usage: Millions of virtual threads with individual ThreadLocal variables can rapidly consume Java heap memory. Wrapping It Up Virtual threads in Java are threads implemented by the Java runtime, not the operating system. Unlike traditional platform threads, virtual threads can scale to a high number \u2014 potentially millions \u2014 within the same Java process. This scalability allows them to efficiently handle server applications designed in a thread-per-request style, improving concurrency, throughput, and hardware utilization. Developers familiar with java.lang.Thread since Java SE 1.0 can easily use virtual threads, as they follow the same programming model. However, practices developed to manage the high cost of platform threads are often counterproductive with virtual threads, requiring developers to adjust their approach. This shift in thread management encourages a new perspective on concurrency. \"Hello, world? Hold on, I\u2019ll put you on hold, spawn a few more threads, and get back to you\" Happy coding. :) By Gautham Krishnan AWS CDK: Infrastructure as Abstract Data Types, Part 2 If you're a Java software developer and you weren't living on the planet Mars during these last years, then you certainly know what Quarkus is. And just in case you don't, you may find it out here. With Quarkus, the field of enterprise cloud-native applications development has never been so comfortable and it never took advantage of such a friendly and professional working environment. The Internet abounds with posts and articles explaining why and how Quarkus is a must for the enterprise, cloud-native software developer. And of course, CDK applications aren't on the sidelines: on the opposite, they can greatly take advantage of the Quarkus features to become smaller, faster, and more aligned with requirements nowadays. CDK With Quarkus Let's look at our first CDK with Quarkus example in the code repository. Go to the Maven module named cdk-quarkus and open the file pom.xml to see how to combine specific CDK and Quarkus dependencies and plugins.", "start_char_idx": 0, "end_char_idx": 4665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba9f1b35-8232-4be9-a904-5282fd9d43e2": {"__data__": {"id_": "ba9f1b35-8232-4be9-a904-5282fd9d43e2", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_4.txt", "file_name": "dzone.com_24_4.txt", "file_type": "text/plain", "file_size": 5729, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3821836-f01c-45ba-b611-dc0dbfc162a6", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_4.txt", "file_name": "dzone.com_24_4.txt", "file_type": "text/plain", "file_size": 5729, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0f943b53a4ad9522de0771242b12379a8f8d4d8cd256f4b6b7325226b94ba5ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09e8bb78-5ad9-48a7-a502-9f0551779e5e", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_4.txt", "file_name": "dzone.com_24_4.txt", "file_type": "text/plain", "file_size": 5729, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1d9aa0e17e226d051551cca49f907e5a5e3cc8e9f540594fd42f5c8273ae7a43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2fd3f7e8-27db-4c5e-b284-1f31c314e904", "node_type": "1", "metadata": {}, "hash": "9f717264cb26c0986df323c880a2bf16e1e14d1d0c1eedc297540673131ae3c3", "class_name": "RelatedNodeInfo"}}, "text": "And just in case you don't, you may find it out here. With Quarkus, the field of enterprise cloud-native applications development has never been so comfortable and it never took advantage of such a friendly and professional working environment. The Internet abounds with posts and articles explaining why and how Quarkus is a must for the enterprise, cloud-native software developer. And of course, CDK applications aren't on the sidelines: on the opposite, they can greatly take advantage of the Quarkus features to become smaller, faster, and more aligned with requirements nowadays. CDK With Quarkus Let's look at our first CDK with Quarkus example in the code repository. Go to the Maven module named cdk-quarkus and open the file pom.xml to see how to combine specific CDK and Quarkus dependencies and plugins. XML ... <dependency> <groupId>io.quarkus.platform</groupId> <artifactId>quarkus-bom</artifactId> <version>${quarkus.platform.version}</version> <type>pom</type> <scope>import</scope> </dependency> <dependency> <groupId>io.quarkiverse.amazonservices</groupId> <artifactId>quarkus-amazon-services-bom</artifactId> <version>${quarkus-amazon-services.version}</version> <type>pom</type> <scope>import</scope> </dependency> ... In addition to the aws-cdk-lib artifact which represents the CDK API library and is inherited from the parent Maven module, the dependencies above are required in order to develop CDK Quarkus applications. The first one, quarkus-bom, is the Bill of Material (BOM) which includes all the other required Quarkus artifacts. Here, we're using Quarkus 3.11 which is the most recent release as of this writing. The second one is the BOM of the Quarkus extensions required to interact with AWS services. Another mandatory requirement of Quarkus applications is the use of the quarkus-maven-plugin which is responsible for running the build", "start_char_idx": 3850, "end_char_idx": 5721, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fd3f7e8-27db-4c5e-b284-1f31c314e904": {"__data__": {"id_": "2fd3f7e8-27db-4c5e-b284-1f31c314e904", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_5.txt", "file_name": "dzone.com_24_5.txt", "file_type": "text/plain", "file_size": 5226, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f4e748a-4ef4-4cbd-9c14-5ddaa8c0be25", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_5.txt", "file_name": "dzone.com_24_5.txt", "file_type": "text/plain", "file_size": 5226, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "efe02f1d4c92a998562f788a58f2ae31def686c43b18c1828626ec387c889d0a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba9f1b35-8232-4be9-a904-5282fd9d43e2", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_4.txt", "file_name": "dzone.com_24_4.txt", "file_type": "text/plain", "file_size": 5729, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3d0b2c8282e21c3578c6f9bd47bbe0494bf57eeea52675d8730a1ade5e06b3f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e46f5efc-bc0a-491e-90b8-3874b77b917f", "node_type": "1", "metadata": {}, "hash": "f244d5335c4ca7568739c03f2d055eeb963dd8f556a486f441c53da54d4c622c", "class_name": "RelatedNodeInfo"}}, "text": "and augmentation process. Let's recall that as opposed to more traditional frameworks like Spring or Jakarta EE where the application's initialization and configuration steps happen at the runtime, Quarkus performs them at build time, in a specific phase called \"augmentation.\" Consequently, Quarkus doesn't rely on Java introspection and reflection, which is one of the reasons it is much faster than Spring, but needs to use the jandex-maven-plugin to build an index helping to discover annotated classes and beans in external modules. This is almost all as far as the Quarkus master POM is concerned. Let's look now at the CDK submodule. But first, we need to recall that, in order to synthesize and deploy a CDK application, we need a specific working environment defined by the cdk.json file. Hence, trying to use CDK commands in a project not having at its root this file will fail. One of the essential functions of the cdk.json file aims to define how to run the CDK application. By default, the cdk init app --language java command, used to scaffold the project's skeleton, will generate the following JSON statement: JSON ... \"app\": \"mvn -e -q compile exec:java\" ... This means that whenever we run a cdk deploy ... command, such that to synthesize a CloudFormation stack and deploy it, the maven-exec-plugin will be used to compile and package the code, before starting the associated main Java class. This is the most general case, the one of a classical Java CDK application. But to run a Quarkus application, we need to observe some special conditions. Quarkus packages an application as either a fast or a thin JAR and, if you aren't familiar with these terms, please don't hesitate to consult the documentation which explains them in detail. What interests us here is the fact that, by default, a fast JAR will be generated, under the name of quarkus-run.jar in the target/quarkus-app directory. Unless we're using Quarkus extensions for AWS, in which case a thin JAR is generated, in target/$finalName-runner.jar file, where $finalName is the value of the same element in pom.xml. In our case, we're using Quarkus extensions for AWS and, hence, a thin JAR will be created by the Maven build process. In order to run a Quarkus thin JAR, we need to manually modify the cdk.json file to replace the line above with the following one: JSON ... \"app\": \"java -jar target/quarkus-app/quarkus-run.jar\" ... The other important point to notice here is that, in general, a Quarkus application is exposing a REST API whose endpoint is started by the command above. But in our case, the one of a CDK application, there isn't any REST API and, hence, this endpoint needs to be specified in a different way. Look at our main class in the cdk-quarkus-api-gatewaymodule. Java @QuarkusMain public class CdkApiGatewayMain { public static void main(String... args) { Quarkus.run(CdkApiGatewayApp.class, args); } } Here, the @QuarkusMain annotation flags the subsequent class as the application's main endpoint and, further, using the io.quarkus.runtime.Quarkus.run() method will execute the mentioned class until it receives a signal like Ctrl-C, or one of the exit methods of the same API is called. So, we just saw how the CDK Quarkus application is started and that, once started, it runs the CdkApiGAtewayApp until it exits. This class is our CDK one which implements the App and that we've already seen in the previous post.", "start_char_idx": 0, "end_char_idx": 3426, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e46f5efc-bc0a-491e-90b8-3874b77b917f": {"__data__": {"id_": "e46f5efc-bc0a-491e-90b8-3874b77b917f", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_5.txt", "file_name": "dzone.com_24_5.txt", "file_type": "text/plain", "file_size": 5226, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f4e748a-4ef4-4cbd-9c14-5ddaa8c0be25", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_5.txt", "file_name": "dzone.com_24_5.txt", "file_type": "text/plain", "file_size": 5226, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "efe02f1d4c92a998562f788a58f2ae31def686c43b18c1828626ec387c889d0a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2fd3f7e8-27db-4c5e-b284-1f31c314e904", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_5.txt", "file_name": "dzone.com_24_5.txt", "file_type": "text/plain", "file_size": 5226, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1d29677fae29764a8307cf412822bb4c56558344b80f9ba4b4d82fb7c58dbc90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e940331-dab0-4d9f-89ef-af0a8996885a", "node_type": "1", "metadata": {}, "hash": "5a83dfac4e49b79d1dee503b096c39d72779980f05dfdda04bf5aa32a7a0431f", "class_name": "RelatedNodeInfo"}}, "text": "Look at our main class in the cdk-quarkus-api-gatewaymodule. Java @QuarkusMain public class CdkApiGatewayMain { public static void main(String... args) { Quarkus.run(CdkApiGatewayApp.class, args); } } Here, the @QuarkusMain annotation flags the subsequent class as the application's main endpoint and, further, using the io.quarkus.runtime.Quarkus.run() method will execute the mentioned class until it receives a signal like Ctrl-C, or one of the exit methods of the same API is called. So, we just saw how the CDK Quarkus application is started and that, once started, it runs the CdkApiGAtewayApp until it exits. This class is our CDK one which implements the App and that we've already seen in the previous post. But this time it looks differently, as you may see: Java @ApplicationScoped public class CdkApiGatewayApp implements QuarkusApplication { private CdkApiGatewayStack cdkApiGatewayStack; private App app; @Inject public CdkApiGatewayApp (App app, CdkApiGatewayStack cdkApiGatewayStack) { this.app = app; this.cdkApiGatewayStack = cdkApiGatewayStack; } @Override public int run(String... args) throws Exception { Tags.of(app).add(\"project\", \"API Gateway with Quarkus\"); Tags.of(app).add(\"environment\", \"development\"); Tags.of(app).add(\"application\", \"CdkApiGatewayApp\"); cdkApiGatewayStack.initStack(); app.synth(); return 0; } } The first thing to notice is that this time, we're using the CDI (Context and Dependency Injection) implemented by Quarkus, also called ArC, which is a subset of the Jakarta CDI 4.1 specifications. It also has another particularity: it's a build-time CDI, as opposed to the runtime Jakarta EE one. The difference lies in the augmentation process, as explained previously. Another important point to observe is that the class implements the io.quarkus.runtime.QuarkusApplication interface which allows it to customize and perform specific actions in the context bootstrapped by the CdkApiGatewayMain class. As a matter of fact, it isn't recommended to perform such operations directly in the CdkApiGatewayMain since, at that point, Quarkus isn't completely bootstrapped and started yet. We need to define our class as @ApplicationScoped, such that to be instantiated only once. We also used constructor injection and took advantage of the producer pattern, as you may see in the CdkApiGatewayProducer class. We override the io.quarkus.runtime.QuarkusApplication.run() method such that to customize our App object by tagging it, as we already did in the previous example, and", "start_char_idx": 2710, "end_char_idx": 5226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e940331-dab0-4d9f-89ef-af0a8996885a": {"__data__": {"id_": "0e940331-dab0-4d9f-89ef-af0a8996885a", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_6.txt", "file_name": "dzone.com_24_6.txt", "file_type": "text/plain", "file_size": 6815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9755943-2b43-4ad3-a460-615be8b52c8d", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_6.txt", "file_name": "dzone.com_24_6.txt", "file_type": "text/plain", "file_size": 6815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5a6df5d83853f113009c7145a93d6ea80558a9f209523771b67b5f245b30eb95", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e46f5efc-bc0a-491e-90b8-3874b77b917f", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_5.txt", "file_name": "dzone.com_24_5.txt", "file_type": "text/plain", "file_size": 5226, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "41eff00f96200aef2ddc996927e9688a4ffcdaf5a11df1fd2dd1cb709ec9a5ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09dae8e4-7619-4e4b-97c7-afdc738485b3", "node_type": "1", "metadata": {}, "hash": "4b0ca9b0988f7f5d88ff4b1de7b52e550935ae95d4fef080f5bd4f0f1d3e080b", "class_name": "RelatedNodeInfo"}}, "text": "to invoke CdkApiGatewayStack, responsible to instantiate and initialize our CloudFormation stack. Last but not least, the app.synth() statement is synthesizing this stack and, once executed, our infrastructure, as defined by the CdkApiGatewayStack, should be deployed on the AWS cloud. Here is now the CdkApiGatewayStack class: Java @Singleton public class CdkApiGatewayStack extends Stack { @Inject LambdaWithBucketConstructConfig config; @ConfigProperty(name = \"cdk.lambda-with-bucket-construct-id\", defaultValue = \"LambdaWithBucketConstructId\") String lambdaWithBucketConstructId; @Inject public CdkApiGatewayStack(final App scope, final @ConfigProperty(name = \"cdk.stack-id\", defaultValue = \"QuarkusApiGatewayStack\") String stackId, final StackProps props) { super(scope, stackId, props); } public void initStack() { String functionUrl = new LambdaWithBucketConstruct(this, lambdaWithBucketConstructId, config).getFunctionUrl(); CfnOutput.Builder.create(this, \"FunctionURLOutput\").value(functionUrl).build(); } } This class has changed as well, compared to its previous release. It's a singleton that uses the concept of construct, which was introduced formerly. As a matter of fact, instead of defining the stack structure here, in this class, as we did before, we do it by encapsulating the stack's elements together with their configuration in a construct that facilitates easily assembled cloud applications. In our project, this construct is a part of a separate module, named cdk-simple-construct, such that we could reuse it repeatedly and increase the application's modularity. Java public class LambdaWithBucketConstruct extends Construct { private FunctionUrl functionUrl; public LambdaWithBucketConstruct(final Construct scope, final String id, LambdaWithBucketConstructConfig config) { super(scope, id); Role role = Role.Builder.create(this, config.functionProps().id() + \"-role\") .assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\")).build(); role.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName(\"AmazonS3FullAccess\")); role.addManagedPolicy(ManagedPolicy.fromAwsManagedPolicyName(\"CloudWatchFullAccess\")); IFunction function = Function.Builder.create(this, config.functionProps().id()) .runtime(Runtime.JAVA_21) .role(role) .handler(config.functionProps().handler()) .memorySize(config.functionProps().ram()) .timeout(Duration.seconds(config.functionProps().timeout())) .functionName(config.functionProps().function()) .code(Code.fromAsset((String) this.getNode().tryGetContext(\"zip\"))) .build(); functionUrl = function.addFunctionUrl(FunctionUrlOptions.builder().authType(FunctionUrlAuthType.NONE).build()); new Bucket(this, config.bucketProps().bucketId(), BucketProps.builder().bucketName(config.bucketProps().bucketName()).build()); } public String getFunctionUrl() { return functionUrl.getUrl(); } } This is our construct which encapsulates our stack elements: a Lambda function with its associated IAM role and an S3 bucket. As you can see, it extends the software.construct.Construct class and its constructor, in addition to the standard scopeand id, parameters take a configuration object named LambdaWithBucketConstructConfig which defines, among others, properties related to the Lambda function and the S3 bucket belonging to the stack. Please notice that the Lambda function needs the IAM-managed policy AmazonS3FullAccess in order to read, write, delete, etc. to/from the associated S3 bucket. And since for tracing purposes, we need to log messages to the CloudWatch service, the IAM-managed policy CloudWatchFullAccess is required as well. These two policies are associated with a role whose naming convention consists of appending the suffix -role to the Lambda function name. Once this role is created, it will be attached to the Lambda function. As for the Lambda function body, please notice how this is created from an asset dynamically extracted from the deployment context. We'll come back in a few moments with more details concerning this point. Last but not least, please notice how after the Lambda function is created, a URL is attached to it and cached such that it can be retrieved by the consumer. This way we completely decouple the infrastructure logic (i.e., the Lambda function itself) from the business logic; i.e., the Java code executed by the Lambda function, in our case, a REST API implemented as a Quarkus JAX-RS (RESTeasy) endpoint, acting as a proxy for the API Gateway exposed by AWS. Coming back to the CdkApiGatewayStack class, we can see how on behalf of the Quarkus CDI implementation, we inject the configuration object LambdaWithBucketConstructConfig declared externally, as well as how we use the Eclipse MicroProfile Configuration to define its ID.", "start_char_idx": 0, "end_char_idx": 4730, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09dae8e4-7619-4e4b-97c7-afdc738485b3": {"__data__": {"id_": "09dae8e4-7619-4e4b-97c7-afdc738485b3", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_6.txt", "file_name": "dzone.com_24_6.txt", "file_type": "text/plain", "file_size": 6815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9755943-2b43-4ad3-a460-615be8b52c8d", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_6.txt", "file_name": "dzone.com_24_6.txt", "file_type": "text/plain", "file_size": 6815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5a6df5d83853f113009c7145a93d6ea80558a9f209523771b67b5f245b30eb95", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e940331-dab0-4d9f-89ef-af0a8996885a", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_6.txt", "file_name": "dzone.com_24_6.txt", "file_type": "text/plain", "file_size": 6815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4895f4e72130803c5cf18f22422013d3c382a39238e1da38c8368ed1dd13f52c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "121ff403-12af-407f-b3d6-beb29d116091", "node_type": "1", "metadata": {}, "hash": "27ad4c12e8882ced84ef1ea1e1496ff57acd32ec882624ed6074b5496592f395", "class_name": "RelatedNodeInfo"}}, "text": "We'll come back in a few moments with more details concerning this point. Last but not least, please notice how after the Lambda function is created, a URL is attached to it and cached such that it can be retrieved by the consumer. This way we completely decouple the infrastructure logic (i.e., the Lambda function itself) from the business logic; i.e., the Java code executed by the Lambda function, in our case, a REST API implemented as a Quarkus JAX-RS (RESTeasy) endpoint, acting as a proxy for the API Gateway exposed by AWS. Coming back to the CdkApiGatewayStack class, we can see how on behalf of the Quarkus CDI implementation, we inject the configuration object LambdaWithBucketConstructConfig declared externally, as well as how we use the Eclipse MicroProfile Configuration to define its ID. Once the LambdaWithBucketConstruct instantiated, the only thing left to do is to display the Lambda function URL such that we can call it with different consumers, whether JUnit integration tests, curl utility, or postman. We just have seen the whole mechanics which allows us to decouple the two fundamental CDK building blocks App and Stack. We also have seen how to abstract the Stack building block by making it an external module which, once compiled and built as a standalone artifact, can simply be injected wherever needed. Additionally, we have seen the code executed by the Lambda function in our stack can be plugged in as well by providing it as an asset, in the form of a ZIP file, for example, and stored in the CDK deployment context. This code is, too, an external module named quarkus-api and consists of a REST API having a couple of endpoints allowing us to get some information, like the host IP address or the S3 bucket's associated attributes. It's interesting to notice how Quarkus takes advantage of the Qute templates to render HTML pages. For example, the following endpoint displays the attributes of the S3 bucket that has been created as a part of the stack. Java ... @Inject Template s3Info; @Inject S3Client s3; ... @GET @Path(\"info/{bucketName}\") @Produces(MediaType.TEXT_HTML) public TemplateInstance getBucketInfo(@PathParam(\"bucketName\") String bucketName) { Bucket bucket = s3.listBuckets().buckets().stream().filter(b -> b.name().equals(bucketName)) .findFirst().orElseThrow(); TemplateInstance templateInstance = s3Info.data(\"bucketName\", bucketName, \"awsRegionName\", s3.getBucketLocation(GetBucketLocationRequest.builder().bucket(bucketName).build()) .locationConstraintAsString(), \"arn\", String.format(S3_FMT, bucketName), \"creationDate\", LocalDateTime.ofInstant(bucket.creationDate(), ZoneId.systemDefault()), \"versioning\", s3.getBucketVersioning(GetBucketVersioningRequest.builder().bucket(bucketName).build())); return templateInstance.data(\"tags\", s3.getBucketTagging(GetBucketTaggingRequest.builder().bucket(bucketName).build()).tagSet());", "start_char_idx": 3926, "end_char_idx": 6815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "121ff403-12af-407f-b3d6-beb29d116091": {"__data__": {"id_": "121ff403-12af-407f-b3d6-beb29d116091", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_7.txt", "file_name": "dzone.com_24_7.txt", "file_type": "text/plain", "file_size": 5735, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86b439de-cfcb-42c8-a9f6-9a1d360e367f", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_7.txt", "file_name": "dzone.com_24_7.txt", "file_type": "text/plain", "file_size": 5735, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b2beac080aa2e7340d8cea34e205983f291b3cf72595daf89d4bbcdc933c9ab3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09dae8e4-7619-4e4b-97c7-afdc738485b3", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_6.txt", "file_name": "dzone.com_24_6.txt", "file_type": "text/plain", "file_size": 6815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ca7fc9f0c1b21fe455b092812e2813f9a35bec96b2c6bb345df97fa430bf5331", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2e98ad9-4448-4f23-80d8-dc7a2b1235f6", "node_type": "1", "metadata": {}, "hash": "cea74e3e4cc578112aef2a1197bca71542574ebf8ca59acd697cebc2c9703abb", "class_name": "RelatedNodeInfo"}}, "text": "} This endpoint returns a TemplateInstance whose structure is defined in the file src/main/resources/templates/s3info.htmland which is filled with data retrieved by interrogating the S3 bucket in our stack, on behalf of the S3Client class provided by the AWS SDK. A couple of integration tests are provided and they take advantage of the Quarkus integration with AWS, thanks to which it is possible to run local cloud services, on behalf of testcontainers and localstack. In order to run them, proceed as follows: Shell $ git clone https://github.com/nicolasduminil/cdk $ cd cdk/cdk-quarkus/quarkus-api $ mvn verify Running the sequence of commands above will produce a quite verbose output and, at the end, you'll see something like this: Shell [INFO] [INFO] Results: [INFO] [INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0 [INFO] [INFO] [INFO] --- failsafe:3.2.5:verify (default) @ quarkus-api --- [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 22.344 s [INFO] Finished at: 2024-07-04T17:18:47+02:00 [INFO] ------------------------------------------------------------------------ That's not a big deal - just a couple of integration tests executed against a localstack running in testcontainers to make sure that everything works as expected. But if you want to test against real AWS services, meaning that you fulfill the requirements, then you should proceed as follows: Shell $ git clone https://github.com/nicolasduminil/cdk $ cd cdk $ ./deploy.sh cdk-quarkus/cdk-quarkus-api-gateway cdk-quarkus/quarkus-api/ Running the script deploy.sh with the parameters shown above will synthesize and deploy your stack. These two parameters are: The CDK application module name: This is the name of the Maven module where your cdk.json file is.The REST API module name: This is the name of the Maven module where the function.zip file is. If you look at the deploy.sh file, you'll see the following: Shell ...cdk deploy --all --context zip=~/cdk/$API_MODULE_NAME/target/function.zip... This command deploys the CDK app after having set in the zip context variable the function.zip location. Do you remember that the Lambda function has been created in the stack (LambdaWithBucketConstruct class) like this? Java IFunction function = Function.Builder.create(this, config.functionProps().id()) ... .code(Code.fromAsset((String) this.getNode().tryGetContext(\"zip\"))) .build(); The statement below gets the asset stored in the deployment context under the context variable zip and uses it as the code that will be executed by the Lambda function. The output of the deploy.sh file execution (quite verbose as well) will finish by displaying the Lambda function URL: Shell ... Outputs: QuarkusApiGatewayStack.FunctionURLOutput = https://...lambda-url.eu-west-3.on.aws/ Stack ARN: arn:aws:cloudformation:eu-west-3:...:stack/QuarkusApiGatewayStack/... ... Now, in order to test your stack, you may fire your preferred browser at https://<generated>.lambda-url.eu-west-3.on.aws/s3/info/my-bucket-8701 and should see something looking like this: Conclusion Your test is successful and you now know how to use CDK constructs to create infrastructure standalone modules and assemble them into AWS CloudFormation stacks. But there is more, so stay tuned! By Nicolas Duminil CORE Four Essential Tips for Building a Robust REST API in Java Creating a solid REST API in Java requires more than a basic grasp of HTTP requests and responses. Ensuring that your API is well-designed, maintainable, and secure is essential. This article will offer four critical tips to improve your REST API. It assumes you are already acquainted with the Richardson Maturity Model, especially up to Level 2, which is the minimum requirement for a good API. If you need a quick reminder about the Richardson Maturity Model, I recommend reading this article by Martin Fowler: Richardson Maturity Model. Given that prerequisite, let\u2019s dive into the tips. For illustration purposes, we\u2019ll use an example from the expedition domain.", "start_char_idx": 0, "end_char_idx": 4147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2e98ad9-4448-4f23-80d8-dc7a2b1235f6": {"__data__": {"id_": "d2e98ad9-4448-4f23-80d8-dc7a2b1235f6", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_7.txt", "file_name": "dzone.com_24_7.txt", "file_type": "text/plain", "file_size": 5735, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "86b439de-cfcb-42c8-a9f6-9a1d360e367f", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_7.txt", "file_name": "dzone.com_24_7.txt", "file_type": "text/plain", "file_size": 5735, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b2beac080aa2e7340d8cea34e205983f291b3cf72595daf89d4bbcdc933c9ab3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "121ff403-12af-407f-b3d6-beb29d116091", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_7.txt", "file_name": "dzone.com_24_7.txt", "file_type": "text/plain", "file_size": 5735, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8212bfa2b8bcf01820a78fb3fd2c70d47f24f44930b143b9a493ee5bc83de1e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0d23cd9-1916-43c6-9419-721d17a0de51", "node_type": "1", "metadata": {}, "hash": "796be83b3f45ccf31eb097e9ce11c3e0be7eefdacb1004ff0f48ff9a39268277", "class_name": "RelatedNodeInfo"}}, "text": "But there is more, so stay tuned! By Nicolas Duminil CORE Four Essential Tips for Building a Robust REST API in Java Creating a solid REST API in Java requires more than a basic grasp of HTTP requests and responses. Ensuring that your API is well-designed, maintainable, and secure is essential. This article will offer four critical tips to improve your REST API. It assumes you are already acquainted with the Richardson Maturity Model, especially up to Level 2, which is the minimum requirement for a good API. If you need a quick reminder about the Richardson Maturity Model, I recommend reading this article by Martin Fowler: Richardson Maturity Model. Given that prerequisite, let\u2019s dive into the tips. For illustration purposes, we\u2019ll use an example from the expedition domain. While we won\u2019t focus on entities and layers in detail, imagine we have the following entity class: Java public class Expedition { private String name; private String location; private LocalDate date; public Expedition(String name, String location, LocalDate date) { this.name = name; this.location = location; this.date = date; } public String getName() { return name; } public String getLocation() { return location; } public LocalDate getDate() { return date; } } 1. Consistency in Terminology and Resource Naming One of the most important aspects of designing a good REST API is ensuring consistent terminology and careful attention to the service\u2019s vocabulary. Start with a generic naming convention and then move to more specific terms. Following Domain-Driven Design (DDD) principles, begin with the main domain and then refine it into subdomains. A simple rule of thumb is to use plural nouns for resources. For example: GET /expeditions - Returns all expeditionsGET /expeditions/{id} - Retrieves a specific expedition by its ID Sample code: Java @Path(\"expeditions\") public class ExpeditionResource { @GET public List<Expedition> list() { // implementation here } @GET @Path(\"/{id}\") public Expedition get(@PathParam(\"id\") String id) { // implementation here } @GET @Path(\"/search\") public List<Expedition> mine() { // implementation here } } For more detailed guidelines on maintaining consistency, refer to the REST API Design Rulebook. 2. Maintainability, Scalability, and Documentation Maintaining and scaling your API is crucial as it grows in complexity. One way to", "start_char_idx": 3363, "end_char_idx": 5727, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0d23cd9-1916-43c6-9419-721d17a0de51": {"__data__": {"id_": "d0d23cd9-1916-43c6-9419-721d17a0de51", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_8.txt", "file_name": "dzone.com_24_8.txt", "file_type": "text/plain", "file_size": 6149, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8384bb94-754f-4426-9094-89222ddef646", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_8.txt", "file_name": "dzone.com_24_8.txt", "file_type": "text/plain", "file_size": 6149, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "97d56157087d1e4bda085d6cd381f1074da2f507409b2d97da7d0bfe27affca2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2e98ad9-4448-4f23-80d8-dc7a2b1235f6", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_7.txt", "file_name": "dzone.com_24_7.txt", "file_type": "text/plain", "file_size": 5735, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2886946c356bcd0192bc87f81b6fea850911c63ed86d0c38233b3585358a4024", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c83051f-43be-4c7e-8ba8-78250f180747", "node_type": "1", "metadata": {}, "hash": "b3a421d894eed57d5c262607ac2e156b596300ee59fcbf7510cd03bce5f5214d", "class_name": "RelatedNodeInfo"}}, "text": "ensure maintainability is through proper documentation. While documentation may not be the favorite task of many developers, it\u2019s indispensable. OpenAPI is an excellent tool for generating and enhancing documentation automatically. For more, visit OpenAPI. Another critical aspect is versioning. Versioning ensures backward compatibility and smooth transitions between different API versions. It allows you to support both old and new versions simultaneously, encouraging users to migrate to the latest version at their convenience. You can achieve this in Java by structuring your code with separate packages for each version and creating adapter layers to manage interactions between versions. Example: Java package os.expert.demo.expeditions.v1; @Path(\u201d/api/v1/expeditions\") public class ExpeditionResource { // implementation here } package os.expert.demo.expeditions.v2; @Path(\"/api/v2/expeditions\") public class ExpeditionResource { // implementation here 3. Security: Never Trust the User Security is a fundamental aspect of any API. A general rule is to never trust the user; always validate their permission to access the requested resources. One practical approach is to use authentication to determine which expeditions a user can access without relying on user-provided IDs. Example: Java @GET @Path(\"/my-expeditions\") public List<Expedition> myExpeditions() { // No need to request IDs since the user is authenticated // implementation here } This principle should also apply to other operations like editing or deleting resources. Always validate permissions before proceeding. 4. Exception Handling and Proper HTTP Status Codes Finally, a well-designed API should have robust exception handling that maps errors to the correct HTTP status codes. For instance, if an expedition is not found, your API should return a 404 Not Found status code, maintaining consistency between your Java code and REST API semantics. Java @Provider public class ExpeditionNotFoundExceptionMapper implements ExceptionMapper<ExpeditionNotFoundException> { @Override public Response toResponse(ExpeditionNotFoundException exception) { return Response.status(Response.Status.NOT_FOUND).entity(exception.getMessage()).build(); } } Conclusion In summary, creating a solid REST API involves several key steps: Understand the basics - Start familiarizing yourself with the Richardson Maturity Model.Use consistent terminology - Follow a clear and consistent resource naming convention.Focus on maintainability and documentation - Implement versioning and generate documentation using tools like OpenAPI.Prioritize security - Always validate user permissions.Implement proper exception handling - Ensure your API returns appropriate HTTP status codes. By following these tips, you\u2019ll be well on your way to developing a reliable and maintainable REST API in Java, a challenge even experienced developers can struggle with. For sample code and further examples, visit the repository on GitHub. Video By Otavio Santana CORE Java Concurrency: Visibility and Synchronized Previously, we examined the happens before guarantee in Java. This guarantee gives us confidence when we write multithreaded programs with regard to the re-ordering of statements that can happen. In this post, we shall focus on variable visibility between two threads and what happens when we change a variable that is shared. Code Examination Let\u2019s examine the following code snippet: Java import java.util.Date; public class UnSynchronizedCountDown { private int number = Integer.MAX_VALUE; public Thread countDownUntilAsync(final int threshold) { return new Thread(() -> { while (number>threshold) { number--; System.out.println(\"Decreased \"+number +\" at \"+ new Date()); } }); } private void waitUntilThresholdReached(int threshold) { while (number>threshold) { } } public static void main(String[] args) { int threshold = 2125840327; UnSynchronizedCountDown unSynchronizedCountDown = new UnSynchronizedCountDown(); unSynchronizedCountDown.countDownUntilAsync(threshold).start(); unSynchronizedCountDown.waitUntilThresholdReached(threshold); System.out.println(\"Threshold reached at \"+new Date()); } } This is a bad piece of code: two threads operate on the same variable number without any synchronization. Now the code will likely run forever! Regardless of when the countDown thread reaches the goal, the main thread will not pick the new value which is below the threshold. This is because the changes made to the number variable have not been made visible to the main thread. So it\u2019s not only about synchronizing and issuing thread-safe operations but also ensuring that the changes a thread has made are visible. Visibility and Synchronized Intrinsic locking in Java guarantees that one thread can see the changes of another thread. So when we use synchronized the changes of a thread become visible to the other thread that has stumbled on the synchronized block.", "start_char_idx": 0, "end_char_idx": 4927, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c83051f-43be-4c7e-8ba8-78250f180747": {"__data__": {"id_": "1c83051f-43be-4c7e-8ba8-78250f180747", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_8.txt", "file_name": "dzone.com_24_8.txt", "file_type": "text/plain", "file_size": 6149, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8384bb94-754f-4426-9094-89222ddef646", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_8.txt", "file_name": "dzone.com_24_8.txt", "file_type": "text/plain", "file_size": 6149, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "97d56157087d1e4bda085d6cd381f1074da2f507409b2d97da7d0bfe27affca2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0d23cd9-1916-43c6-9419-721d17a0de51", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_8.txt", "file_name": "dzone.com_24_8.txt", "file_type": "text/plain", "file_size": 6149, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2762ec0cd8ce3da61b161ab678c4f06ecad5a8cff0fcc38df9d8f44628348bc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdb1f6de-26bd-413d-84be-a51e2eebac44", "node_type": "1", "metadata": {}, "hash": "fae0eb9187c887234fb060e05962f20ca9d54ab6e81d0349fedade7a4aecc05b", "class_name": "RelatedNodeInfo"}}, "text": "Now the code will likely run forever! Regardless of when the countDown thread reaches the goal, the main thread will not pick the new value which is below the threshold. This is because the changes made to the number variable have not been made visible to the main thread. So it\u2019s not only about synchronizing and issuing thread-safe operations but also ensuring that the changes a thread has made are visible. Visibility and Synchronized Intrinsic locking in Java guarantees that one thread can see the changes of another thread. So when we use synchronized the changes of a thread become visible to the other thread that has stumbled on the synchronized block. Let\u2019s change our example and showcase this: Java package com.gkatzioura.concurrency.visibility; public class SynchronizedCountDown { private int number = Integer.MAX_VALUE; private String message = \"Nothing changed\"; private static final Object lock = new Object(); private int getNumber() { synchronized (lock) { return number; } } public Thread countDownUntilAsync(final int threshold) { return new Thread(() -> { message = \"Count down until \"+threshold; while (number>threshold) { synchronized (lock) { number--; if(number<=threshold) { } } } }); } private void waitUntilThresholdReached(int threshold) { while (getNumber()>threshold) { } } public static void main(String[] args) { int threshold = 2147270516; SynchronizedCountDown synchronizedCountDown = new SynchronizedCountDown(); synchronizedCountDown.countDownUntilAsync(threshold).start(); System.out.println(synchronizedCountDown.message); synchronizedCountDown.waitUntilThresholdReached(threshold); System.out.println(synchronizedCountDown.message); } } Access to the number variable is protected by a lock. Also modifying the variable is synchronized using the same lock. Eventually, the program will terminate as expected since we will reach the", "start_char_idx": 4265, "end_char_idx": 6137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bdb1f6de-26bd-413d-84be-a51e2eebac44": {"__data__": {"id_": "bdb1f6de-26bd-413d-84be-a51e2eebac44", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_9.txt", "file_name": "dzone.com_24_9.txt", "file_type": "text/plain", "file_size": 5389, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26903785-fc9a-4ff0-a4d4-9a7ab8ead96a", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_9.txt", "file_name": "dzone.com_24_9.txt", "file_type": "text/plain", "file_size": 5389, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b94a1ea31a074591526166424fa3e18750aa00405d8e019d413a190d621df86a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c83051f-43be-4c7e-8ba8-78250f180747", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_8.txt", "file_name": "dzone.com_24_8.txt", "file_type": "text/plain", "file_size": 6149, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f053dd419061e353d4368bd7c32109326ef1c2b637ba597288b9b4edabeb4c56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bac4a512-bbb3-4b64-a810-074624a3053e", "node_type": "1", "metadata": {}, "hash": "1694c22d60c89712bd5158004f342d9a921a93f7914126092f73aa6d42330f24", "class_name": "RelatedNodeInfo"}}, "text": "threshold. Every time we enter the synchronized block the changes made by the countdown thread will be visible to the main thread. This applies not only to the variables involved on a synchronized block but also to the variables that were visible to the countdown thread. Thus although the message variable was not inside any synchronized block at the end of the program its altered value got publicized, thus saw the right value printed. By Emmanouil Gkatziouras CORE The Hidden Costs of Lombok in Enterprise Java Solutions Imagine inheriting a codebase where classes are clean and concise, and developers don't have to worry about boilerplate code because they can get automatically generated getters, setters, constructors, and even builder patterns. Meet Lombok, a library used for accelerating development through \"cleaning\" boilerplate code and injecting it automatically during compile time. But, is Lombok a hero or a villain in disguise? Let's explore the widespread perceived benefits and potential drawbacks of its adoption in enterprise Java solutions. Overview Enterprise software is designed as a stable and predictable solution. When adopting Lombok, a framework that modifies code at compile time, we are navigating towards the opposite direction, through seas of unpredictable results and hidden complexities. It's a choice that may put an enterprise application's long-term success at risk. Architects have the tough responsibility of making decisions that will reflect throughout a software's life cycle - from development to sustaining. During development phases, when considering ways to improve developer productivity, it's crucial to balance the long-term impacts of each decision on the code complexity, predictability, and maintainability, while also considering that software will rely on multiple frameworks that must be able to correctly function with each other without incompatibilities that directly interfere on each other's behaviors. Let's have a close look at different ways that Lombok is used, the common thoughts around it, and explore associated trade-offs. In-Depth Look Let's explore practical use cases and some developer's statements I've heard over the years, while we explore the aspects around the ideas. \u201cLombok Creates Getters and Constructors, Saving Me Time on Data Classes\u201d Nowadays, we can use powerful IDEs and their code-generation features to create our getters, setters, and builders. It's best to use it to zealously and consciously generate code. Lombok's annotations can lead to unexpected mutability: @Data, by default, generates public setters, which violates encapsulation principles. Lombok offers ways to mitigate this through the usage of annotations such as @Value and @Getters(AccessLevel.NONE), although this is an error-prone approach, as now your code is \"vulnerable by default,\" and it's up to you to remember to adjust this every time. Given the fact that code generation to some degree reduces the thought processes during the implementation, these configurations can be overseen by developers who might happen to forget, or maybe who don't know enough about Lombok to be aware of this need. @Builder generates a mutable builder class, which can lead to inconsistent object states. Remember the quote from Joshua Bloch in his book, Effective Java: \"Classes should be immutable unless there's a very good reason to make them mutable.\" See an example of an immutable class, which is not an anemic model: Java public final class Customer { //final class private final String id; private final String name; private final List<Order> orders; private Customer(String id, String name, List<Order> orders) { this.id = Objects.requireNonNull(id); this.name = Objects.requireNonNull(name); this.orders = List.copyOf(orders); // Defensive copy } public static Customer create(String id, String name, List<Order> orders) { return new Customer(id, name, orders); } // Getters (no setters,for immutability) public String getId() { return id; } public String getName() { return name; } public List<Order> getOrders() { return List.copyOf(orders); } // Explicit methods for better control @Override public boolean equals(Object o) { if (this == o) return true; if (!(o instanceof Customer)) return false; Customer customer = (Customer) o; return id.equals(customer.id); } @Override public int hashCode() { return Objects.hash(id); } } \u201cUtility Classes and Exceptions Are a Breeze With Lombok\u201d Developers may often use Lombok to accelerate exception class creation: Java @Getter public class MyAppGenericException extends RuntimeException { private final String error; private final String message; } While this approach reduces boilerplate code, you may end up with overly generic exceptions and add difficulties for those wanting to create proper exception handling. A suggestion for a better approach is to create specific exception classes with meaningful constructors.", "start_char_idx": 0, "end_char_idx": 4929, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bac4a512-bbb3-4b64-a810-074624a3053e": {"__data__": {"id_": "bac4a512-bbb3-4b64-a810-074624a3053e", "embedding": null, "metadata": {"file_path": "docs\\java\\dzone.com_24_9.txt", "file_name": "dzone.com_24_9.txt", "file_type": "text/plain", "file_size": 5389, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26903785-fc9a-4ff0-a4d4-9a7ab8ead96a", "node_type": "4", "metadata": {"file_path": "docs\\java\\dzone.com_24_9.txt", "file_name": "dzone.com_24_9.txt", "file_type": "text/plain", "file_size": 5389, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b94a1ea31a074591526166424fa3e18750aa00405d8e019d413a190d621df86a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdb1f6de-26bd-413d-84be-a51e2eebac44", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_9.txt", "file_name": "dzone.com_24_9.txt", "file_type": "text/plain", "file_size": 5389, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e48f68f7940cc9b86c7165748d2b5d1b01a2616c5b8aa8499f24bceadf07d13d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7227ccac-1209-49c1-93f9-f39e4c904b9d", "node_type": "1", "metadata": {}, "hash": "4bbee42e148225e29e4d0e4d692584ac74a39ee6f3970aa35c9d7c54e3fb051b", "class_name": "RelatedNodeInfo"}}, "text": "(o instanceof Customer)) return false; Customer customer = (Customer) o; return id.equals(customer.id); } @Override public int hashCode() { return Objects.hash(id); } } \u201cUtility Classes and Exceptions Are a Breeze With Lombok\u201d Developers may often use Lombok to accelerate exception class creation: Java @Getter public class MyAppGenericException extends RuntimeException { private final String error; private final String message; } While this approach reduces boilerplate code, you may end up with overly generic exceptions and add difficulties for those wanting to create proper exception handling. A suggestion for a better approach is to create specific exception classes with meaningful constructors. In this case, it's essential to keep in mind that, as discussed before, hidden code leads to reduced clarity and creates uncertainty on how exceptions should be used and extended properly. In the example, if the service was designed to use the MyAppGenericException as the main parent exception, developers would now rely on a base class that can be confusing since all constructors and methods are hidden. This particular characteristic may result in", "start_char_idx": 4223, "end_char_idx": 5381, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7227ccac-1209-49c1-93f9-f39e4c904b9d": {"__data__": {"id_": "7227ccac-1209-49c1-93f9-f39e4c904b9d", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_16_0.txt", "file_name": "github.com_16_0.txt", "file_type": "text/plain", "file_size": 4437, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e95e58e-1bb2-4b53-85d4-07221c1a0a95", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_16_0.txt", "file_name": "github.com_16_0.txt", "file_type": "text/plain", "file_size": 4437, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e308198a145453ac946456a30d8be1c845f1d830c44f01e4dc4cbe5bb8b07fd1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bac4a512-bbb3-4b64-a810-074624a3053e", "node_type": "1", "metadata": {"file_path": "docs\\java\\dzone.com_24_9.txt", "file_name": "dzone.com_24_9.txt", "file_type": "text/plain", "file_size": 5389, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1546d0e639f1ab00edb281ae18f75dc950e48517d7b2efca5809145c4a9f9a99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41e229de-dc2f-4a2b-b9ae-25d2530980ac", "node_type": "1", "metadata": {}, "hash": "27da317092d6c6aba3fcea521447494247532735b17554fdb12aaf5d01c5019a", "class_name": "RelatedNodeInfo"}}, "text": "GitHub - spring-projects/spring-framework: Spring Framework Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert spring-projects / spring-framework Public Notifications You must be signed in to change notification settings Fork 38.5k Star 58.1k Spring Framework spring.io/projects/spring-framework License Apache-2.0 license 58.1k stars 38.5k forks Branches Tags Activity Star Notifications You must be signed in to change notification settings spring-projects/spring-framework main Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 32,869 Commits .github .github .idea .idea buildSrc buildSrc framework-api framework-api framework-bom framework-bom framework-docs framework-docs framework-platform framework-platform gradle gradle integration-tests integration-tests spring-aop spring-aop spring-aspects spring-aspects spring-beans spring-beans spring-context-indexer spring-context-indexer spring-context-support spring-context-support spring-context spring-context spring-core-test spring-core-test spring-core spring-core spring-expression spring-expression spring-instrument spring-instrument spring-jdbc spring-jdbc spring-jms spring-jms spring-messaging spring-messaging spring-orm spring-orm spring-oxm spring-oxm spring-r2dbc spring-r2dbc spring-test spring-test spring-tx spring-tx spring-web spring-web spring-webflux spring-webflux spring-webmvc spring-webmvc spring-websocket spring-websocket src src .editorconfig .editorconfig .gitattributes .gitattributes .gitignore .gitignore .sdkmanrc .sdkmanrc CONTRIBUTING.md CONTRIBUTING.md LICENSE.txt LICENSE.txt README.md README.md SECURITY.md SECURITY.md build.gradle build.gradle gradle.properties gradle.properties gradlew gradlew gradlew.bat gradlew.bat import-into-eclipse.md import-into-eclipse.md import-into-idea.md import-into-idea.md settings.gradle settings.gradle update_copyright_headers.sh update_copyright_headers.sh View all files Repository files navigation Spring Framework This is the home of the Spring Framework: the foundation for all Spring projects . Collectively the Spring Framework and the family of Spring projects are often referred to simply as \"Spring\". Spring provides everything required beyond the Java programming language for creating enterprise applications for a wide range of scenarios and architectures. Please read the Overview section of the reference documentation for a more complete introduction. Code of Conduct This project is governed by the Spring Code of Conduct . By participating, you are expected to uphold this code of conduct. Please report unacceptable behavior to spring-code-of-conduct@spring.io . Access to Binaries For access to artifacts or a distribution zip, see the Spring Framework Artifacts wiki page. Documentation The Spring Framework maintains reference documentation ( published and source ), GitHub wiki pages , and an API reference . There are also guides and tutorials across Spring projects. Micro-Benchmarks See the Micro-Benchmarks wiki page. Build from Source See the Build from Source wiki page and the CONTRIBUTING.md file. Continuous Integration Builds Information regarding CI builds can be found in the Spring Framework Concourse pipeline documentation. Stay in Touch Follow @SpringCentral , @SpringFramework , and its team members on \ud835\udd4f. In-depth articles can be found at The Spring Blog , and releases are announced via our releases feed . License The Spring Framework is released under version 2.0 of the Apache License . About Spring Framework spring.io/projects/spring-framework Topics framework spring spring-framework Resources Readme License Apache-2.0 license Code of conduct Code of conduct Security policy Security policy Uh oh! There was an error while loading. Please reload this page . Activity Custom properties Stars 58.1k stars Watchers 3.3k watching Forks 38.5k forks Report repository Releases 334 v6.2.7 Latest May 15, 2025 + 333 releases Packages 0 No packages published Uh oh! There was an error while loading. Please reload this page . Contributors 957 + 943 contributors Languages Java 97.7% Kotlin 2.1% AspectJ 0.1% FreeMarker 0.1% Groovy 0.0% XSLT 0.0% You can\u2019t perform that action at this time.", "start_char_idx": 0, "end_char_idx": 4432, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41e229de-dc2f-4a2b-b9ae-25d2530980ac": {"__data__": {"id_": "41e229de-dc2f-4a2b-b9ae-25d2530980ac", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_21_0.txt", "file_name": "github.com_21_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e21b2b4e-af2c-46db-bdd2-ddf070c19567", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_21_0.txt", "file_name": "github.com_21_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "34bd20056160a8de9be81b94838d036c32fdff19d0a236dddaa80669cb43adb4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7227ccac-1209-49c1-93f9-f39e4c904b9d", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_16_0.txt", "file_name": "github.com_16_0.txt", "file_type": "text/plain", "file_size": 4437, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e308198a145453ac946456a30d8be1c845f1d830c44f01e4dc4cbe5bb8b07fd1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a26eea65-fbd9-4659-aea9-3a12ce9e276a", "node_type": "1", "metadata": {}, "hash": "9bd87cc2d172b2227682ed2067693ac40889840cc87276d2a3be27b7ef0e463c", "class_name": "RelatedNodeInfo"}}, "text": "GitHub - iluwatar/java-design-patterns: Design patterns implemented in Java Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert iluwatar / java-design-patterns Public Uh oh! There was an error while loading. Please reload this page . Notifications You must be signed in to change notification settings Fork 27k Star 91.9k Design patterns implemented in Java java-design-patterns.com License View license 91.9k stars 27k forks Branches Tags Activity Star Notifications You must be signed in to change notification settings iluwatar/java-design-patterns master Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 4,336 Commits .github .github .mvn/ wrapper .mvn/ wrapper abstract-document abstract-document abstract-factory abstract-factory active-object active-object actor-model actor-model acyclic-visitor acyclic-visitor adapter adapter ambassador ambassador anti-corruption-layer anti-corruption-layer arrange-act-assert arrange-act-assert async-method-invocation async-method-invocation backpressure backpressure balking balking bloc bloc bridge bridge builder builder business-delegate business-delegate bytecode bytecode caching caching callback callback chain-of-responsibility chain-of-responsibility circuit-breaker circuit-breaker clean-architecture clean-architecture client-session client-session collecting-parameter collecting-parameter collection-pipeline collection-pipeline combinator combinator command-query-responsibility-segregation command-query-responsibility-segregation command command commander commander component component composite-entity composite-entity composite-view composite-view composite composite context-object context-object converter converter curiously-recurring-template-pattern curiously-recurring-template-pattern currying currying data-access-object data-access-object data-bus data-bus data-locality data-locality data-mapper data-mapper data-transfer-object data-transfer-object decorator decorator delegation delegation dependency-injection dependency-injection dirty-flag dirty-flag domain-model domain-model double-buffer double-buffer double-checked-locking double-checked-locking double-dispatch double-dispatch dynamic-proxy dynamic-proxy event-aggregator event-aggregator event-based-asynchronous event-based-asynchronous event-driven-architecture event-driven-architecture event-queue event-queue event-sourcing event-sourcing execute-around execute-around extension-objects extension-objects facade facade factory-kit factory-kit factory-method factory-method factory factory fanout-fanin fanout-fanin feature-toggle feature-toggle filterer filterer fluent-interface fluent-interface flux flux flyweight flyweight front-controller front-controller function-composition function-composition game-loop game-loop gateway gateway guarded-suspension guarded-suspension half-sync-half-async half-sync-half-async health-check health-check hexagonal-architecture hexagonal-architecture identity-map identity-map intercepting-filter intercepting-filter interpreter interpreter iterator iterator layered-architecture layered-architecture lazy-loading lazy-loading leader-election leader-election leader-followers leader-followers localization localization lockable-object lockable-object map-reduce map-reduce marker-interface marker-interface master-worker master-worker mediator mediator memento memento metadata-mapping metadata-mapping microservices-aggregrator microservices-aggregrator microservices-api-gateway microservices-api-gateway microservices-client-side-ui-composition microservices-client-side-ui-composition microservices-distributed-tracing microservices-distributed-tracing microservices-idempotent-consumer microservices-idempotent-consumer microservices-log-aggregation microservices-log-aggregation View all files Repository files navigation Design Patterns Implemented in Java Read in different language : zh , ko , fr , tr , ar , es , pt , id , ru , de , ja , vi , bn , np , it , da Introduction Design patterns are the best, formalized practices a programmer can use to solve common problems when designing an application or system. Design patterns can speed up the development process by providing tested, proven development paradigms. Reusing design patterns helps prevent subtle issues that cause major problems, and it also improves code readability for coders and architects who are familiar with the patterns. Getting Started This site showcases Java Design Patterns. The solutions have been developed by experienced programmers and architects from the open-source community. The patterns can be browsed by their high-level descriptions or by looking at their source code. The source code examples are well commented and can be thought of as programming tutorials on how to implement a specific pattern. We use the most popular battle-proven open-source Java technologies. Before you dive into the material, you should be familiar with various Software Design Principles . All designs should be as simple as possible. You should start with KISS, YAGNI, and Do The Simplest Thing That Could Possibly Work principles. Complexity and patterns should only be introduced when they are needed for practical extensibility.", "start_char_idx": 0, "end_char_idx": 5464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a26eea65-fbd9-4659-aea9-3a12ce9e276a": {"__data__": {"id_": "a26eea65-fbd9-4659-aea9-3a12ce9e276a", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_21_0.txt", "file_name": "github.com_21_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e21b2b4e-af2c-46db-bdd2-ddf070c19567", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_21_0.txt", "file_name": "github.com_21_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "34bd20056160a8de9be81b94838d036c32fdff19d0a236dddaa80669cb43adb4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41e229de-dc2f-4a2b-b9ae-25d2530980ac", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_21_0.txt", "file_name": "github.com_21_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c4d078fdf083dc5cdde4fe428e5dbbe4376ecbd803cd81e93046cb9aa7b545cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8f5f685-8ef7-4563-abc3-efa56e0c4894", "node_type": "1", "metadata": {}, "hash": "b569ad371d7c3cd26e4f69f324212216477eb9f79d9cf2aa66cd32f57fa158f6", "class_name": "RelatedNodeInfo"}}, "text": "Reusing design patterns helps prevent subtle issues that cause major problems, and it also improves code readability for coders and architects who are familiar with the patterns. Getting Started This site showcases Java Design Patterns. The solutions have been developed by experienced programmers and architects from the open-source community. The patterns can be browsed by their high-level descriptions or by looking at their source code. The source code examples are well commented and can be thought of as programming tutorials on how to implement a specific pattern. We use the most popular battle-proven open-source Java technologies. Before you dive into the material, you should be familiar with various Software Design Principles . All designs should be as simple as possible. You should start with KISS, YAGNI, and Do The Simplest Thing That Could Possibly Work principles. Complexity and patterns should only be introduced when they are needed for practical extensibility. Once you are familiar with these concepts you can start drilling down into the available design patterns by any of the following approaches: Search for a specific pattern by name. Can't find one? Please report a new pattern here . Using tags such as Performance , Gang of Four or Data access . Using pattern categories, Creational , Behavioral , and others. Hopefully, you find the object-oriented solutions presented on this site useful in your architectures and have as much fun learning them as we had while developing them. How to Contribute If you are willing to contribute to the project you will find the relevant information in our developer wiki . We will help you and answer your questions in the Gitter chatroom . The Book The design patterns are now available as an e-book. Find out more about \"Open Source Java Design Patterns\" here: https://payhip.com/b/bNQFX The project contributors can get the book for free. Contact the maintainer via Gitter chatroom or email (iluwatar (at) gmail (dot) com ). Send a message that contains your email address, Github username, and a link to an accepted pull request. License This project is licensed under the terms of the MIT license. Contributors Ilkka Sepp\u00e4l\u00e4 \ud83d\udcc6 \ud83d\udea7 \ud83d\udd8b Subhrodip Mohanta \ud83d\udcbb \ud83d\udc40 \ud83d\udea7 amit1307 \ud83d\udcbb Narendra Pathai \ud83d\udcbb \ud83e\udd14 \ud83d\udc40 Jeroen Meulemeester \ud83d\udcbb Joseph McCarthy \ud83d\udcbb Thomas \ud83d\udcbb Anurag Agarwal \ud83d\udcbb Markus Moser", "start_char_idx": 4480, "end_char_idx": 6820, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8f5f685-8ef7-4563-abc3-efa56e0c4894": {"__data__": {"id_": "c8f5f685-8ef7-4563-abc3-efa56e0c4894", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e32c718481c06e91841826d19b65fd318b1de57f1b7c48172401101f628b414d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a26eea65-fbd9-4659-aea9-3a12ce9e276a", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_21_0.txt", "file_name": "github.com_21_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8955cfa3a0b54850315a57d6abfaac15cfb6b32699995ed70b20559689022d23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "130fa4fc-19b7-4974-88a5-f82713be5c29", "node_type": "1", "metadata": {}, "hash": "3265ee998ba883fab5214a208489dc4136e201d92e81fff255b3d34f49b9101e", "class_name": "RelatedNodeInfo"}}, "text": "\ud83c\udfa8 \ud83d\udcbb \ud83e\udd14 Sabiq Ihab \ud83d\udcbb Amit Dixit \ud83d\udcbb Piyush Kailash Chaudhari \ud83d\udcbb joshzambales \ud83d\udcbb Kamil Pietruszka \ud83d\udcbb Zafar Khaydarov \ud83d\udcbb \ud83d\udcd6 Paul Campbell \ud83d\udcbb Argyro Sioziou \ud83d\udcbb TylerMcConville \ud83d\udcbb saksham93 \ud83d\udcbb nikhilbarar \ud83d\udcbb Colin But \ud83d\udcbb Ruslan \ud83d\udcbb Juho Kang \ud83d\udcbb Dheeraj Mummareddy \ud83d\udcbb Bernardo Sulzbach \ud83d\udcbb Aleksandar Dudukovic \ud83d\udcbb Yusuf Ayta\u015f \ud83d\udcbb Mih\u00e1ly Kuprivecz \ud83d\udcbb Stanislav Kapinus \ud83d\udcbb GVSharma \ud83d\udcbb Sr\u0111an Paunovi\u0107 \ud83d\udcbb Petros G. Sideris \ud83d\udcbb Pramod Gupta \ud83d\udc40 Amarnath Chandana \ud83d\udcbb Anurag870 \ud83d\udcbb \ud83d\udcd6 Wes Gilleland \ud83d\udcbb Harshraj Thakor \ud83d\udcbb Martin Vandenbussche \ud83d\udcbb Alexandru Somai \ud83d\udcbb Artur Mogozov \ud83d\udcbb anthony \ud83d\udcbb Christian Cygnus \ud83d\udcbb Dima Gubin \ud83d\udcbb Joshua Jimenez \ud83d\udcbb Kai Winter \ud83d\udcbb lbroman \ud83d\udcbb Przemek \ud83d\udcbb Prafful Agarwal \ud83d\udd8b Sanket Panhale \ud83d\udd8b staillebois \ud83d\udcbb Kriszti\u00e1n Nagy \ud83d\udcbb Alexander Ivanov \ud83d\udcbb Yosfik Alqadri \ud83d\udcbb Agust\u00ed Becerra Mil\u00e0 \ud83d\udcbb Juan Manuel Su\u00e1rez \ud83d\udcbb Luigi Cortese \ud83d\udcbb Katarzyna Rzepecka \ud83d\udcbb adamski.pro \ud83d\udcbb Shengli Bai \ud83d\udcbb Boris \ud83d\udcbb Dmitry Avershin \ud83d\udcbb \u9773\u9633 \ud83d\udcbb hoangnam2261 \ud83d\udcbb Arpit Jain \ud83d\udcbb J\u00f3n Ingi Sveinbj\u00f6rnsson \ud83d\udcbb Kirill Vlasov \ud83d\udcbb Mitchell Irvin \ud83d\udcbb Ranjeet \ud83d\udcbb PhoenixYip \ud83d\udcbb M Saif Asif \ud83d\udcbb kanwarpreet25 \ud83d\udcbb Leon Mak \ud83d\udcbb Per Wramdemark \ud83d\udcbb Evan Sia Wai Suan \ud83d\udcbb AnaghaSasikumar \ud83d\udcbb Christoffer Hamberg \ud83d\udcbb Dominik Gruntz \ud83d\udcbb Hannes \ud83d\udcbb Leo Guti\u00e9rrez Ram\u00edrez \ud83d\udcbb Zhang WH \ud83d\udcbb Christopher O'Connell \ud83d\udcbb George Mavroeidis \ud83d\udcbb Hemant Bothra \ud83d\udcbb \ud83c\udfa8 Kevin Peters \ud83d\udcbb George Aristy \ud83d\udcbb Mahendran Mookkiah \ud83d\udcbb Azureyjt \ud83d\udcbb gans \ud83d\udcbb Matt \ud83d\udd8b Gopinath Langote \ud83d\udcbb Hoswey \ud83d\udcbb Amit Pandey \ud83d\udcbb gwildor28 \ud83d\udd8b \u7530\u6d69 \ud83d\udd8b Stamatis Pitsios \ud83d\udcbb qza \ud83d\udcbb Rodolfo Forte \ud83d\udd8b Ankur Kaushal \ud83d\udcbb Ovidijus Okinskas \ud83d\udcbb Robert Kasperczyk \ud83d\udcbb Tapio Rautonen \ud83d\udcbb Yuri Orlov \ud83d\udcbb Varun Upadhyay \ud83d\udcbb Aditya Pal \ud83d\udcbb grzesiekkedzior \ud83d\udcbb \ud83d\udc40 Sivasubramani M \ud83d\udcbb Sami Airaksinen \ud83d\udcbb Janne Sinivirta \ud83d\udcbb Boris-Chengbiao Zhou \ud83d\udd8b Jacob Hein \ud83d\udd8b Richard Jones \ud83d\udd8b Rachel M.", "start_char_idx": 0, "end_char_idx": 1640, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "130fa4fc-19b7-4974-88a5-f82713be5c29": {"__data__": {"id_": "130fa4fc-19b7-4974-88a5-f82713be5c29", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e32c718481c06e91841826d19b65fd318b1de57f1b7c48172401101f628b414d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8f5f685-8ef7-4563-abc3-efa56e0c4894", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "150350520229472c4044639b71b34de51bd981d3f8651d5642421edb53b9b1b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02564ca1-fbac-4e43-b595-e75c6d6dff7f", "node_type": "1", "metadata": {}, "hash": "4481f41cef682ec4e3a742d1395019e0dcc8ed5f6160a77f9736328d3ce5a32c", "class_name": "RelatedNodeInfo"}}, "text": "Carmena \ud83d\udd8b Zaerald Denze Lungos \ud83d\udd8b Lars Kappert \ud83d\udd8b Mike Liu \ud83c\udf0d Matt Dolan \ud83d\udcbb \ud83d\udc40 Manan \ud83d\udc40 Nishant Arora \ud83d\udcbb Peeyush \ud83d\udcbb Rakesh \ud83d\udcbb \ud83d\udc40 Wei Seng \ud83d\udcbb Ashish Trivedi \ud83d\udcbb \u6d2a\u6708\u9633 \ud83d\udcbb xdvrx1 \ud83d\udc40 \ud83e\udd14 Bethan Palmer \ud83d\udcbb Toxic Dreamz \ud83d\udcbb Edy Cu Tjong \ud83d\udcd6 Micha\u0142 Krzywa\u0144ski \ud83d\udcbb Stefan Birkner \ud83d\udcbb Fedor Skvorcov \ud83d\udcbb samilAyoub \ud83d\udcbb Vladislav Golubinov \ud83d\udcbb Swaraj \ud83d\udcbb Christoph Flick \ud83d\udcd6 Asc\u00eanio \ud83d\udc40 Domenico Sibilio \ud83d\udcd6 Akash Chandwani \ud83d\udc40 Pavlo Manannikov \ud83d\udcbb Eiman \ud83d\udcbb Rocky \ud83d\udcd6 Ibrahim ali abdelghany \ud83d\udc40 Girish Kulkarni \ud83d\udcd6 Omar Karazoun \ud83d\udcbb Jeff Evans \ud83d\udcbb Vivek Singh \ud83d\udcbb siavash \ud83d\udcbb ruchpeanuts \ud83d\udcd6 warp125 \ud83c\udf0d KHADIR Tayeb \ud83c\udf0d ignite1771 \ud83d\udcbb Halil Demir \ud83c\udf0d Rohit Singh \ud83d\udcbb byoungju94 \ud83d\udcbb Moustafa Farhat \ud83c\udf0d Martel Richard \ud83d\udcbb va1m \ud83d\udcbb Noam Greenshtain \ud83d\udcbb yonghong Xu \ud83d\udcd6 jinishavora \ud83d\udc40 \ud83d\udcbb Elvys Soares \ud83d\udcbb zWeBrain \ud83d\udcbb \u4f59\u6797\u9896 \ud83c\udf0d Alain \ud83c\udf0d VR \ud83d\udcd6 JackieNim \ud83d\udcbb EdisonE3 \ud83d\udcbb Tao \ud83d\udcbb Juan Manuel Abate \ud83c\udf0d Xenilo137 \ud83d\udcbb Samuel Souza \ud83d\udcbb \ud83d\udcd6 Marlo Henrique \ud83c\udf0d AndriyPyzh \ud83d\udcbb karthikbhat13 \ud83d\udcbb Morteza Adigozalpour \ud83d\udcbb Nagaraj Tantri \ud83d\udcbb Francesco Scuccimarri \ud83d\udcbb Conny Hansson \ud83d\udcd6 Muklas Rahmanto \ud83c\udf0d Vadim \ud83c\udf0d Simran Keshri \ud83d\udcbb JCarlos \ud83c\udf0d Ali Ghasemi \ud83d\udcbb Carl Dea \ud83d\udcbb Mozartus \ud83c\udf0d Manvi Goel \ud83d\udcd6 Anum Amin \ud83d\udcd6 Reo Uehara \ud83c\udf0d Fiordy \ud83d\udcd6 Harshal \ud83d\udcbb Abhinav Vashisth \ud83d\udcd6 Kevin \ud83d\udc40 \ud83d\udcbb Shrirang \ud83d\udc40 \ud83d\udcbb interactwithankush \ud83d\udcbb CharlieYu \ud83d\udcbb Leisterbecker \ud83d\udcbb DragonDreamer \ud83d\udcbb ShivanshCharak \ud83d\udcbb HattoriHenzo \ud83d\udcbb Arnab Sen \ud83d\udcbb MohanaRao SV \ud83d\udcbb Yonatan Karp-Rudin \ud83d\udcbb \ud83d\udc40 Oliani \ud83d\udcbb Renjie LIU \ud83d\udcbb perfect guy \ud83d\udcd6 xyllq999 \ud83d\udcbb Mohamed Bilal \ud83d\udcd6 Karshil sheth \ud83d\udcbb kongleong86 \ud83d\udcbb Aitor Fidalgo S\u00e1nchez \ud83c\udf0d \ud83d\udcd6 \ud83d\udc40 Victor He \ud83d\udcbb Minh Nguyen \ud83c\udf0d \ud83d\udcd6 Victor He \ud83d\udcd6 yiichan \ud83d\udcd6 Pan Sem \ud83d\udcd6 zhoumengyks \ud83d\udcbb you \ud83c\udf0d Thanks \ud83c\udf0d LazyProgrammer \ud83d\udcd6 Mohammed Faizan Ahmed \ud83d\udcd6 Bruno Fernandes \ud83d\udcbb SammanPali \ud83d\udcd6 Qixiang Chen \ud83d\udcd6 Shourya Manekar \ud83c\udf0d Alan \ud83c\udf0d JanFidor \ud83d\udcbb \ud83d\udcd6 Anton Yakutovich \ud83d\udcbb steph88ss \ud83d\udcd6 Yujan Ranjitkar \ud83c\udf0d yusha-g \ud83c\udf0d Robert Volkmann \ud83d\udcbb \ud83d\udc40 Bipin Kumar Chaurasia \ud83d\udcd6 KyleSong30 \ud83d\udcd6 u7281975 \ud83d\udcd6 harshalkhachane \ud83d\udcbb Tejas Singh \ud83d\udcd6 \ud83c\udf0d Sudarsan Balaji \ud83d\udcbb Vaibhav Agrawal \ud83d\udcd6 u7275858 \ud83d\udcbb prasad-333 \ud83d\udcd6 JurenXu \ud83d\udcbb murphShaw \ud83d\udcd6 XianWu99 \ud83d\udcd6 JoshuaSinglaANU \ud83d\udcbb Ricardo Ramos \ud83c\udf0d Farid Zouheir \ud83c\udf0d Vin\u00edcius A. B.", "start_char_idx": 1641, "end_char_idx": 3565, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "02564ca1-fbac-4e43-b595-e75c6d6dff7f": {"__data__": {"id_": "02564ca1-fbac-4e43-b595-e75c6d6dff7f", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e32c718481c06e91841826d19b65fd318b1de57f1b7c48172401101f628b414d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "130fa4fc-19b7-4974-88a5-f82713be5c29", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4861e31fc5fc5acb1236db0bf21f6f1ed007714a6690e1542e9eca6da1f2f7cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fbf93781-d500-48b4-93c1-bf4ebe4424d9", "node_type": "1", "metadata": {}, "hash": "f985f926b6fe04e01d693036ccfda99fa5271499fe5892cb38fce882f7d451cc", "class_name": "RelatedNodeInfo"}}, "text": "B. \ud83c\udf0d Stefanel Stan \ud83d\udcbb Prince bhati \ud83c\udf0d WuLang \ud83d\udcd6 Hugo Kat \ud83d\udcbb Shivanagouda Agasimani \ud83d\udcbb Aparna \ud83d\udcbb Girolamo Giordano \ud83c\udf0d Chak-C \ud83d\udcbb Nakul Nambiar \ud83d\udcbb KarmaTashiCat \ud83c\udf0d marikattt \ud83d\udcbb Hashvardhan Parmar \ud83c\udf0d YongHwan \ud83d\udcd6 \ud83c\udf0d Shogo Hida \ud83c\udf0d Eugene \ud83d\udcbb Piyush \ud83d\udcd6 Rahul Raj \ud83d\udcbb Bharath Kalyan S \ud83d\udcbb Saiteja Reddy \ud83c\udf0d Enrique Clerici \ud83c\udf0d Ramil Sayetov \ud83c\udf0d \u4e1c\u65b9\u672a\u767d \ud83d\udcbb Fredrik Sejr \ud83c\udf0d akshatarora0013 \ud83d\udcbb Mughees Qasim \ud83d\udcbb behappyleee \ud83c\udf0d Ayush Thakur \ud83c\udf0d Anthony Bosch \ud83d\udcbb trananso \ud83d\udcd6 Giammaria Biffi \ud83c\udf0d Saiful Haque \ud83d\udcbb JabezBrew \ud83d\udcbb konstantin-goldman \ud83d\udcd6 Tien Nguyen Minh \ud83d\udcbb \ud83c\udf0d Vladimir \ud83c\udf0d Surjendu \ud83c\udf0d \ud83d\udcbb bakazhou \ud83d\udcbb Owen Leung \ud83d\udcbb Stavros Barousis \ud83d\udcd6 Syyed Ibrahim Abdullah \ud83c\udf0d JiaDi Zhang \ud83c\udf0d Sanchit Bansal \ud83d\udcd6 Md Saiful Islam \ud83d\udcd6 Antonio Addeo \ud83d\udcd6 \ud83d\udcbb Allagadda Sai Upendranath \ud83d\udcd6 Matheus Braga \ud83c\udf0d \ud83d\udcd6 Appari Satya Barghav \ud83d\udcd6 Marcel Ribeiro-Dantas \ud83d\udcd6 Muhammad Hanif", "start_char_idx": 3563, "end_char_idx": 4337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbf93781-d500-48b4-93c1-bf4ebe4424d9": {"__data__": {"id_": "fbf93781-d500-48b4-93c1-bf4ebe4424d9", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_21_2.txt", "file_name": "github.com_21_2.txt", "file_type": "text/plain", "file_size": 2375, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7b3aa042-a9ad-4717-b4e0-8a0b0b4039ac", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_21_2.txt", "file_name": "github.com_21_2.txt", "file_type": "text/plain", "file_size": 2375, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f7d189c2f4b2ea6132375d1b5f9458e93cd75a843e0d9549d4af336020e6e48e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02564ca1-fbac-4e43-b595-e75c6d6dff7f", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f252535100d7ffe4e37679be6a251308cb74f603ed9b2bf055a61ba91a2f109f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c5fd7803-774c-4aa1-94d0-a235fe305e93", "node_type": "1", "metadata": {}, "hash": "27da317092d6c6aba3fcea521447494247532735b17554fdb12aaf5d01c5019a", "class_name": "RelatedNodeInfo"}}, "text": "Amrullah \ud83c\udf0d JackH408 \ud83d\udcd6 Shubham \ud83c\udf0d Nishant Jain \ud83d\udcd6 Rhitam Chaudhury \ud83d\udcd6 JerryZhao275 \ud83d\udcd6 Leonardo Lisanti \ud83c\udf0d Yennifer Herrera \ud83c\udf0d \ud83d\udc40 jnniu-n \ud83c\udf0d \ud83d\udcd6 Miguel Angel Perez Garcia \ud83d\udc40 \ud83c\udf0d Suwan Sankaja \ud83c\udf0d alok \ud83d\udcd6 Daniel Lisboa \ud83c\udf0d Sam Powell \ud83d\udcd6 Jo\u00e3o Fernandes \ud83c\udf0d Hong Geon-ui \ud83c\udf0d Doksanbir \ud83d\udcbb \ud83d\udcd6 \ud83d\udc40 Chant3ll3 \ud83d\udcd6 \ud83c\udf0d YongHwan Kwon \ud83d\udcbb Jakub Klimek \ud83d\udcbb believe \ud83c\udf0d egg0102030405 \ud83c\udf0d \ud83d\udcd6 Ved Asole \ud83d\udcbb NewMorning \ud83c\udf0d \u8d44\u6df1\u8001\u840c\u65b0 \ud83c\udf0d Seunghwan Jeon \ud83c\udf0d sugavanesh \ud83d\udcbb FinnS-F \ud83d\udcbb jerryyummy \ud83c\udf0d Manoj Chowdary \ud83d\udcbb Aditya \ud83d\udcd6 \ud83d\udcbb nooynayr \ud83d\udcd6 CYBERCRUX2 \ud83d\udcd6 Luis Mateo Hincapi\u00e9 Martinez \ud83c\udf0d \ud83d\udc40 guqing \ud83d\udcbb Sashir Estela \ud83d\udcbb omahs \ud83d\udcd6 leif e. \ud83d\udcbb Jun Kang \ud83d\udcbb Kishalay Pandey \ud83d\udcbb drishtii7 \ud83d\udcbb David Medina Orozco \ud83c\udf0d \ud83d\udc40 Roman Leontev \ud83d\udcbb Riley \ud83d\udcbb k1w1dev \ud83d\udcbb dev-yugantar \ud83d\udcbb Adelya \ud83d\udcbb gatlanagaprasanna \ud83d\udcd6 Avinash Shukla \ud83d\udcbb Mayank Choudhary \ud83d\udcbb romannimets \ud83d\udcbb Joel \ud83d\udcbb Walyson Moises \ud83d\udcbb Xcyq \ud83d\udcbb Ritabrata \ud83d\udc40 Trivikram Kamat \ud83d\udcbb Vincent Vanghelle \ud83c\udf0d Antoine H\u00e9ritier \ud83c\udf0d QinShower \ud83c\udf0d LakshyaPunyani-01 \ud83d\udcbb jasonjyu \ud83d\udcbb jeffmorrison \ud83d\udcbb David M. \ud83d\udcbb Patrick Kleindienst \ud83d\udcbb Juyeon \ud83c\udf0d Mammad Yahyayev \ud83d\udcd6 Salma \ud83d\udcbb Arpit Sarang \ud83d\udcbb Maya \ud83c\udf0d HabibaMekay \ud83d\udcbb Ahmed-Taha-981 \ud83d\udcbb Malak Elbanna \ud83d\udcbb BiKangNing \ud83d\udcd6 Tarun Vishwakarma \ud83d\udcbb Shahd Hossam \ud83d\udcbb Mehdi Rahimi \ud83d\udcbb Clint Air\u00e9 \ud83d\udcbb darkhyper24 \ud83d\udcbb Mohaned Atef \ud83d\udcbb Maxim Evtush \ud83d\udcbb Harshita Vidapanakal \ud83d\udcbb smile-ab \ud83c\udf0d \ud83d\udcbb Francisco-G-P \ud83c\udf0d Gabriel Duarte \ud83d\udcd6 Deniz Altunkapan \ud83c\udf0d John Klint \ud83d\udcbb Sanura Hettiarachchi \ud83d\udcbb Kim Gi Uk \ud83d\udcbb Suchismita Deb \ud83d\udcbb ssrijan-007-sys \ud83d\udcbb e5LA \ud83d\udcbb \ud83d\udcd6 Maziyar Gerami \ud83c\udf0d yoobin_mion \ud83d\udcbb About Design patterns implemented in Java java-design-patterns.com Topics java snippets design-patterns principles awesome-list hacktoberfest snippets-library snippets-collection Resources Readme License View license Uh oh! There was an error while loading. Please reload this page . Activity Stars 91.9k stars Watchers 3.7k watching Forks 27k forks Report repository Sponsor this project Sponsor Uh oh! There was an error while loading. Please reload this page . Learn more about GitHub Sponsors Uh oh! There was an error while loading. Please reload this page . Contributors 461 + 447 contributors Languages Java 99.4% Other 0.6% You can\u2019t perform that action at this time.", "start_char_idx": 0, "end_char_idx": 2044, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5fd7803-774c-4aa1-94d0-a235fe305e93": {"__data__": {"id_": "c5fd7803-774c-4aa1-94d0-a235fe305e93", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_35_0.txt", "file_name": "github.com_35_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eb914b4b-1f61-42f8-bd2e-b4b1d56965ec", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_35_0.txt", "file_name": "github.com_35_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e7a1d874e9064ee2a6a0b9c169d41ffbea75e194cd06e59f61de265625b2aee0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fbf93781-d500-48b4-93c1-bf4ebe4424d9", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_21_2.txt", "file_name": "github.com_21_2.txt", "file_type": "text/plain", "file_size": 2375, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f7d189c2f4b2ea6132375d1b5f9458e93cd75a843e0d9549d4af336020e6e48e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a221466b-1b32-45bb-a1a9-07169edb8b0f", "node_type": "1", "metadata": {}, "hash": "9bd87cc2d172b2227682ed2067693ac40889840cc87276d2a3be27b7ef0e463c", "class_name": "RelatedNodeInfo"}}, "text": "GitHub - iluwatar/java-design-patterns: Design patterns implemented in Java Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert iluwatar / java-design-patterns Public Uh oh! There was an error while loading. Please reload this page . Notifications You must be signed in to change notification settings Fork 27k Star 91.9k Design patterns implemented in Java java-design-patterns.com License View license 91.9k stars 27k forks Branches Tags Activity Star Notifications You must be signed in to change notification settings iluwatar/java-design-patterns master Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 4,336 Commits .github .github .mvn/ wrapper .mvn/ wrapper abstract-document abstract-document abstract-factory abstract-factory active-object active-object actor-model actor-model acyclic-visitor acyclic-visitor adapter adapter ambassador ambassador anti-corruption-layer anti-corruption-layer arrange-act-assert arrange-act-assert async-method-invocation async-method-invocation backpressure backpressure balking balking bloc bloc bridge bridge builder builder business-delegate business-delegate bytecode bytecode caching caching callback callback chain-of-responsibility chain-of-responsibility circuit-breaker circuit-breaker clean-architecture clean-architecture client-session client-session collecting-parameter collecting-parameter collection-pipeline collection-pipeline combinator combinator command-query-responsibility-segregation command-query-responsibility-segregation command command commander commander component component composite-entity composite-entity composite-view composite-view composite composite context-object context-object converter converter curiously-recurring-template-pattern curiously-recurring-template-pattern currying currying data-access-object data-access-object data-bus data-bus data-locality data-locality data-mapper data-mapper data-transfer-object data-transfer-object decorator decorator delegation delegation dependency-injection dependency-injection dirty-flag dirty-flag domain-model domain-model double-buffer double-buffer double-checked-locking double-checked-locking double-dispatch double-dispatch dynamic-proxy dynamic-proxy event-aggregator event-aggregator event-based-asynchronous event-based-asynchronous event-driven-architecture event-driven-architecture event-queue event-queue event-sourcing event-sourcing execute-around execute-around extension-objects extension-objects facade facade factory-kit factory-kit factory-method factory-method factory factory fanout-fanin fanout-fanin feature-toggle feature-toggle filterer filterer fluent-interface fluent-interface flux flux flyweight flyweight front-controller front-controller function-composition function-composition game-loop game-loop gateway gateway guarded-suspension guarded-suspension half-sync-half-async half-sync-half-async health-check health-check hexagonal-architecture hexagonal-architecture identity-map identity-map intercepting-filter intercepting-filter interpreter interpreter iterator iterator layered-architecture layered-architecture lazy-loading lazy-loading leader-election leader-election leader-followers leader-followers localization localization lockable-object lockable-object map-reduce map-reduce marker-interface marker-interface master-worker master-worker mediator mediator memento memento metadata-mapping metadata-mapping microservices-aggregrator microservices-aggregrator microservices-api-gateway microservices-api-gateway microservices-client-side-ui-composition microservices-client-side-ui-composition microservices-distributed-tracing microservices-distributed-tracing microservices-idempotent-consumer microservices-idempotent-consumer microservices-log-aggregation microservices-log-aggregation View all files Repository files navigation Design Patterns Implemented in Java Read in different language : zh , ko , fr , tr , ar , es , pt , id , ru , de , ja , vi , bn , np , it , da Introduction Design patterns are the best, formalized practices a programmer can use to solve common problems when designing an application or system. Design patterns can speed up the development process by providing tested, proven development paradigms. Reusing design patterns helps prevent subtle issues that cause major problems, and it also improves code readability for coders and architects who are familiar with the patterns. Getting Started This site showcases Java Design Patterns. The solutions have been developed by experienced programmers and architects from the open-source community. The patterns can be browsed by their high-level descriptions or by looking at their source code. The source code examples are well commented and can be thought of as programming tutorials on how to implement a specific pattern. We use the most popular battle-proven open-source Java technologies. Before you dive into the material, you should be familiar with various Software Design Principles . All designs should be as simple as possible. You should start with KISS, YAGNI, and Do The Simplest Thing That Could Possibly Work principles. Complexity and patterns should only be introduced when they are needed for practical extensibility.", "start_char_idx": 0, "end_char_idx": 5464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a221466b-1b32-45bb-a1a9-07169edb8b0f": {"__data__": {"id_": "a221466b-1b32-45bb-a1a9-07169edb8b0f", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_35_0.txt", "file_name": "github.com_35_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eb914b4b-1f61-42f8-bd2e-b4b1d56965ec", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_35_0.txt", "file_name": "github.com_35_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e7a1d874e9064ee2a6a0b9c169d41ffbea75e194cd06e59f61de265625b2aee0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c5fd7803-774c-4aa1-94d0-a235fe305e93", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_35_0.txt", "file_name": "github.com_35_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c8f6a80bdc80c8a42955444d2ba3681766d3cdbd772178082333ef2156aa44ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8ecf7c1-2b27-469f-9930-24d85b4ff990", "node_type": "1", "metadata": {}, "hash": "b569ad371d7c3cd26e4f69f324212216477eb9f79d9cf2aa66cd32f57fa158f6", "class_name": "RelatedNodeInfo"}}, "text": "Reusing design patterns helps prevent subtle issues that cause major problems, and it also improves code readability for coders and architects who are familiar with the patterns. Getting Started This site showcases Java Design Patterns. The solutions have been developed by experienced programmers and architects from the open-source community. The patterns can be browsed by their high-level descriptions or by looking at their source code. The source code examples are well commented and can be thought of as programming tutorials on how to implement a specific pattern. We use the most popular battle-proven open-source Java technologies. Before you dive into the material, you should be familiar with various Software Design Principles . All designs should be as simple as possible. You should start with KISS, YAGNI, and Do The Simplest Thing That Could Possibly Work principles. Complexity and patterns should only be introduced when they are needed for practical extensibility. Once you are familiar with these concepts you can start drilling down into the available design patterns by any of the following approaches: Search for a specific pattern by name. Can't find one? Please report a new pattern here . Using tags such as Performance , Gang of Four or Data access . Using pattern categories, Creational , Behavioral , and others. Hopefully, you find the object-oriented solutions presented on this site useful in your architectures and have as much fun learning them as we had while developing them. How to Contribute If you are willing to contribute to the project you will find the relevant information in our developer wiki . We will help you and answer your questions in the Gitter chatroom . The Book The design patterns are now available as an e-book. Find out more about \"Open Source Java Design Patterns\" here: https://payhip.com/b/bNQFX The project contributors can get the book for free. Contact the maintainer via Gitter chatroom or email (iluwatar (at) gmail (dot) com ). Send a message that contains your email address, Github username, and a link to an accepted pull request. License This project is licensed under the terms of the MIT license. Contributors Ilkka Sepp\u00e4l\u00e4 \ud83d\udcc6 \ud83d\udea7 \ud83d\udd8b Subhrodip Mohanta \ud83d\udcbb \ud83d\udc40 \ud83d\udea7 amit1307 \ud83d\udcbb Narendra Pathai \ud83d\udcbb \ud83e\udd14 \ud83d\udc40 Jeroen Meulemeester \ud83d\udcbb Joseph McCarthy \ud83d\udcbb Thomas \ud83d\udcbb Anurag Agarwal \ud83d\udcbb Markus Moser", "start_char_idx": 4480, "end_char_idx": 6820, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8ecf7c1-2b27-469f-9930-24d85b4ff990": {"__data__": {"id_": "a8ecf7c1-2b27-469f-9930-24d85b4ff990", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "01bfc382eed14e123f6b35c37fc28fcef24d2f27ead0e4d8614bea93c61293d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a221466b-1b32-45bb-a1a9-07169edb8b0f", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_35_0.txt", "file_name": "github.com_35_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "054181ff558884b829b71a5f6c460241aed1cc76f9bf3226dc116c1b1c185936", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9a9a7ab-9fd0-4beb-9d9b-2b282a94bdf6", "node_type": "1", "metadata": {}, "hash": "3265ee998ba883fab5214a208489dc4136e201d92e81fff255b3d34f49b9101e", "class_name": "RelatedNodeInfo"}}, "text": "\ud83c\udfa8 \ud83d\udcbb \ud83e\udd14 Sabiq Ihab \ud83d\udcbb Amit Dixit \ud83d\udcbb Piyush Kailash Chaudhari \ud83d\udcbb joshzambales \ud83d\udcbb Kamil Pietruszka \ud83d\udcbb Zafar Khaydarov \ud83d\udcbb \ud83d\udcd6 Paul Campbell \ud83d\udcbb Argyro Sioziou \ud83d\udcbb TylerMcConville \ud83d\udcbb saksham93 \ud83d\udcbb nikhilbarar \ud83d\udcbb Colin But \ud83d\udcbb Ruslan \ud83d\udcbb Juho Kang \ud83d\udcbb Dheeraj Mummareddy \ud83d\udcbb Bernardo Sulzbach \ud83d\udcbb Aleksandar Dudukovic \ud83d\udcbb Yusuf Ayta\u015f \ud83d\udcbb Mih\u00e1ly Kuprivecz \ud83d\udcbb Stanislav Kapinus \ud83d\udcbb GVSharma \ud83d\udcbb Sr\u0111an Paunovi\u0107 \ud83d\udcbb Petros G. Sideris \ud83d\udcbb Pramod Gupta \ud83d\udc40 Amarnath Chandana \ud83d\udcbb Anurag870 \ud83d\udcbb \ud83d\udcd6 Wes Gilleland \ud83d\udcbb Harshraj Thakor \ud83d\udcbb Martin Vandenbussche \ud83d\udcbb Alexandru Somai \ud83d\udcbb Artur Mogozov \ud83d\udcbb anthony \ud83d\udcbb Christian Cygnus \ud83d\udcbb Dima Gubin \ud83d\udcbb Joshua Jimenez \ud83d\udcbb Kai Winter \ud83d\udcbb lbroman \ud83d\udcbb Przemek \ud83d\udcbb Prafful Agarwal \ud83d\udd8b Sanket Panhale \ud83d\udd8b staillebois \ud83d\udcbb Kriszti\u00e1n Nagy \ud83d\udcbb Alexander Ivanov \ud83d\udcbb Yosfik Alqadri \ud83d\udcbb Agust\u00ed Becerra Mil\u00e0 \ud83d\udcbb Juan Manuel Su\u00e1rez \ud83d\udcbb Luigi Cortese \ud83d\udcbb Katarzyna Rzepecka \ud83d\udcbb adamski.pro \ud83d\udcbb Shengli Bai \ud83d\udcbb Boris \ud83d\udcbb Dmitry Avershin \ud83d\udcbb \u9773\u9633 \ud83d\udcbb hoangnam2261 \ud83d\udcbb Arpit Jain \ud83d\udcbb J\u00f3n Ingi Sveinbj\u00f6rnsson \ud83d\udcbb Kirill Vlasov \ud83d\udcbb Mitchell Irvin \ud83d\udcbb Ranjeet \ud83d\udcbb PhoenixYip \ud83d\udcbb M Saif Asif \ud83d\udcbb kanwarpreet25 \ud83d\udcbb Leon Mak \ud83d\udcbb Per Wramdemark \ud83d\udcbb Evan Sia Wai Suan \ud83d\udcbb AnaghaSasikumar \ud83d\udcbb Christoffer Hamberg \ud83d\udcbb Dominik Gruntz \ud83d\udcbb Hannes \ud83d\udcbb Leo Guti\u00e9rrez Ram\u00edrez \ud83d\udcbb Zhang WH \ud83d\udcbb Christopher O'Connell \ud83d\udcbb George Mavroeidis \ud83d\udcbb Hemant Bothra \ud83d\udcbb \ud83c\udfa8 Kevin Peters \ud83d\udcbb George Aristy \ud83d\udcbb Mahendran Mookkiah \ud83d\udcbb Azureyjt \ud83d\udcbb gans \ud83d\udcbb Matt \ud83d\udd8b Gopinath Langote \ud83d\udcbb Hoswey \ud83d\udcbb Amit Pandey \ud83d\udcbb gwildor28 \ud83d\udd8b \u7530\u6d69 \ud83d\udd8b Stamatis Pitsios \ud83d\udcbb qza \ud83d\udcbb Rodolfo Forte \ud83d\udd8b Ankur Kaushal \ud83d\udcbb Ovidijus Okinskas \ud83d\udcbb Robert Kasperczyk \ud83d\udcbb Tapio Rautonen \ud83d\udcbb Yuri Orlov \ud83d\udcbb Varun Upadhyay \ud83d\udcbb Aditya Pal \ud83d\udcbb grzesiekkedzior \ud83d\udcbb \ud83d\udc40 Sivasubramani M \ud83d\udcbb Sami Airaksinen \ud83d\udcbb Janne Sinivirta \ud83d\udcbb Boris-Chengbiao Zhou \ud83d\udd8b Jacob Hein \ud83d\udd8b Richard Jones \ud83d\udd8b Rachel M.", "start_char_idx": 0, "end_char_idx": 1640, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9a9a7ab-9fd0-4beb-9d9b-2b282a94bdf6": {"__data__": {"id_": "d9a9a7ab-9fd0-4beb-9d9b-2b282a94bdf6", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "01bfc382eed14e123f6b35c37fc28fcef24d2f27ead0e4d8614bea93c61293d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8ecf7c1-2b27-469f-9930-24d85b4ff990", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4d92c82d73e362cab1ee5732b2b3c2525635e63910a32a7ccd7e64f0d2311801", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c793cb5-f938-4467-87c4-1baeebf0c56b", "node_type": "1", "metadata": {}, "hash": "4481f41cef682ec4e3a742d1395019e0dcc8ed5f6160a77f9736328d3ce5a32c", "class_name": "RelatedNodeInfo"}}, "text": "Carmena \ud83d\udd8b Zaerald Denze Lungos \ud83d\udd8b Lars Kappert \ud83d\udd8b Mike Liu \ud83c\udf0d Matt Dolan \ud83d\udcbb \ud83d\udc40 Manan \ud83d\udc40 Nishant Arora \ud83d\udcbb Peeyush \ud83d\udcbb Rakesh \ud83d\udcbb \ud83d\udc40 Wei Seng \ud83d\udcbb Ashish Trivedi \ud83d\udcbb \u6d2a\u6708\u9633 \ud83d\udcbb xdvrx1 \ud83d\udc40 \ud83e\udd14 Bethan Palmer \ud83d\udcbb Toxic Dreamz \ud83d\udcbb Edy Cu Tjong \ud83d\udcd6 Micha\u0142 Krzywa\u0144ski \ud83d\udcbb Stefan Birkner \ud83d\udcbb Fedor Skvorcov \ud83d\udcbb samilAyoub \ud83d\udcbb Vladislav Golubinov \ud83d\udcbb Swaraj \ud83d\udcbb Christoph Flick \ud83d\udcd6 Asc\u00eanio \ud83d\udc40 Domenico Sibilio \ud83d\udcd6 Akash Chandwani \ud83d\udc40 Pavlo Manannikov \ud83d\udcbb Eiman \ud83d\udcbb Rocky \ud83d\udcd6 Ibrahim ali abdelghany \ud83d\udc40 Girish Kulkarni \ud83d\udcd6 Omar Karazoun \ud83d\udcbb Jeff Evans \ud83d\udcbb Vivek Singh \ud83d\udcbb siavash \ud83d\udcbb ruchpeanuts \ud83d\udcd6 warp125 \ud83c\udf0d KHADIR Tayeb \ud83c\udf0d ignite1771 \ud83d\udcbb Halil Demir \ud83c\udf0d Rohit Singh \ud83d\udcbb byoungju94 \ud83d\udcbb Moustafa Farhat \ud83c\udf0d Martel Richard \ud83d\udcbb va1m \ud83d\udcbb Noam Greenshtain \ud83d\udcbb yonghong Xu \ud83d\udcd6 jinishavora \ud83d\udc40 \ud83d\udcbb Elvys Soares \ud83d\udcbb zWeBrain \ud83d\udcbb \u4f59\u6797\u9896 \ud83c\udf0d Alain \ud83c\udf0d VR \ud83d\udcd6 JackieNim \ud83d\udcbb EdisonE3 \ud83d\udcbb Tao \ud83d\udcbb Juan Manuel Abate \ud83c\udf0d Xenilo137 \ud83d\udcbb Samuel Souza \ud83d\udcbb \ud83d\udcd6 Marlo Henrique \ud83c\udf0d AndriyPyzh \ud83d\udcbb karthikbhat13 \ud83d\udcbb Morteza Adigozalpour \ud83d\udcbb Nagaraj Tantri \ud83d\udcbb Francesco Scuccimarri \ud83d\udcbb Conny Hansson \ud83d\udcd6 Muklas Rahmanto \ud83c\udf0d Vadim \ud83c\udf0d Simran Keshri \ud83d\udcbb JCarlos \ud83c\udf0d Ali Ghasemi \ud83d\udcbb Carl Dea \ud83d\udcbb Mozartus \ud83c\udf0d Manvi Goel \ud83d\udcd6 Anum Amin \ud83d\udcd6 Reo Uehara \ud83c\udf0d Fiordy \ud83d\udcd6 Harshal \ud83d\udcbb Abhinav Vashisth \ud83d\udcd6 Kevin \ud83d\udc40 \ud83d\udcbb Shrirang \ud83d\udc40 \ud83d\udcbb interactwithankush \ud83d\udcbb CharlieYu \ud83d\udcbb Leisterbecker \ud83d\udcbb DragonDreamer \ud83d\udcbb ShivanshCharak \ud83d\udcbb HattoriHenzo \ud83d\udcbb Arnab Sen \ud83d\udcbb MohanaRao SV \ud83d\udcbb Yonatan Karp-Rudin \ud83d\udcbb \ud83d\udc40 Oliani \ud83d\udcbb Renjie LIU \ud83d\udcbb perfect guy \ud83d\udcd6 xyllq999 \ud83d\udcbb Mohamed Bilal \ud83d\udcd6 Karshil sheth \ud83d\udcbb kongleong86 \ud83d\udcbb Aitor Fidalgo S\u00e1nchez \ud83c\udf0d \ud83d\udcd6 \ud83d\udc40 Victor He \ud83d\udcbb Minh Nguyen \ud83c\udf0d \ud83d\udcd6 Victor He \ud83d\udcd6 yiichan \ud83d\udcd6 Pan Sem \ud83d\udcd6 zhoumengyks \ud83d\udcbb you \ud83c\udf0d Thanks \ud83c\udf0d LazyProgrammer \ud83d\udcd6 Mohammed Faizan Ahmed \ud83d\udcd6 Bruno Fernandes \ud83d\udcbb SammanPali \ud83d\udcd6 Qixiang Chen \ud83d\udcd6 Shourya Manekar \ud83c\udf0d Alan \ud83c\udf0d JanFidor \ud83d\udcbb \ud83d\udcd6 Anton Yakutovich \ud83d\udcbb steph88ss \ud83d\udcd6 Yujan Ranjitkar \ud83c\udf0d yusha-g \ud83c\udf0d Robert Volkmann \ud83d\udcbb \ud83d\udc40 Bipin Kumar Chaurasia \ud83d\udcd6 KyleSong30 \ud83d\udcd6 u7281975 \ud83d\udcd6 harshalkhachane \ud83d\udcbb Tejas Singh \ud83d\udcd6 \ud83c\udf0d Sudarsan Balaji \ud83d\udcbb Vaibhav Agrawal \ud83d\udcd6 u7275858 \ud83d\udcbb prasad-333 \ud83d\udcd6 JurenXu \ud83d\udcbb murphShaw \ud83d\udcd6 XianWu99 \ud83d\udcd6 JoshuaSinglaANU \ud83d\udcbb Ricardo Ramos \ud83c\udf0d Farid Zouheir \ud83c\udf0d Vin\u00edcius A. B.", "start_char_idx": 1641, "end_char_idx": 3565, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c793cb5-f938-4467-87c4-1baeebf0c56b": {"__data__": {"id_": "5c793cb5-f938-4467-87c4-1baeebf0c56b", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "01bfc382eed14e123f6b35c37fc28fcef24d2f27ead0e4d8614bea93c61293d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9a9a7ab-9fd0-4beb-9d9b-2b282a94bdf6", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2dbc1b3202a21ade3be11246110ee5785f1c0a0508c25fb053ee764858a8855b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56a6c303-2ec0-432e-acd4-790d7f5946b0", "node_type": "1", "metadata": {}, "hash": "36c7ff9fa0f8ce88f7d4b251ef2dc3307060ae117a994f8977bd6bfe2ec2c0f8", "class_name": "RelatedNodeInfo"}}, "text": "B. \ud83c\udf0d Stefanel Stan \ud83d\udcbb Prince bhati \ud83c\udf0d WuLang \ud83d\udcd6 Hugo Kat \ud83d\udcbb Shivanagouda Agasimani \ud83d\udcbb Aparna \ud83d\udcbb Girolamo Giordano \ud83c\udf0d Chak-C \ud83d\udcbb Nakul Nambiar \ud83d\udcbb KarmaTashiCat \ud83c\udf0d marikattt \ud83d\udcbb Hashvardhan Parmar \ud83c\udf0d YongHwan \ud83d\udcd6 \ud83c\udf0d Shogo Hida \ud83c\udf0d Eugene \ud83d\udcbb Piyush \ud83d\udcd6 Rahul Raj \ud83d\udcbb Bharath Kalyan S \ud83d\udcbb Saiteja Reddy \ud83c\udf0d Enrique Clerici \ud83c\udf0d Ramil Sayetov \ud83c\udf0d \u4e1c\u65b9\u672a\u767d \ud83d\udcbb Fredrik Sejr \ud83c\udf0d akshatarora0013 \ud83d\udcbb Mughees Qasim \ud83d\udcbb behappyleee \ud83c\udf0d Ayush Thakur \ud83c\udf0d Anthony Bosch \ud83d\udcbb trananso \ud83d\udcd6 Giammaria Biffi \ud83c\udf0d Saiful Haque \ud83d\udcbb JabezBrew \ud83d\udcbb konstantin-goldman \ud83d\udcd6 Tien Nguyen Minh \ud83d\udcbb \ud83c\udf0d Vladimir \ud83c\udf0d Surjendu \ud83c\udf0d \ud83d\udcbb bakazhou \ud83d\udcbb Owen Leung \ud83d\udcbb Stavros Barousis \ud83d\udcd6 Syyed Ibrahim Abdullah \ud83c\udf0d JiaDi Zhang \ud83c\udf0d Sanchit Bansal \ud83d\udcd6 Md Saiful Islam \ud83d\udcd6 Antonio Addeo \ud83d\udcd6 \ud83d\udcbb Allagadda Sai Upendranath \ud83d\udcd6 Matheus Braga \ud83c\udf0d \ud83d\udcd6 Appari Satya Barghav \ud83d\udcd6 Marcel Ribeiro-Dantas \ud83d\udcd6 Muhammad Hanif", "start_char_idx": 3563, "end_char_idx": 4337, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56a6c303-2ec0-432e-acd4-790d7f5946b0": {"__data__": {"id_": "56a6c303-2ec0-432e-acd4-790d7f5946b0", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_35_2.txt", "file_name": "github.com_35_2.txt", "file_type": "text/plain", "file_size": 2442, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "641b7bea-e30f-40f2-bf15-fe10de32bc24", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_35_2.txt", "file_name": "github.com_35_2.txt", "file_type": "text/plain", "file_size": 2442, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f53dca6e999cbc29f32eb0dd2ab4d23b0b1616fe3071920908fd3f73c9e5402c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c793cb5-f938-4467-87c4-1baeebf0c56b", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d7e9c8dfd729a448aed10c5db2e416f9cde044046f6bbcb8e5eaf9eccf4ec5f1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bfc28ff-aaf5-4eae-8abe-10d99b52b15c", "node_type": "1", "metadata": {}, "hash": "2faf4be84471ae805b85259ec2e1d2d4377b192142937a5ed36d487ecae5da2e", "class_name": "RelatedNodeInfo"}}, "text": "Amrullah \ud83c\udf0d JackH408 \ud83d\udcd6 Shubham \ud83c\udf0d Nishant Jain \ud83d\udcd6 Rhitam Chaudhury \ud83d\udcd6 JerryZhao275 \ud83d\udcd6 Leonardo Lisanti \ud83c\udf0d Yennifer Herrera \ud83c\udf0d \ud83d\udc40 jnniu-n \ud83c\udf0d \ud83d\udcd6 Miguel Angel Perez Garcia \ud83d\udc40 \ud83c\udf0d Suwan Sankaja \ud83c\udf0d alok \ud83d\udcd6 Daniel Lisboa \ud83c\udf0d Sam Powell \ud83d\udcd6 Jo\u00e3o Fernandes \ud83c\udf0d Hong Geon-ui \ud83c\udf0d Doksanbir \ud83d\udcbb \ud83d\udcd6 \ud83d\udc40 Chant3ll3 \ud83d\udcd6 \ud83c\udf0d YongHwan Kwon \ud83d\udcbb Jakub Klimek \ud83d\udcbb believe \ud83c\udf0d egg0102030405 \ud83c\udf0d \ud83d\udcd6 Ved Asole \ud83d\udcbb NewMorning \ud83c\udf0d \u8d44\u6df1\u8001\u840c\u65b0 \ud83c\udf0d Seunghwan Jeon \ud83c\udf0d sugavanesh \ud83d\udcbb FinnS-F \ud83d\udcbb jerryyummy \ud83c\udf0d Manoj Chowdary \ud83d\udcbb Aditya \ud83d\udcd6 \ud83d\udcbb nooynayr \ud83d\udcd6 CYBERCRUX2 \ud83d\udcd6 Luis Mateo Hincapi\u00e9 Martinez \ud83c\udf0d \ud83d\udc40 guqing \ud83d\udcbb Sashir Estela \ud83d\udcbb omahs \ud83d\udcd6 leif e. \ud83d\udcbb Jun Kang \ud83d\udcbb Kishalay Pandey \ud83d\udcbb drishtii7 \ud83d\udcbb David Medina Orozco \ud83c\udf0d \ud83d\udc40 Roman Leontev \ud83d\udcbb Riley \ud83d\udcbb k1w1dev \ud83d\udcbb dev-yugantar \ud83d\udcbb Adelya \ud83d\udcbb gatlanagaprasanna \ud83d\udcd6 Avinash Shukla \ud83d\udcbb Mayank Choudhary \ud83d\udcbb romannimets \ud83d\udcbb Joel \ud83d\udcbb Walyson Moises \ud83d\udcbb Xcyq \ud83d\udcbb Ritabrata \ud83d\udc40 Trivikram Kamat \ud83d\udcbb Vincent Vanghelle \ud83c\udf0d Antoine H\u00e9ritier \ud83c\udf0d QinShower \ud83c\udf0d LakshyaPunyani-01 \ud83d\udcbb jasonjyu \ud83d\udcbb jeffmorrison \ud83d\udcbb David M. \ud83d\udcbb Patrick Kleindienst \ud83d\udcbb Juyeon \ud83c\udf0d Mammad Yahyayev \ud83d\udcd6 Salma \ud83d\udcbb Arpit Sarang \ud83d\udcbb Maya \ud83c\udf0d HabibaMekay \ud83d\udcbb Ahmed-Taha-981 \ud83d\udcbb Malak Elbanna \ud83d\udcbb BiKangNing \ud83d\udcd6 Tarun Vishwakarma \ud83d\udcbb Shahd Hossam \ud83d\udcbb Mehdi Rahimi \ud83d\udcbb Clint Air\u00e9 \ud83d\udcbb darkhyper24 \ud83d\udcbb Mohaned Atef \ud83d\udcbb Maxim Evtush \ud83d\udcbb Harshita Vidapanakal \ud83d\udcbb smile-ab \ud83c\udf0d \ud83d\udcbb Francisco-G-P \ud83c\udf0d Gabriel Duarte \ud83d\udcd6 Deniz Altunkapan \ud83c\udf0d John Klint \ud83d\udcbb Sanura Hettiarachchi \ud83d\udcbb Kim Gi Uk \ud83d\udcbb Suchismita Deb \ud83d\udcbb ssrijan-007-sys \ud83d\udcbb e5LA \ud83d\udcbb \ud83d\udcd6 Maziyar Gerami \ud83c\udf0d yoobin_mion \ud83d\udcbb About Design patterns implemented in Java java-design-patterns.com Topics java snippets design-patterns principles awesome-list hacktoberfest snippets-library snippets-collection Resources Readme License View license Uh oh! There was an error while loading. Please reload this page . Activity Stars 91.9k stars Watchers 3.7k watching Forks 27k forks Report repository Sponsor this project Sponsor Uh oh! There was an error while loading. Please reload this page . Learn more about GitHub Sponsors Uh oh! There was an error while loading. Please reload this page . Contributors 461 Uh oh! There was an error while loading. Please reload this page . + 447 contributors Languages Java 99.4% Other 0.6% You can\u2019t perform that action at this time.", "start_char_idx": 0, "end_char_idx": 2111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6bfc28ff-aaf5-4eae-8abe-10d99b52b15c": {"__data__": {"id_": "6bfc28ff-aaf5-4eae-8abe-10d99b52b15c", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_3_0.txt", "file_name": "github.com_3_0.txt", "file_type": "text/plain", "file_size": 2123, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "81e34460-1af6-4d5a-9004-edaa58c56d7b", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_3_0.txt", "file_name": "github.com_3_0.txt", "file_type": "text/plain", "file_size": 2123, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "edd97d3aec0b3b8315e70327137b07b022c7c7fb805f2cd7199480176640fdc1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56a6c303-2ec0-432e-acd4-790d7f5946b0", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_35_2.txt", "file_name": "github.com_35_2.txt", "file_type": "text/plain", "file_size": 2442, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f53dca6e999cbc29f32eb0dd2ab4d23b0b1616fe3071920908fd3f73c9e5402c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a87dbc3-f64d-42e2-bbe3-b28eebe8a8b4", "node_type": "1", "metadata": {}, "hash": "73514846693bde3f44baab154a2dc584b501ee040ebe81bdddf8f79a4cc46b91", "class_name": "RelatedNodeInfo"}}, "text": "GitHub - openjdk/jdk: JDK main-line development https://openjdk.org/projects/jdk Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert openjdk / jdk Public Notifications You must be signed in to change notification settings Fork 5.8k Star 21.1k JDK main-line development https://openjdk.org/projects/jdk License GPL-2.0 license 21.1k stars 5.8k forks Branches Tags Activity Star Notifications You must be signed in to change notification settings openjdk/jdk master Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 83,548 Commits .github .github .jcheck .jcheck bin bin doc doc make make src src test test .editorconfig .editorconfig .gitattributes .gitattributes .gitignore .gitignore ADDITIONAL_LICENSE_INFO ADDITIONAL_LICENSE_INFO ASSEMBLY_EXCEPTION ASSEMBLY_EXCEPTION CONTRIBUTING.md CONTRIBUTING.md LICENSE LICENSE Makefile Makefile README.md README.md SECURITY.md SECURITY.md configure configure View all files Repository files navigation Welcome to the JDK! For build instructions please see the online documentation , or either of these files: doc/building.html (html version) doc/building.md (markdown version) See https://openjdk.org/ for more information about the OpenJDK Community and the JDK and see https://bugs.openjdk.org for JDK issue tracking. About JDK main-line development https://openjdk.org/projects/jdk Topics java jvm openjdk Resources Readme License GPL-2.0 license Security policy Security policy Uh oh! There was an error while loading. Please reload this page . Activity Custom properties Stars 21.1k stars Watchers 346 watching Forks 5.8k forks Report repository Releases 1,016 tags Uh oh! There was an error while loading. Please reload this page . Contributors 847 + 833 contributors Languages Java 73.6% C++ 14.2% C 8.1% Assembly 2.8% Objective-C 0.4% HTML 0.3% Other 0.6% You can\u2019t perform that action at this time.", "start_char_idx": 0, "end_char_idx": 2121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a87dbc3-f64d-42e2-bbe3-b28eebe8a8b4": {"__data__": {"id_": "4a87dbc3-f64d-42e2-bbe3-b28eebe8a8b4", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_44_0.txt", "file_name": "github.com_44_0.txt", "file_type": "text/plain", "file_size": 4151, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23e1c9c2-c9a8-4a1d-bf1c-1683774a7b59", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_44_0.txt", "file_name": "github.com_44_0.txt", "file_type": "text/plain", "file_size": 4151, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "395e38af8c1bb1e6b381b027ee2e3406f41bb8b09f4cf2f11b6002d461e0b433", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bfc28ff-aaf5-4eae-8abe-10d99b52b15c", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_3_0.txt", "file_name": "github.com_3_0.txt", "file_type": "text/plain", "file_size": 2123, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "edd97d3aec0b3b8315e70327137b07b022c7c7fb805f2cd7199480176640fdc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16b4a3f9-ef31-4167-9d18-fbab3c07142e", "node_type": "1", "metadata": {}, "hash": "ab94b46e687ff186ad143bf126bfcd1dd55b61c76839f705b28151496efccc0a", "class_name": "RelatedNodeInfo"}}, "text": "GitHub - Netflix/zuul: Zuul is a gateway service that provides dynamic routing, monitoring, resiliency, security, and more. Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert Netflix / zuul Public Notifications You must be signed in to change notification settings Fork 2.4k Star 13.8k Zuul is a gateway service that provides dynamic routing, monitoring, resiliency, security, and more. License Apache-2.0 license 13.8k stars 2.4k forks Branches Tags Activity Star Notifications You must be signed in to change notification settings Netflix/zuul master Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 1,783 Commits .github .github codequality codequality gradle/ wrapper gradle/ wrapper zuul-core zuul-core zuul-discovery zuul-discovery zuul-integration-test zuul-integration-test zuul-processor zuul-processor zuul-sample zuul-sample .gitignore .gitignore .netflixoss .netflixoss CHANGELOG.md CHANGELOG.md LICENSE LICENSE OSSMETADATA OSSMETADATA README.md README.md build.gradle build.gradle dependencies.lock dependencies.lock gradle.properties gradle.properties gradlew gradlew gradlew.bat gradlew.bat settings.gradle settings.gradle View all files Repository files navigation Zuul Zuul is an L7 application gateway that provides capabilities for dynamic routing, monitoring, resiliency, security, and more. Please view the wiki for usage, information, HOWTO, etc https://github.com/Netflix/zuul/wiki Here are some links to help you learn more about the Zuul Project. Feel free to PR to add any other info, presentations, etc. Articles from Netflix: Zuul 1: http://techblog.netflix.com/2013/06/announcing-zuul-edge-service-in-cloud.html Zuul 2: https://netflixtechblog.com/open-sourcing-zuul-2-82ea476cb2b3 https://netflixtechblog.com/zuul-2-the-netflix-journey-to-asynchronous-non-blocking-systems-45947377fb5c https://netflixtechblog.com/the-show-must-go-on-securing-netflix-studios-at-scale-19b801c86479 Netflix presentations about Zuul: Strange Loop 2017 - Zuul 2: https://youtu.be/2oXqbLhMS_A AWS re:Invent 2018 - Scaling push messaging for millions of Netflix devices: https://youtu.be/IdR6N9B-S1E Slides from Netflix presentations about Zuul: http://www.slideshare.net/MikeyCohen1/zuul-netflix-springone-platform http://www.slideshare.net/MikeyCohen1/rethinking-cloud-proxies-54923218 https://github.com/strangeloop/StrangeLoop2017/blob/master/slides/ArthurGonigberg-ZuulsJourneyToNonBlocking.pdf https://www.slideshare.net/SusheelAroskar/scaling-push-messaging-for-millions-of-netflix-devices Projects Using Zuul: https://cloud.spring.io/ https://jhipster.github.io/ Info and examples from various projects: https://cloud.spring.io/spring-cloud-netflix/multi/multi__router_and_filter_zuul http://www.baeldung.com/spring-rest-with-zuul-proxy https://blog.heroku.com/using_netflix_zuul_to_proxy_your_microservices http://blog.ippon.tech/jhipster-3-0-introducing-microservices/ Other blog posts about Zuul: https://engineering.riotgames.com/news/riot-games-api-fulfilling-zuuls-destiny https://engineering.riotgames.com/news/riot-games-api-deep-dive http://instea.sk/2015/04/netflix-zuul-vs-nginx-performance/ How to release Zuul This project uses a GitHub Action workflow for publishing a new release. The workflow is triggered by a Git tag. git checkout master git tag vX.Y.Z git push --tags About Zuul is a gateway service that provides dynamic routing, monitoring, resiliency, security, and more. Resources Readme License Apache-2.0 license Uh oh! There was an error while loading. Please reload this page . Activity Custom properties Stars 13.8k stars Watchers 895 watching Forks 2.4k forks Report repository Releases 23 v3.0.8 Latest May 22, 2025 + 22 releases Packages 0 No packages published Uh oh!", "start_char_idx": 0, "end_char_idx": 3989, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16b4a3f9-ef31-4167-9d18-fbab3c07142e": {"__data__": {"id_": "16b4a3f9-ef31-4167-9d18-fbab3c07142e", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_44_0.txt", "file_name": "github.com_44_0.txt", "file_type": "text/plain", "file_size": 4151, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "23e1c9c2-c9a8-4a1d-bf1c-1683774a7b59", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_44_0.txt", "file_name": "github.com_44_0.txt", "file_type": "text/plain", "file_size": 4151, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "395e38af8c1bb1e6b381b027ee2e3406f41bb8b09f4cf2f11b6002d461e0b433", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a87dbc3-f64d-42e2-bbe3-b28eebe8a8b4", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_44_0.txt", "file_name": "github.com_44_0.txt", "file_type": "text/plain", "file_size": 4151, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5e6da37fcef38d943dae75d7d6f04642e7e585a240589968a1d47a52cd6f97f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19124f06-21ad-4002-a295-5604698876b6", "node_type": "1", "metadata": {}, "hash": "10ddb0f3b0f26a0e3ace659e63ca2296a246b21bbc2e098cc1d67db1f167465d", "class_name": "RelatedNodeInfo"}}, "text": "The workflow is triggered by a Git tag. git checkout master git tag vX.Y.Z git push --tags About Zuul is a gateway service that provides dynamic routing, monitoring, resiliency, security, and more. Resources Readme License Apache-2.0 license Uh oh! There was an error while loading. Please reload this page . Activity Custom properties Stars 13.8k stars Watchers 895 watching Forks 2.4k forks Report repository Releases 23 v3.0.8 Latest May 22, 2025 + 22 releases Packages 0 No packages published Uh oh! There was an error while loading. Please reload this page . Contributors 64 + 50 contributors Languages Java 100.0% You can\u2019t perform that action at this time.", "start_char_idx": 3486, "end_char_idx": 4149, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19124f06-21ad-4002-a295-5604698876b6": {"__data__": {"id_": "19124f06-21ad-4002-a295-5604698876b6", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_48_0.txt", "file_name": "github.com_48_0.txt", "file_type": "text/plain", "file_size": 5976, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b4ff668-f6e8-4590-aa89-0365a441d113", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_48_0.txt", "file_name": "github.com_48_0.txt", "file_type": "text/plain", "file_size": 5976, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5726f12f846d32c75c6e06e97b40f6fbb920efbcae48efb38c0f9450027b8ef4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16b4a3f9-ef31-4167-9d18-fbab3c07142e", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_44_0.txt", "file_name": "github.com_44_0.txt", "file_type": "text/plain", "file_size": 4151, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2e09fdaf59acbebf98b23d32cf1e0f8e8adf7e32767c00294cdc7cbab983614", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c393ae62-786d-4fbb-a886-a9fe1f7eaed0", "node_type": "1", "metadata": {}, "hash": "96d865b078175b58e090da123a30e4421a53e1d0217534f07126ae5fabdf84eb", "class_name": "RelatedNodeInfo"}}, "text": "GitHub - junit-team/junit5: \u2705 The programmer-friendly testing framework for Java and the JVM Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert junit-team / junit5 Public Uh oh! There was an error while loading. Please reload this page . Notifications You must be signed in to change notification settings Fork 1.6k Star 6.6k \u2705 The programmer-friendly testing framework for Java and the JVM junit.org License EPL-2.0 license 6.6k stars 1.6k forks Branches Tags Activity Star Notifications You must be signed in to change notification settings junit-team/junit5 main Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 9,467 Commits .github .github .idea .idea documentation documentation gradle gradle junit-bom junit-bom junit-jupiter-api junit-jupiter-api junit-jupiter-engine junit-jupiter-engine junit-jupiter-migrationsupport junit-jupiter-migrationsupport junit-jupiter-params junit-jupiter-params junit-jupiter junit-jupiter junit-platform-commons junit-platform-commons junit-platform-console-standalone junit-platform-console-standalone junit-platform-console junit-platform-console junit-platform-engine junit-platform-engine junit-platform-jfr junit-platform-jfr junit-platform-launcher junit-platform-launcher junit-platform-reporting junit-platform-reporting junit-platform-suite-api junit-platform-suite-api junit-platform-suite-commons junit-platform-suite-commons junit-platform-suite-engine junit-platform-suite-engine junit-platform-suite junit-platform-suite junit-platform-testkit junit-platform-testkit junit-vintage-engine junit-vintage-engine jupiter-tests jupiter-tests platform-tests platform-tests platform-tooling-support-tests platform-tooling-support-tests .editorconfig .editorconfig .gitattributes .gitattributes .gitignore .gitignore CODE_OF_CONDUCT.md CODE_OF_CONDUCT.md CONTRIBUTING.md CONTRIBUTING.md KEYS KEYS LICENSE.md LICENSE.md NOTICE.md NOTICE.md README.md README.md RELEASING.md RELEASING.md SECURITY.md SECURITY.md build.gradle.kts build.gradle.kts gradle.properties gradle.properties gradlew gradlew gradlew.bat gradlew.bat settings.gradle.kts settings.gradle.kts View all files Repository files navigation JUnit This repository is the home of JUnit Platform, Jupiter, and Vintage. Sponsors Gold Sponsors: JetBrains , Netflix Silver Sponsors: Micromata , Quo Card Bronze Sponsors: Premium Minds , codefortynine , Info Support , Code Intelligence , Route4Me , Testiny Latest Releases General Availability (GA): JUnit 5.12.2 (April 11, 2025) Preview (Milestone/Release Candidate): JUnit 5.13.0-RC1 (May 16, 2025) Documentation User Guide Javadoc Release Notes Samples Contributing Contributions to JUnit are both welcomed and appreciated. For specific guidelines regarding contributions, please see CONTRIBUTING.md in the root directory of the project. Those willing to use milestone or SNAPSHOT releases are encouraged to file feature requests and bug reports using the project's issue tracker . Issues marked with an up-for-grabs label are specifically targeted for community contributions. Getting Help Ask JUnit-related questions on StackOverflow or chat with the community on Gitter . Continuous Integration Builds Official CI build server used to perform quick checks on submitted pull requests and for build matrices including the latest released OpenJDK and early access builds of the next OpenJDK. Code Coverage Code coverage using JaCoCo for the latest build is available on Codecov . A code coverage report can also be generated locally via the Gradle Wrapper by executing ./gradlew clean jacocoRootReport . The results will be available in build/reports/jacoco/jacocoRootReport/html/index.html . Develocity JUnit utilizes Develocity for Build Scans , Build Cache , and Predictive Test Selection . The latest Build Scans are available on ge.junit.org . Currently, only core team members can publish Build Scans on that server. You can, however, publish a Build Scan to scans.gradle.com by using the --scan parameter explicitly. The remote Build Cache is enabled by default for everyone so that local builds can reuse task outputs from previous CI builds. Building from Source You need JDK 21 to build JUnit. Gradle toolchains are used to detect and potentially download additional JDKs for compilation and test execution. All modules can be built and tested with the Gradle Wrapper using the following command. ./gradlew build Installing in Local Maven Repository All modules can be installed with the Gradle Wrapper in a local Maven repository for consumption in other projects via the following command.", "start_char_idx": 0, "end_char_idx": 4829, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c393ae62-786d-4fbb-a886-a9fe1f7eaed0": {"__data__": {"id_": "c393ae62-786d-4fbb-a886-a9fe1f7eaed0", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_48_0.txt", "file_name": "github.com_48_0.txt", "file_type": "text/plain", "file_size": 5976, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b4ff668-f6e8-4590-aa89-0365a441d113", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_48_0.txt", "file_name": "github.com_48_0.txt", "file_type": "text/plain", "file_size": 5976, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5726f12f846d32c75c6e06e97b40f6fbb920efbcae48efb38c0f9450027b8ef4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19124f06-21ad-4002-a295-5604698876b6", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_48_0.txt", "file_name": "github.com_48_0.txt", "file_type": "text/plain", "file_size": 5976, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d1fb4ceb37605b83510e7b3c53efa3574cf843bd3f3af62ae856722f27cfc9ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e0f6a0e2-0a05-4e87-9bfc-e52220861e23", "node_type": "1", "metadata": {}, "hash": "2dff156e2a754eed24b26499e3d15765c8a0b32d3e0315e0c51097c6e6f31b59", "class_name": "RelatedNodeInfo"}}, "text": "Develocity JUnit utilizes Develocity for Build Scans , Build Cache , and Predictive Test Selection . The latest Build Scans are available on ge.junit.org . Currently, only core team members can publish Build Scans on that server. You can, however, publish a Build Scan to scans.gradle.com by using the --scan parameter explicitly. The remote Build Cache is enabled by default for everyone so that local builds can reuse task outputs from previous CI builds. Building from Source You need JDK 21 to build JUnit. Gradle toolchains are used to detect and potentially download additional JDKs for compilation and test execution. All modules can be built and tested with the Gradle Wrapper using the following command. ./gradlew build Installing in Local Maven Repository All modules can be installed with the Gradle Wrapper in a local Maven repository for consumption in other projects via the following command. ./gradlew publishToMavenLocal Dependency Metadata Consult the Dependency Metadata section of the User Guide for a list of all artifacts of the JUnit Platform, JUnit Jupiter, and JUnit Vintage. See also https://repo1.maven.org/maven2/org/junit/ for releases and https://central.sonatype.com/service/rest/repository/browse/maven-snapshots/org/junit/ for snapshots. About \u2705 The programmer-friendly testing framework for Java and the JVM junit.org Topics kotlin java junit test-framework kotlin-testing junit-vintage junit-jupiter junit-platform Resources Readme License EPL-2.0 license Code of conduct Code of conduct Security policy Security policy Uh oh! There was an error while loading. Please reload this page . Activity Custom properties Stars 6.6k stars Watchers 270 watching Forks 1.6k forks Report repository Releases 87 JUnit 5.12.2 Latest Apr 11, 2025 + 86 releases Sponsor this project Uh oh! There was an error while loading. Please reload this page . https://junit.org/sponsoring Used by 534k + 533,923 Contributors 247 + 233 contributors Languages Java 98.5% Kotlin 1.3% Groovy 0.2% You can\u2019t perform that action at this time.", "start_char_idx": 3921, "end_char_idx": 5968, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e0f6a0e2-0a05-4e87-9bfc-e52220861e23": {"__data__": {"id_": "e0f6a0e2-0a05-4e87-9bfc-e52220861e23", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_49_0.txt", "file_name": "github.com_49_0.txt", "file_type": "text/plain", "file_size": 5854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be0df209-e10d-428b-a774-09798cfec168", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_49_0.txt", "file_name": "github.com_49_0.txt", "file_type": "text/plain", "file_size": 5854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a97fa93e74b484191ec5786b935f0eef762635ce8879f1eee04f96224d7797fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c393ae62-786d-4fbb-a886-a9fe1f7eaed0", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_48_0.txt", "file_name": "github.com_48_0.txt", "file_type": "text/plain", "file_size": 5976, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "fb13fb2e1848c523c92a0b6b2591d771fa00416b4d2973b57cad5684f9eb4f68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d430096-a3c4-4dba-9c52-ace0e480fe71", "node_type": "1", "metadata": {}, "hash": "bfbdb09d761c55fe42b40a254e7506f6dcb6e6c77a4446fb15eb3b2ae5569579", "class_name": "RelatedNodeInfo"}}, "text": "GitHub - square/okhttp: Square\u2019s meticulous HTTP client for the JVM, Android, and GraalVM. Skip to content You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert square / okhttp Public Notifications You must be signed in to change notification settings Fork 9.2k Star 46.4k Square\u2019s meticulous HTTP client for the JVM, Android, and GraalVM. square.github.io/okhttp/ License Apache-2.0 license 46.4k stars 9.2k forks Branches Tags Activity Star Notifications You must be signed in to change notification settings square/okhttp master Branches Tags Go to file Code Folders and files Name Name Last commit message Last commit date Latest commit History 5,843 Commits .devcontainer .devcontainer .github .github .idea .idea .junit.run .junit.run .vscode .vscode android-test-app android-test-app android-test android-test buildSrc buildSrc container-tests container-tests docs docs fuzzing fuzzing gradle gradle kotlin-js-store kotlin-js-store mockwebserver-deprecated mockwebserver-deprecated mockwebserver-junit4 mockwebserver-junit4 mockwebserver-junit5 mockwebserver-junit5 mockwebserver mockwebserver native-image-tests native-image-tests okcurl okcurl okhttp-bom okhttp-bom okhttp-brotli okhttp-brotli okhttp-coroutines okhttp-coroutines okhttp-dnsoverhttps okhttp-dnsoverhttps okhttp-hpacktests okhttp-hpacktests okhttp-idna-mapping-table okhttp-idna-mapping-table okhttp-java-net-cookiejar okhttp-java-net-cookiejar okhttp-logging-interceptor okhttp-logging-interceptor okhttp-osgi-tests okhttp-osgi-tests okhttp-sse okhttp-sse okhttp-testing-support okhttp-testing-support okhttp-tls okhttp-tls okhttp-urlconnection okhttp-urlconnection okhttp okhttp regression-test regression-test samples samples .editorconfig .editorconfig .gitattributes .gitattributes .gitignore .gitignore .gitmodules .gitmodules BUG-BOUNTY.md BUG-BOUNTY.md CHANGELOG.md CHANGELOG.md CONTRIBUTING.md CONTRIBUTING.md LICENSE.txt LICENSE.txt README.md README.md build.gradle.kts build.gradle.kts deploy_website.sh deploy_website.sh gradle.properties gradle.properties gradlew gradlew gradlew.bat gradlew.bat mkdocs.yml mkdocs.yml settings.gradle.kts settings.gradle.kts test_docs.sh test_docs.sh View all files Repository files navigation OkHttp See the project website for documentation and APIs. HTTP is the way modern applications network. It\u2019s how we exchange data & media. Doing HTTP efficiently makes your stuff load faster and saves bandwidth. OkHttp is an HTTP client that\u2019s efficient by default: HTTP/2 support allows all requests to the same host to share a socket. Connection pooling reduces request latency (if HTTP/2 isn\u2019t available). Transparent GZIP shrinks download sizes. Response caching avoids the network completely for repeat requests. OkHttp perseveres when the network is troublesome: it will silently recover from common connection problems. If your service has multiple IP addresses, OkHttp will attempt alternate addresses if the first connect fails. This is necessary for IPv4+IPv6 and services hosted in redundant data centers. OkHttp supports modern TLS features (TLS 1.3, ALPN, certificate pinning). It can be configured to fall back for broad connectivity. Using OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It supports both synchronous blocking calls and async calls with callbacks. A well behaved user agent OkHttp follows modern HTTP specifications such as HTTP Semantics - RFC 9110 HTTP Caching- RFC 9111 HTTP/1.1 - RFC 9112 HTTP/2 - RFC 9113 Websockets - RFC 6455 SSE - Server-sent events Where the spec is ambiguous, OkHttp follows modern user agents such as popular Browsers or common HTTP Libraries. OkHttp is principled and avoids being overly configurable, especially when such configuration is to workaround a buggy server, test invalid scenarios or that contradict the relevant RFC. Other HTTP libraries exist that fill that gap allowing extensive customisation including potentially invalid requests. Example Limitations Does not allow GET with a body. Cache is not an interface with alternative implementations. Get a URL This program downloads a URL and prints its contents as a string. Full source . OkHttpClient client = new OkHttpClient (); String run ( String url ) throws IOException { Request request = new Request . Builder () . url ( url ) . build (); try ( Response response = client . newCall ( request ). execute ()) { return response . body ().", "start_char_idx": 0, "end_char_idx": 4611, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d430096-a3c4-4dba-9c52-ace0e480fe71": {"__data__": {"id_": "4d430096-a3c4-4dba-9c52-ace0e480fe71", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_49_0.txt", "file_name": "github.com_49_0.txt", "file_type": "text/plain", "file_size": 5854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be0df209-e10d-428b-a774-09798cfec168", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_49_0.txt", "file_name": "github.com_49_0.txt", "file_type": "text/plain", "file_size": 5854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a97fa93e74b484191ec5786b935f0eef762635ce8879f1eee04f96224d7797fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e0f6a0e2-0a05-4e87-9bfc-e52220861e23", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_49_0.txt", "file_name": "github.com_49_0.txt", "file_type": "text/plain", "file_size": 5854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "acb599ca0dc91121a74b08c45bf4ace27619cde043125685248501044c52549c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d527d2e-c92e-4f45-8dd6-ac0954956e1b", "node_type": "1", "metadata": {}, "hash": "2e5f78bf8b381c506cf87f4ac61246b0a0aa2507e264ba9a047253a13f5c8bdc", "class_name": "RelatedNodeInfo"}}, "text": "OkHttp is principled and avoids being overly configurable, especially when such configuration is to workaround a buggy server, test invalid scenarios or that contradict the relevant RFC. Other HTTP libraries exist that fill that gap allowing extensive customisation including potentially invalid requests. Example Limitations Does not allow GET with a body. Cache is not an interface with alternative implementations. Get a URL This program downloads a URL and prints its contents as a string. Full source . OkHttpClient client = new OkHttpClient (); String run ( String url ) throws IOException { Request request = new Request . Builder () . url ( url ) . build (); try ( Response response = client . newCall ( request ). execute ()) { return response . body (). string (); } } Post to a Server This program posts data to a service. Full source . public static final MediaType JSON = MediaType . get ( \"application/json\" ); OkHttpClient client = new OkHttpClient (); String post ( String url , String json ) throws IOException { RequestBody body = RequestBody . create ( json , JSON ); Request request = new Request . Builder () . url ( url ) . post ( body ) . build (); try ( Response response = client . newCall ( request ). execute ()) { return response . body (). string (); } } Further examples are on the OkHttp Recipes page . Requirements OkHttp works on Android 5.0+ (API level 21+) and Java 8+. OkHttp depends on Okio for high-performance I/O and the Kotlin standard library . Both are small libraries with strong backward-compatibility. We highly recommend you keep OkHttp up-to-date. As with auto-updating web browsers, staying current with HTTPS clients is an important defense against potential security problems. We track the dynamic TLS ecosystem and adjust OkHttp to improve connectivity and security. OkHttp uses your platform's built-in TLS implementation. On Java platforms OkHttp also supports Conscrypt , which integrates BoringSSL with Java. OkHttp will use Conscrypt if it", "start_char_idx": 3848, "end_char_idx": 5844, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d527d2e-c92e-4f45-8dd6-ac0954956e1b": {"__data__": {"id_": "9d527d2e-c92e-4f45-8dd6-ac0954956e1b", "embedding": null, "metadata": {"file_path": "docs\\java\\github.com_49_1.txt", "file_name": "github.com_49_1.txt", "file_type": "text/plain", "file_size": 2938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efe25d72-303a-44c9-af0c-b14c834c1102", "node_type": "4", "metadata": {"file_path": "docs\\java\\github.com_49_1.txt", "file_name": "github.com_49_1.txt", "file_type": "text/plain", "file_size": 2938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "7f9794045dc787e4a41317bd9013babfc1cec0ea73acbb1f0e652be8b5fc8e5d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d430096-a3c4-4dba-9c52-ace0e480fe71", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_49_0.txt", "file_name": "github.com_49_0.txt", "file_type": "text/plain", "file_size": 5854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d741b179c320ca8ac4fd89a7aa8087b389a0dd4492e9f9c5ba5d30d1900541a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94e80161-ee2a-4933-bea8-dba51b2b1523", "node_type": "1", "metadata": {}, "hash": "c4e8a80934f40c337a172f7ffd31b745a4f49b2843ddc540afba116a829bdb88", "class_name": "RelatedNodeInfo"}}, "text": "is the first security provider: Security . insertProviderAt ( Conscrypt . newProvider (), 1 ); The OkHttp 3.12.x branch supports Android 2.3+ (API level 9+) and Java 7+. These platforms lack support for TLS 1.2 and should not be used. Releases Our change log has release history. The latest release is available on Maven Central . implementation( \" com.squareup.okhttp3:okhttp:4.12.0 \" ) Snapshot builds are available . R8 and ProGuard rules are available. Also, we have a bill of materials (BOM) available to help you keep OkHttp artifacts up to date and be sure about version compatibility. dependencies { // define a BOM and its version implementation(platform( \" com.squareup.okhttp3:okhttp-bom:4.12.0 \" )) // define any required OkHttp artifacts without version implementation( \" com.squareup.okhttp3:okhttp \" ) implementation( \" com.squareup.okhttp3:logging-interceptor \" ) } MockWebServer OkHttp includes a library for testing HTTP, HTTPS, and HTTP/2 clients. The latest release is available on Maven Central . testImplementation( \" com.squareup.okhttp3:mockwebserver:4.12.0 \" ) MockWebServer is used for firstly for internal testing, and for basic testing of apps using OkHttp client. It is not a full featured HTTP testing library that is developed standalone. It is not being actively developed for new features. As such you might find your needs outgrow MockWebServer and you may which to use a more full featured testing library such as MockServer . GraalVM Native Image Building your native images with Graal https://www.graalvm.org/ should work automatically. This is not currently in a final released version, so 5.0.0-alpha.2 should be used. Please report any bugs or workarounds you find. See the okcurl module for an example build. $ ./gradlew okcurl:nativeImage $ ./okcurl/build/graal/okcurl https://httpbin.org/get License Copyright 2019 Square, Inc. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. About Square\u2019s meticulous HTTP client for the JVM, Android, and GraalVM. square.github.io/okhttp/ Topics android kotlin java graalvm Resources Readme License Apache-2.0 license Uh oh! There was an error while loading. Please reload this page . Activity Custom properties Stars 46.4k stars Watchers 1.6k watching Forks 9.2k forks Report repository Releases 128 tags Uh oh! There was an error while loading. Please reload this page . Contributors 284 + 270 contributors Languages Kotlin 99.6% Other 0.4% You can\u2019t perform that action at this time.", "start_char_idx": 0, "end_char_idx": 2934, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94e80161-ee2a-4933-bea8-dba51b2b1523": {"__data__": {"id_": "94e80161-ee2a-4933-bea8-dba51b2b1523", "embedding": null, "metadata": {"file_path": "docs\\java\\java_1_chunk_1.txt", "file_name": "java_1_chunk_1.txt", "file_type": "text/plain", "file_size": 886, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b0ddc902-9eee-4607-8eb0-91618fc6b1fc", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_1_chunk_1.txt", "file_name": "java_1_chunk_1.txt", "file_type": "text/plain", "file_size": 886, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2979a58d953936195034b303d977f6a72d71841791952b6ac329d601f611ee3a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d527d2e-c92e-4f45-8dd6-ac0954956e1b", "node_type": "1", "metadata": {"file_path": "docs\\java\\github.com_49_1.txt", "file_name": "github.com_49_1.txt", "file_type": "text/plain", "file_size": 2938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "7f9794045dc787e4a41317bd9013babfc1cec0ea73acbb1f0e652be8b5fc8e5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0363992-611a-4f7c-b93a-56be493f7b4d", "node_type": "1", "metadata": {}, "hash": "34033250e416edcf941ceb731f5e3ff6a62c9ef027caffd00849a0967dd5a7c7", "class_name": "RelatedNodeInfo"}}, "text": "Tutorial Contents Tutorial Resources In Book Form Other Resources Oracle Training and Professional Certification Software The Java Tutorials have been written for JDK 8. Examples and practices described in this page don't take advantage of improvements introduced in later releases and might use technology no longer available.SeeDev.javafor updated tutorials taking advantage of the latest releases.SeeJava Language Changesfor a summary of updated language features in Java SE 9 and subsequent releases.SeeJDK Release Notesfor information about new features, enhancements, and removed or deprecated options for all JDK releases. The Java Tutorials are practical guides for programmers who want to use the Java programming language to create applications. They include hundreds of complete, working examples, and dozens of lessons. Groups of related lessons are organized into \"trails\".", "start_char_idx": 0, "end_char_idx": 886, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0363992-611a-4f7c-b93a-56be493f7b4d": {"__data__": {"id_": "a0363992-611a-4f7c-b93a-56be493f7b4d", "embedding": null, "metadata": {"file_path": "docs\\java\\java_1_chunk_2.txt", "file_name": "java_1_chunk_2.txt", "file_type": "text/plain", "file_size": 1005, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97d2a85f-a0c8-4601-b4c5-c4e50afa78f2", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_1_chunk_2.txt", "file_name": "java_1_chunk_2.txt", "file_type": "text/plain", "file_size": 1005, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4c83096a92ceafff48dd99062cbe6ebbb443ba6f2d1f75f368c024fd9e6785dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94e80161-ee2a-4933-bea8-dba51b2b1523", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_1_chunk_1.txt", "file_name": "java_1_chunk_1.txt", "file_type": "text/plain", "file_size": 886, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2979a58d953936195034b303d977f6a72d71841791952b6ac329d601f611ee3a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e2d2eed-f7cd-4637-8c26-b2415bb74a05", "node_type": "1", "metadata": {}, "hash": "83b7e98ed1e2aead58e32ca18034fba5566593dd5ed6efa9b7135ef4e344c22b", "class_name": "RelatedNodeInfo"}}, "text": "Trails Covering the Basics Getting Started\u2014 An introduction to Java technology and lessons on installing Java development software and using it to create a simple program. Learning the Java Language\u2014 Lessons describing the essential concepts and features of the Java Programming Language. Essential Java Classes\u2014 Lessons on exceptions, basic input/output, concurrency, regular expressions, and the platform environment. Collections\u2014 Lessons on using and extending the Java Collections Framework. Date-Time APIs\u2014 How to use thejava.timepages to write date and time code. Deployment\u2014 How to package applications and applets using JAR files, and deploy them using Java Web Start and Java Plug-in. Preparation for Java Programming Language Certification\u2014 List of available training and tutorial resources. Creating Graphical User Interfaces Creating a GUI with Swing\u2014 A comprehensive introduction to GUI creation on the Java platform. Creating a JavaFX GUI\u2014 A collection of JavaFX tutorials.", "start_char_idx": 0, "end_char_idx": 987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e2d2eed-f7cd-4637-8c26-b2415bb74a05": {"__data__": {"id_": "1e2d2eed-f7cd-4637-8c26-b2415bb74a05", "embedding": null, "metadata": {"file_path": "docs\\java\\java_1_chunk_3.txt", "file_name": "java_1_chunk_3.txt", "file_type": "text/plain", "file_size": 1010, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4cbac0d-8847-4e9a-90bc-2a27a35d4eeb", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_1_chunk_3.txt", "file_name": "java_1_chunk_3.txt", "file_type": "text/plain", "file_size": 1010, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3bcc1eb6804e8852071a6cc51f18f41cc62a63247218c0049874a770ea211600", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0363992-611a-4f7c-b93a-56be493f7b4d", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_1_chunk_2.txt", "file_name": "java_1_chunk_2.txt", "file_type": "text/plain", "file_size": 1005, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4c83096a92ceafff48dd99062cbe6ebbb443ba6f2d1f75f368c024fd9e6785dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65dc647c-e1a4-4ace-87f9-9a9235e11006", "node_type": "1", "metadata": {}, "hash": "ee31e06f2f661c6914d1758d46ae3a4f8cfaeb4c2c856a805c13f90fd5a21022", "class_name": "RelatedNodeInfo"}}, "text": "Specialized Trails and Lessons These trails and lessons are only available as web pages. Custom Networking\u2014 An introduction to the Java platform's powerful networking features. The Extension Mechanism\u2014 How to make custom APIs available to all applications running on the Java platform. Full-Screen Exclusive Mode API\u2014 How to write applications that more fully utilize the user's graphics hardware. Generics\u2014 An enhancement to the type system that supports operations on objects of various types while providing compile-time type safety. Note that this lesson is for advanced users. TheJava Languagetrail contains aGenericslesson that is suitable for beginners. Internationalization\u2014 An introduction to designing software so that it can be easily adapted (localized) to various languages and regions. JavaBeans\u2014 The Java platform's component technology. JAXB\u2014 Introduces the Java architecture for XML Binding (JAXB) technology. JAXP\u2014 Introduces the Java API for XML Processing (JAXP) technology.", "start_char_idx": 0, "end_char_idx": 994, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65dc647c-e1a4-4ace-87f9-9a9235e11006": {"__data__": {"id_": "65dc647c-e1a4-4ace-87f9-9a9235e11006", "embedding": null, "metadata": {"file_path": "docs\\java\\java_1_chunk_4.txt", "file_name": "java_1_chunk_4.txt", "file_type": "text/plain", "file_size": 951, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5957df19-5436-46bb-9370-ebba5efdbd70", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_1_chunk_4.txt", "file_name": "java_1_chunk_4.txt", "file_type": "text/plain", "file_size": 951, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d8c79a4be9e5354e54d484a979a2c3a41411dc2bc652646b52100ff447b74a0c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e2d2eed-f7cd-4637-8c26-b2415bb74a05", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_1_chunk_3.txt", "file_name": "java_1_chunk_3.txt", "file_type": "text/plain", "file_size": 1010, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3bcc1eb6804e8852071a6cc51f18f41cc62a63247218c0049874a770ea211600", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fe9ca16-90f6-4445-8adf-1ab8e5e4b83a", "node_type": "1", "metadata": {}, "hash": "11cf5e361e97459288f571fb846e0c6f9c7b5a536e313ad3f922ff7625712cf4", "class_name": "RelatedNodeInfo"}}, "text": "JDBC Database Access\u2014 Introduces an API for connectivity between the Java applications and a wide range of databases and data sources. JMX\u2014 Java Management Extensions provides a standard way of managing resources such as applications, devices, and services. JNDI\u2014 Java Naming and Directory Interface enables accessing the Naming and Directory Service such as DNS and LDAP. Reflection\u2014 An API that represents (\"reflects\") the classes, interfaces, and objects in the current Java Virtual Machine. RMI\u2014 The Remote Method Invocation API allows an object to invoke methods of an object running on another Java Virtual Machine. Security\u2014 Java platform features that help protect applications from malicious software. Sockets Direct Protocol\u2014 How to enable the Sockets Direct Protocol to take advantage of InfiniBand. Sound\u2014 An API for playing sound data from applications. 2D Graphics\u2014 How to display and print 2D graphics in applications.", "start_char_idx": 0, "end_char_idx": 933, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9fe9ca16-90f6-4445-8adf-1ab8e5e4b83a": {"__data__": {"id_": "9fe9ca16-90f6-4445-8adf-1ab8e5e4b83a", "embedding": null, "metadata": {"file_path": "docs\\java\\java_1_chunk_5.txt", "file_name": "java_1_chunk_5.txt", "file_type": "text/plain", "file_size": 145, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03f8fe6d-2d91-4c3e-bc84-3bce48ba8d8c", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_1_chunk_5.txt", "file_name": "java_1_chunk_5.txt", "file_type": "text/plain", "file_size": 145, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3756f9bc67aabc8a0bd4cdd808242814078beb9f4bbe54798eb3f051b0dc002d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65dc647c-e1a4-4ace-87f9-9a9235e11006", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_1_chunk_4.txt", "file_name": "java_1_chunk_4.txt", "file_type": "text/plain", "file_size": 951, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d8c79a4be9e5354e54d484a979a2c3a41411dc2bc652646b52100ff447b74a0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db799b0a-4ce5-45d5-8a58-041cd29c73ae", "node_type": "1", "metadata": {}, "hash": "0f52b9dd6cb7bce90aca8f225c28912e59c5eebb7ec6f0de762858b7f9c6ba9f", "class_name": "RelatedNodeInfo"}}, "text": "About Oracle|Contact Us|Legal Notices|Terms of Use|Your Privacy Rights Copyright \u00a9 1995, 2024 Oracle and/or its affiliates. All rights reserved.", "start_char_idx": 0, "end_char_idx": 144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db799b0a-4ce5-45d5-8a58-041cd29c73ae": {"__data__": {"id_": "db799b0a-4ce5-45d5-8a58-041cd29c73ae", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_1.txt", "file_name": "java_2_chunk_1.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3aecbbfd-1337-4b21-a2bc-c44d8e057d1a", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_1.txt", "file_name": "java_2_chunk_1.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "721c15b9e6f8e29bc77ec7f035461b3dbaf8ad3742a59a9e0511fac13722201f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fe9ca16-90f6-4445-8adf-1ab8e5e4b83a", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_1_chunk_5.txt", "file_name": "java_1_chunk_5.txt", "file_type": "text/plain", "file_size": 145, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3756f9bc67aabc8a0bd4cdd808242814078beb9f4bbe54798eb3f051b0dc002d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad7b96be-7da1-4a62-bc4c-ff70b78ff484", "node_type": "1", "metadata": {}, "hash": "ade0fbc462976bf0a86ec9c2bc4b2293b3e01abd81b4d242fb5944f3a8f56c0e", "class_name": "RelatedNodeInfo"}}, "text": "CoursesDSA to DevelopmentGATE 2026 PrepGet 3 IBM CertificationsFor Working ProfessionalsInterview 101: DSA & System DesignData Science Training ProgramJAVA Backend Development (Live)Data Analytics TrainingDevOps Engineering (LIVE)Data Structures & Algorithms in PythonFor StudentsPlacement Preparation with DSAData Science (Live)Data Structure & Algorithm-Self Paced (C++/JAVA)Master Competitive ProgrammingFull Stack Development with React & Node JS (Live)Full Stack DevelopmentData Science & ML ProgramAll Courses DSA to Development GATE 2026 Prep Get 3 IBM Certifications For Working ProfessionalsInterview 101: DSA & System DesignData Science Training ProgramJAVA Backend Development (Live)Data Analytics TrainingDevOps Engineering (LIVE)Data Structures & Algorithms in Python Interview 101: DSA & System Design Data Science Training Program JAVA Backend Development (Live) Data Analytics Training DevOps Engineering (LIVE) Data Structures & Algorithms in Python For StudentsPlacement Preparation", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad7b96be-7da1-4a62-bc4c-ff70b78ff484": {"__data__": {"id_": "ad7b96be-7da1-4a62-bc4c-ff70b78ff484", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_10.txt", "file_name": "java_2_chunk_10.txt", "file_type": "text/plain", "file_size": 974, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "348c2210-5bb7-4574-ae61-2a5b9d9d616e", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_10.txt", "file_name": "java_2_chunk_10.txt", "file_type": "text/plain", "file_size": 974, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4f54ce6d557a38b8a2a885a92e42bac4985021a9cf540298a7a9f3f5d06ec3ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db799b0a-4ce5-45d5-8a58-041cd29c73ae", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_1.txt", "file_name": "java_2_chunk_1.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "721c15b9e6f8e29bc77ec7f035461b3dbaf8ad3742a59a9e0511fac13722201f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "81692e57-9aa1-4403-a628-5fde1fd832d5", "node_type": "1", "metadata": {}, "hash": "e36d8df8d5728f7c4d46b0ca7f39385b1097178bc439979f96e58f2d10e36913", "class_name": "RelatedNodeInfo"}}, "text": "Top 50 Java Project Ideas For Beginners and Advanced [Update 2025] Number Guessing Game in Java Mini Banking Application in Java Java Program to Convert Currency using AWT Tic-Tac-Toe Game in Java Design Snake Game Memory Game in Java How to Implement a Simple Chat Application Using Sockets in Java? Image Processing in Java - Face Detection Design Media Sharing Social Networking System Java Swing | Create a simple text editor Java Backend DevelopmentCourse Java Tutorial Javais a high-level,object-oriented programming languageused to build web apps, mobile applications, and enterprise software systems. It is known for itsWrite Once, Run Anywherecapability, which means code written in Java can run on any device that supports the Java Virtual Machine (JVM). Java syntax and structure is similar to C-based languages likeC++and C#. Its robustness, platform-independent compatibility, and strong memory management have made it a go-to language for developers worldwide.", "start_char_idx": 0, "end_char_idx": 974, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81692e57-9aa1-4403-a628-5fde1fd832d5": {"__data__": {"id_": "81692e57-9aa1-4403-a628-5fde1fd832d5", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_11.txt", "file_name": "java_2_chunk_11.txt", "file_type": "text/plain", "file_size": 998, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "811e152e-e305-44ba-b1e8-487fedee66ee", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_11.txt", "file_name": "java_2_chunk_11.txt", "file_type": "text/plain", "file_size": 998, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ca6648b3c69cd5cbb9d56a48610bd521614e97a3f3074465ba7a59f9a56c8cdc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad7b96be-7da1-4a62-bc4c-ff70b78ff484", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_10.txt", "file_name": "java_2_chunk_10.txt", "file_type": "text/plain", "file_size": 974, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4f54ce6d557a38b8a2a885a92e42bac4985021a9cf540298a7a9f3f5d06ec3ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c70b2c36-1a4c-4177-ba71-95d4a0ec0024", "node_type": "1", "metadata": {}, "hash": "a3f3719b48eb5a808424551980b8d5b99cb8dbeeb46cd98b65022159bfaf6414", "class_name": "RelatedNodeInfo"}}, "text": "ThisJava tutorialis designed for bothbeginnersandexperienced professionalsand it covers basic to advanced Java topics. Why Learn Java? Java is used to build Android apps, desktop and web apps, enterprise backend systems, and cloud-based software. Java is in high demand with many job opportunities in software development. Java has popular frameworks like Spring and Hibernate which makes Java powerful for enterprise applications. Java supports object-oriented programming for clean and reusable code. It runs on all platforms Windows, Mac, and Linux using the JVM. Top companies like Amazon, Netflix, and LinkedIn use Java. Java Hello World Program Here is a simple Java program that prints \"Hello World\". // A Java program to print \"Hello World\"publicclassGeeks{publicstaticvoidmain(Stringargs[]){System.out.println(\"Hello World\");}} Java Basics Java basics form the foundation of your programming journey, covering essential concepts like syntax, data types, variables, loops, and conditionals.", "start_char_idx": 0, "end_char_idx": 998, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c70b2c36-1a4c-4177-ba71-95d4a0ec0024": {"__data__": {"id_": "c70b2c36-1a4c-4177-ba71-95d4a0ec0024", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_12.txt", "file_name": "java_2_chunk_12.txt", "file_type": "text/plain", "file_size": 815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4ba8d192-5cd5-4b44-9f87-1de303463df5", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_12.txt", "file_name": "java_2_chunk_12.txt", "file_type": "text/plain", "file_size": 815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b390f9ad9944cfbad2b9aaa42b0f24bea2523f02598dede96c2095262617ea68", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "81692e57-9aa1-4403-a628-5fde1fd832d5", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_11.txt", "file_name": "java_2_chunk_11.txt", "file_type": "text/plain", "file_size": 998, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ca6648b3c69cd5cbb9d56a48610bd521614e97a3f3074465ba7a59f9a56c8cdc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4a07fb5-ddaf-4f58-9fc3-19a3b30f39bd", "node_type": "1", "metadata": {}, "hash": "9c9dc024930d48289488e821309a65cea9999104cb89e19b32e5ad74391ec90e", "class_name": "RelatedNodeInfo"}}, "text": "Mastering these fundamentals is key to building strong, error-free Java applications: Introduction Download and Install Java JDK vs JRE vs JVM Identifiers Keywords Quiz:Java Basics and Identifiers Data Types Variables Operators Quiz:Variables,Operator Decision Making (if, if-else, switch, break, continue, jump) Loops Quiz:Control Statements and Loops Java Methods Java methods are reusable blocks of code that perform specific tasks and help organize your program. They improve code readability, reduce repetition, and make debugging easier: Introduction to Methods How to Call Methods? Static Methods vs Instance Methods Access Modifiers Command Line Arguments Variable Arguments (Varargs) Quiz:Methods Java Arrays Java arrays are containers that store multiple values of the same data type in a single variable.", "start_char_idx": 0, "end_char_idx": 815, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4a07fb5-ddaf-4f58-9fc3-19a3b30f39bd": {"__data__": {"id_": "d4a07fb5-ddaf-4f58-9fc3-19a3b30f39bd", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_13.txt", "file_name": "java_2_chunk_13.txt", "file_type": "text/plain", "file_size": 805, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95f15700-0a2a-4c49-942f-3865b62f498f", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_13.txt", "file_name": "java_2_chunk_13.txt", "file_type": "text/plain", "file_size": 805, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6f56c5c7b967a82db5786465a952e1db99a2d4bc86f0ff71fe7939b78313010c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c70b2c36-1a4c-4177-ba71-95d4a0ec0024", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_12.txt", "file_name": "java_2_chunk_12.txt", "file_type": "text/plain", "file_size": 815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b390f9ad9944cfbad2b9aaa42b0f24bea2523f02598dede96c2095262617ea68", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83dd77c0-6aec-4afc-aec3-75a60d6e411a", "node_type": "1", "metadata": {}, "hash": "2e40cc81bfcf7a4aabe6b68130e1e3a98774da94636505b6aed06f36bc32dd33", "class_name": "RelatedNodeInfo"}}, "text": "They provide an efficient way to manage and access collections of data using index-based positions: Introduction to Arrays Declare and Initialize Arrays Multi-Dimensional Arrays Quiz:Java Arrays Jagged Arrays Arrays Class Final Arrays Java Array Programs Quiz:Array Programs Java Strings Java Strings represent sequences of characters and are widely used in text processing. They are immutable, meaning once created, their values cannot be changed: Introduction of Strings Why Strings are Immutable? Java String Concatenation Quiz:String Basics String Class StringBuffer Class StringBuilder Class Quiz:String Classes Strings vs StringBuffer vs StringBuilder Java String Programs Java OOPs Concepts Java follows the Object-Oriented Programming (OOP) paradigm, which organizes code into classes and objects.", "start_char_idx": 0, "end_char_idx": 805, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83dd77c0-6aec-4afc-aec3-75a60d6e411a": {"__data__": {"id_": "83dd77c0-6aec-4afc-aec3-75a60d6e411a", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_14.txt", "file_name": "java_2_chunk_14.txt", "file_type": "text/plain", "file_size": 655, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a63d75f2-3e08-4d2e-b037-e668313fb247", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_14.txt", "file_name": "java_2_chunk_14.txt", "file_type": "text/plain", "file_size": 655, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "69fe3e219049b0e9357b49d09aa6e4353b7415ae8998d6a1bd766bbd7ebc6bf5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4a07fb5-ddaf-4f58-9fc3-19a3b30f39bd", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_13.txt", "file_name": "java_2_chunk_13.txt", "file_type": "text/plain", "file_size": 805, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6f56c5c7b967a82db5786465a952e1db99a2d4bc86f0ff71fe7939b78313010c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c2c2f9f-8200-4fe5-b6f1-ebce248d2da2", "node_type": "1", "metadata": {}, "hash": "ce939422c52065d0815477fa771924dcc2a409fec37782b24fe0c5954d499cf4", "class_name": "RelatedNodeInfo"}}, "text": "Core OOP principles like inheritance, encapsulation, polymorphism, and abstraction make Java modular and scalable: What are OOPs Concepts? Classes and Objects Quiz:Classes and Objects Constructors Quiz:Constructors Object Class Abstraction Encapsulation Inheritance Quiz:Inheritance and Abstraction PolymorphismCompile-Time Polymorphism (Method Overloading)Runtime Polymorphism (Method Overriding) Compile-Time Polymorphism (Method Overloading) Runtime Polymorphism (Method Overriding) Packages Quiz:Polymorphism and Packages Java Interfaces Java interfaces define a contract that classes must follow, specifying method signatures without implementations.", "start_char_idx": 0, "end_char_idx": 655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c2c2f9f-8200-4fe5-b6f1-ebce248d2da2": {"__data__": {"id_": "6c2c2f9f-8200-4fe5-b6f1-ebce248d2da2", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_15.txt", "file_name": "java_2_chunk_15.txt", "file_type": "text/plain", "file_size": 406, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09e24700-2aca-4b58-8dc3-c56b3024edda", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_15.txt", "file_name": "java_2_chunk_15.txt", "file_type": "text/plain", "file_size": 406, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ee1774c534a856df65477f8b7b22ca3d815b0210e252ca2b59053cf72120e6bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83dd77c0-6aec-4afc-aec3-75a60d6e411a", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_14.txt", "file_name": "java_2_chunk_14.txt", "file_type": "text/plain", "file_size": 655, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "69fe3e219049b0e9357b49d09aa6e4353b7415ae8998d6a1bd766bbd7ebc6bf5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b508e208-e720-4192-8fc0-ba5113a28d41", "node_type": "1", "metadata": {}, "hash": "c7ac6fcd2bc059378bbd3b97ee856c8c4112c388d54ae82a0016c22bc7ea91a1", "class_name": "RelatedNodeInfo"}}, "text": "They enable abstraction and support multiple inheritance in Java through a clean, structured approach: Java Interfaces Interfaces and Inheritance Class vs Interface Quiz:Interfaces Functional Interface Nested Interface Marker Interface Comparator Interface Quiz:Interface types and Comparator Java Collections Java Collections provide a framework for storing and manipulating groups of objects efficiently.", "start_char_idx": 0, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b508e208-e720-4192-8fc0-ba5113a28d41": {"__data__": {"id_": "b508e208-e720-4192-8fc0-ba5113a28d41", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_16.txt", "file_name": "java_2_chunk_16.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d57b095c-b7a1-4112-bd9d-1369aea1f48f", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_16.txt", "file_name": "java_2_chunk_16.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0e964cdd01055250513911b67d4ef38ce2a9baad6911cc23464fc3c4de273659", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c2c2f9f-8200-4fe5-b6f1-ebce248d2da2", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_15.txt", "file_name": "java_2_chunk_15.txt", "file_type": "text/plain", "file_size": 406, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ee1774c534a856df65477f8b7b22ca3d815b0210e252ca2b59053cf72120e6bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "323b43ee-a321-4fa1-8055-a2b18e39cfb8", "node_type": "1", "metadata": {}, "hash": "ca9bbc5d5c5bea3b4f1060f87352b69a41e2df435b343a936dedf6420b8e4383", "class_name": "RelatedNodeInfo"}}, "text": "It includes interfaces like List, Set, and Map, along with classes like ArrayList, HashSet, and HashMap: Java Collection Framework Collections Class Collection Interface Quiz:Collection Framework List Interface Quiz:List InterfaceArrayList ClassQuiz:ArrayListVector ClassQuiz:VectorLinkedList ClassQuiz:LinkedListStack Class ArrayList Class Quiz:ArrayList Vector Class Quiz:Vector LinkedList Class Quiz:LinkedList Stack Class Set InterfaceHashSet ClassQuiz:Set and HashSetTreeSet ClassLinkedHashSet Class HashSet Class Quiz:Set and HashSet TreeSet Class LinkedHashSet Class Queue InterfacePriority Queue ClassDeque Interface Priority Queue Class Deque Interface Map InterfaceHashMap ClassLinkedHashMap ClassQuiz:Queue and Map InterfaceHashTable ClassQuiz:HashtableDictionary HashMap Class LinkedHashMap Class Quiz:Queue and Map Interface HashTable Class Quiz:Hashtable Dictionary SortedSet Interface Comparator Interface Comparable Interface Comparator vs Comparable Quiz:Comparator vs Comparable It", "start_char_idx": 0, "end_char_idx": 999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "323b43ee-a321-4fa1-8055-a2b18e39cfb8": {"__data__": {"id_": "323b43ee-a321-4fa1-8055-a2b18e39cfb8", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_17.txt", "file_name": "java_2_chunk_17.txt", "file_type": "text/plain", "file_size": 995, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f82e593-757c-4226-a86d-826c33d1e966", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_17.txt", "file_name": "java_2_chunk_17.txt", "file_type": "text/plain", "file_size": 995, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "7c0271c030c445f275bc8bfa71662b60948659f9bd411bf8b760e1949cb8559a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b508e208-e720-4192-8fc0-ba5113a28d41", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_16.txt", "file_name": "java_2_chunk_16.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0e964cdd01055250513911b67d4ef38ce2a9baad6911cc23464fc3c4de273659", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2da8f2a7-1cd1-4975-93f6-ead637db9ebd", "node_type": "1", "metadata": {}, "hash": "716b1670aeeafdd095f0ac902c7558cb3ba65b770f5f357a489f603d108f2f8e", "class_name": "RelatedNodeInfo"}}, "text": "erator Quiz:Iterators Java Exception Handling ava Exception Handling is a mechanism to handle runtime errors, ensuring the program runs smoothly without crashing. It uses keywords like try, catch, throw, throws, and finally to manage exceptions: Java Exceptions Checked vs Unchecked Exceptions Try Catch Block Quiz:Java Exceptions Final, Finally and Finalize Throw and Throws Customized Exception Handling Chained Exceptions Null Pointer Exceptions Exception Handling with Method Overriding Quiz:Exception Handling Java Multithreading Java Multithreading allows concurrent execution of two or more threads, enabling efficient CPU utilization and faster program performance. It is commonly used for tasks like parallel processing and responsive applications: Introduction to Java Multithreading Threads Thread Class Runnable Interface Quiz:Thread Basics and Lifecycle Lifecycle and States of a Thread Main Thread Thread Priority in Multithreading Naming & Feteching Name of Current Thread Thread.", "start_char_idx": 0, "end_char_idx": 995, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2da8f2a7-1cd1-4975-93f6-ead637db9ebd": {"__data__": {"id_": "2da8f2a7-1cd1-4975-93f6-ead637db9ebd", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_18.txt", "file_name": "java_2_chunk_18.txt", "file_type": "text/plain", "file_size": 695, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4027aefd-1980-44f2-9d38-24e44221c1b2", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_18.txt", "file_name": "java_2_chunk_18.txt", "file_type": "text/plain", "file_size": 695, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0809b663c8e3a4b6feedc62dc4c8cc16519997dd3a0134134384efaf3ee47af1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "323b43ee-a321-4fa1-8055-a2b18e39cfb8", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_17.txt", "file_name": "java_2_chunk_17.txt", "file_type": "text/plain", "file_size": 995, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "7c0271c030c445f275bc8bfa71662b60948659f9bd411bf8b760e1949cb8559a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed248ed8-df79-4d76-a6f8-df562abf4010", "node_type": "1", "metadata": {}, "hash": "1854d63fce5d6d56ad8ac03b31c231c42a896b8c1dda0c1c9985204b3fd85419", "class_name": "RelatedNodeInfo"}}, "text": "start() vs Thread.run() Method Thread.sleep() Method Daemon Thread Quiz:Thread Methods and Daemon Threads Thread Safety Thread Pools Java File Handling Java File Handling enables programs to create, read, write, and manipulate files stored on the system. It uses classes from thejava.ioandjava.niopackages for efficient file operations: java.io java.nio File Handling File Class Create Files Read Files Quiz:File Handling Write on Files Delete File FileReader Class FileWriter Class Quiz:File Writing FilePermission Class FileDescriptor Class Java Streams and Lambda Expressions Java Streams and Lambda Expressions simplify data processing by enabling functional-style operations on collections.", "start_char_idx": 0, "end_char_idx": 695, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed248ed8-df79-4d76-a6f8-df562abf4010": {"__data__": {"id_": "ed248ed8-df79-4d76-a6f8-df562abf4010", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_19.txt", "file_name": "java_2_chunk_19.txt", "file_type": "text/plain", "file_size": 870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "58d23fb4-090b-4775-8604-8c6553be3bb6", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_19.txt", "file_name": "java_2_chunk_19.txt", "file_type": "text/plain", "file_size": 870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1524527f9886d46218ad572414d2946dcec24aa89252ea1b209f5b2529705206", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2da8f2a7-1cd1-4975-93f6-ead637db9ebd", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_18.txt", "file_name": "java_2_chunk_18.txt", "file_type": "text/plain", "file_size": 695, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0809b663c8e3a4b6feedc62dc4c8cc16519997dd3a0134134384efaf3ee47af1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37407ece-921e-4d91-b526-6fd844e02323", "node_type": "1", "metadata": {}, "hash": "0ecf5fd1b7de5c1dc9f1ae3f4530a4336a1307bb793fb7d67b421f9cfd91b502", "class_name": "RelatedNodeInfo"}}, "text": "Lambdas provide concise syntax for anonymous functions, while Streams allow efficient filtering, mapping, and reduction of data: Lambda Expressions Method References Java Stream - Complete Tutorial Quiz:Lambda Expressions and Streams Java 8 Features - Complete Tutorial Java IO Java IO (Input/Output) provides a set of classes and streams to read and write data from various sources like files, consoles, and network connections. It is part of thejava.iopackage and supports both byte and character streams: java.io Introduction to Java IO Reader Class Writer Class FileInput Stream Quiz:IO Basics FileOutput Stream BufferedReader Input Stream BufferedReader Output stream BufferedReader vs Scanner Fast I/O Quiz:BufferedReader vs Scanner and Fast I/O Java Synchronization Java Synchronization is used to control access to shared resources in multithreaded environments.", "start_char_idx": 0, "end_char_idx": 870, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37407ece-921e-4d91-b526-6fd844e02323": {"__data__": {"id_": "37407ece-921e-4d91-b526-6fd844e02323", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_2.txt", "file_name": "java_2_chunk_2.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "735b2788-3eed-4b1d-a388-3a1708218b64", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_2.txt", "file_name": "java_2_chunk_2.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "21a08fdec247c5318298b8b1151bf20829a6a66197134c7e117ac5cbdccd34b1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed248ed8-df79-4d76-a6f8-df562abf4010", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_19.txt", "file_name": "java_2_chunk_19.txt", "file_type": "text/plain", "file_size": 870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1524527f9886d46218ad572414d2946dcec24aa89252ea1b209f5b2529705206", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c443b9b1-1949-466f-9e5f-cae6afe94fa6", "node_type": "1", "metadata": {}, "hash": "1cc27dc897cca9f288b42b27184ac799ab91e9335d1a821c2052280223b80860", "class_name": "RelatedNodeInfo"}}, "text": "with DSAData Science (Live)Data Structure & Algorithm-Self Paced (C++/JAVA)Master Competitive ProgrammingFull Stack Development with React & Node JS (Live) Placement Preparation with DSA Data Science (Live) Data Structure & Algorithm-Self Paced (C++/JAVA) Master Competitive Programming Full Stack Development with React & Node JS (Live) Full Stack Development Data Science & ML Program All Courses TutorialsData Structures & AlgorithmsML & Data ScienceInterview CornerProgramming LanguagesWeb DevelopmentGATECS SubjectsDevOps And LinuxSchool Learning Data Structures & Algorithms ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps And Linux School Learning PracticePractice Coding ProblemsGfG 160: Summer WorkshopsProblem of the DayAll Contests and Events Practice Coding Problems GfG 160: Summer Workshops Problem of the Day All Contests and Events JobsJob-A-Thon Hiring ChallengeGet HiredHire with us Job-A-Thon Hiring Challenge Get Hired Hire with u", "start_char_idx": 0, "end_char_idx": 999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c443b9b1-1949-466f-9e5f-cae6afe94fa6": {"__data__": {"id_": "c443b9b1-1949-466f-9e5f-cae6afe94fa6", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_20.txt", "file_name": "java_2_chunk_20.txt", "file_type": "text/plain", "file_size": 954, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49819983-bd32-4aef-8203-7e915d377780", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_20.txt", "file_name": "java_2_chunk_20.txt", "file_type": "text/plain", "file_size": 954, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b36723d0b0b608e6ae3fdccac8baf43466eb6f768c696f5bcd4cad380683ba4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37407ece-921e-4d91-b526-6fd844e02323", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_2.txt", "file_name": "java_2_chunk_2.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "21a08fdec247c5318298b8b1151bf20829a6a66197134c7e117ac5cbdccd34b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7427ead6-29ee-4a01-b889-325358aa4932", "node_type": "1", "metadata": {}, "hash": "170747ae0f7277466f864d57153348a6bbedb192fcc84f6ee6acebae05a38f1b", "class_name": "RelatedNodeInfo"}}, "text": "It ensures that only one thread can access a critical section at a time, preventing data inconsistency: Java Synchronization Importance of Thread Synchronization Method and Block Synchronization Quiz:Synchronization Basics Atomic vs Volatilevs Synchronized Local Frameworks vs Thread Synchronization Deadlock in Multithreading Quiz:Deadlocks and Synchronization Deadlock Prevention and Avoidance Lock vs Monitor in Concurrency Reentrant Lock Quiz:Concurrency Locks and Reentrant Locks Java Regex Java Regex (Regular Expressions) allows pattern matching and text manipulation using thejava.util.regexpackage. It is powerful for validating, searching, and replacing strings based on specific patterns: java.util.regex What is Java Regex? Pattern Class Matcher Class Character Class Quiz:Regex Basics and Pattern Matching Quantifiers Java Networking Java Networking enables communication between devices over a network using classes from thejava.netpackage.", "start_char_idx": 0, "end_char_idx": 954, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7427ead6-29ee-4a01-b889-325358aa4932": {"__data__": {"id_": "7427ead6-29ee-4a01-b889-325358aa4932", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_21.txt", "file_name": "java_2_chunk_21.txt", "file_type": "text/plain", "file_size": 634, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6a98f1b8-1123-41d5-ab89-c4969435656c", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_21.txt", "file_name": "java_2_chunk_21.txt", "file_type": "text/plain", "file_size": 634, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9fa2cab9052ac3cb7122da45a5062e91a453d99d5dbf518d46226e8a70512197", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c443b9b1-1949-466f-9e5f-cae6afe94fa6", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_20.txt", "file_name": "java_2_chunk_20.txt", "file_type": "text/plain", "file_size": 954, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b36723d0b0b608e6ae3fdccac8baf43466eb6f768c696f5bcd4cad380683ba4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d8eba28-088e-4444-94d9-2c6b8b109e5f", "node_type": "1", "metadata": {}, "hash": "81ff43e8affe5e0aaebc9b287a6651720b7334dcf4480589755159c185703767", "class_name": "RelatedNodeInfo"}}, "text": "It supports protocols like TCP and UDP for building client-server applications and data exchange: java.net Introduction to Java Networking TCP Architecture UDP Architecture IPV4 vs IPV6 Quiz:Networking Basics and Protocols Connection-Oriented vs Connectionless Protocols Socket Programming Server Socket Class Quiz:Sockets and Server Communication URL Class and Methods Java Database Connectivity(JDBC) Introduction to Java JDBC JDBC Driver JDBC Connection Types of Statements in JDBC Quiz:JDBC Java Memory Allocation Java Memory Allocation refers to how memory is assigned to variables, objects, and classes during program execution.", "start_char_idx": 0, "end_char_idx": 634, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d8eba28-088e-4444-94d9-2c6b8b109e5f": {"__data__": {"id_": "0d8eba28-088e-4444-94d9-2c6b8b109e5f", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_22.txt", "file_name": "java_2_chunk_22.txt", "file_type": "text/plain", "file_size": 983, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3800d5bf-1bd3-4437-bf19-399c0bf25b3e", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_22.txt", "file_name": "java_2_chunk_22.txt", "file_type": "text/plain", "file_size": 983, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3cae1e6654e1904ab23966fefc19e491a840a295ba7f431ba3d3108ed2bdac1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7427ead6-29ee-4a01-b889-325358aa4932", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_21.txt", "file_name": "java_2_chunk_21.txt", "file_type": "text/plain", "file_size": 634, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9fa2cab9052ac3cb7122da45a5062e91a453d99d5dbf518d46226e8a70512197", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6dd5e468-905e-4e8b-b578-9325ded40dc1", "node_type": "1", "metadata": {}, "hash": "e054ca33b808ed0b99bc345213efb9053328816cac2c80aba169ffa129b95541", "class_name": "RelatedNodeInfo"}}, "text": "It involves stack and heap memory, with the JVM managing allocation and garbage collection automatically: Java Memory Management How Java Objects Stored in Memory? Quiz:Java Memory Allocation Stack vs Heap Memory Allocation Quiz:Heap vs Stack Java Virtual Machine(JVM) Stack Area Types of Memory Areas Allocated by JVM Garbage Collection Quiz:JVM Memory Management and Garbage Collection Types of JVM Garbage Collectors Heap and Stack Memory Allocation Memory Leaks Java Interview Questions Prepare for Java interviews with these commonly asked questions, covering core concepts, OOP, collections, multithreading, exception handling, and frameworks like Spring and Hibernate: 200+ Core Java Interview Questions and Answers Java MCQ Best Approach to Learn Java Here\u2019s the step-by-step approach to learn and master Java efficiently and effectively: 1.Understand Java Fundamentals:Start with the basics: what Java is, how it works (JVM, JRE, JDK), and why it\u2019s platform-independent.", "start_char_idx": 0, "end_char_idx": 979, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6dd5e468-905e-4e8b-b578-9325ded40dc1": {"__data__": {"id_": "6dd5e468-905e-4e8b-b578-9325ded40dc1", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_23.txt", "file_name": "java_2_chunk_23.txt", "file_type": "text/plain", "file_size": 944, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48e5f5ce-a954-4388-bb20-f2e59d04b53d", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_23.txt", "file_name": "java_2_chunk_23.txt", "file_type": "text/plain", "file_size": 944, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "69e0edfffb7bfdd2723cbcc3e1cb43b59b897496f0e62609eb6490b5a097fbf7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d8eba28-088e-4444-94d9-2c6b8b109e5f", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_22.txt", "file_name": "java_2_chunk_22.txt", "file_type": "text/plain", "file_size": 983, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3cae1e6654e1904ab23966fefc19e491a840a295ba7f431ba3d3108ed2bdac1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef43f369-f887-49bb-aecb-2089553f321e", "node_type": "1", "metadata": {}, "hash": "c19f7eefe0b2ee4f05d9ae49f11714aa0ad16044aa4d7222c6eaa3a2a22ac9e7", "class_name": "RelatedNodeInfo"}}, "text": "Learn about Java\u2019s role in building desktop, web, and mobile applications. 2.Set Up the Java Environment:Install the latest JDK and configure your development environment. Use a beginner-friendly IDE like IntelliJ IDEA, Eclipse, or VS Code for writing and testing your code. 3.Learn Core Java Concepts:Focus on essential topics like variables, data types, operators, control structures (if-else, switch, loops), and input/output. Practice writing simple programs to strengthen your understanding. 4.Master Object-Oriented Programming (OOP):Dive into the pillars of OOP\u2014classes, objects, inheritance, polymorphism, encapsulation, and abstraction. Understand how Java handles these concepts and how to apply them effectively in real projects. 5.Explore Collections and Data Structures:Learn about Java's Collection Framework\u2014ArrayList, HashMap, Set, LinkedList, and more. Understand how to use them and when to choose one over the other. 6.", "start_char_idx": 0, "end_char_idx": 938, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef43f369-f887-49bb-aecb-2089553f321e": {"__data__": {"id_": "ef43f369-f887-49bb-aecb-2089553f321e", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_24.txt", "file_name": "java_2_chunk_24.txt", "file_type": "text/plain", "file_size": 917, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5081bf69-3232-452a-bca1-4e2de2ae19ce", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_24.txt", "file_name": "java_2_chunk_24.txt", "file_type": "text/plain", "file_size": 917, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "484d8372c15f860376dcd61c02c24d4b7041d1268371b5460d5d0f8d19414476", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6dd5e468-905e-4e8b-b578-9325ded40dc1", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_23.txt", "file_name": "java_2_chunk_23.txt", "file_type": "text/plain", "file_size": 944, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "69e0edfffb7bfdd2723cbcc3e1cb43b59b897496f0e62609eb6490b5a097fbf7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41ced6e0-b6e0-4619-bead-216b5a98a6b0", "node_type": "1", "metadata": {}, "hash": "e969ace90c0fe691a05d473c29989f610c7d84dadb89e924716b12fc935b7e60", "class_name": "RelatedNodeInfo"}}, "text": "Work with Exception Handling:Understand the importance of error handling in Java using try-catch blocks, finally, throw, and custom exceptions. Learn best practices for writing clean, safe code. 7.Get Comfortable with File I/O:Learn how Java reads from and writes to files usingFile,FileReader,BufferedReader,FileWriter, andStreams. Practice creating programs that manage and manipulate file data. File FileReader BufferedReader FileWriter Streams 8.Understand Multithreading and Concurrency:Grasp the basics of threads, synchronization, and concurrent programming. Learn how Java handles multiple tasks simultaneously using theThreadclass andExecutorService. Thread ExecutorService 9.Learn Java Libraries and APIs:Familiarize yourself with essential APIs like Java Math, Date & Time (java.time), and String manipulation. Explore popular libraries like Apache Commons, Gson, or Jackson for real-world development. 10.", "start_char_idx": 0, "end_char_idx": 917, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41ced6e0-b6e0-4619-bead-216b5a98a6b0": {"__data__": {"id_": "41ced6e0-b6e0-4619-bead-216b5a98a6b0", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_25.txt", "file_name": "java_2_chunk_25.txt", "file_type": "text/plain", "file_size": 219, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "754258cd-0953-45ec-8343-41cfc53ce7ec", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_25.txt", "file_name": "java_2_chunk_25.txt", "file_type": "text/plain", "file_size": 219, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c5a03f043aeb4a4cdba12de2e943f2267eed659f062466bd3b976a3b4fad3e53", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef43f369-f887-49bb-aecb-2089553f321e", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_24.txt", "file_name": "java_2_chunk_24.txt", "file_type": "text/plain", "file_size": 917, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "484d8372c15f860376dcd61c02c24d4b7041d1268371b5460d5d0f8d19414476", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8bda9546-c97a-478f-a64a-4456d6c5182c", "node_type": "1", "metadata": {}, "hash": "0230290347cf2be06da5a00c4944c26476c39610ace2413c0485f0ae85ef2dbf", "class_name": "RelatedNodeInfo"}}, "text": "Build Real-World Projects:Apply your knowledge by building console apps, file management systems, or basic desktop GUIs using JavaFX or Swing. Gradually move into web development with Java Servlets, JSP, or Spring Boot.", "start_char_idx": 0, "end_char_idx": 219, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8bda9546-c97a-478f-a64a-4456d6c5182c": {"__data__": {"id_": "8bda9546-c97a-478f-a64a-4456d6c5182c", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_26.txt", "file_name": "java_2_chunk_26.txt", "file_type": "text/plain", "file_size": 904, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "641afc94-c01d-4cff-ad09-4ed8177620de", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_26.txt", "file_name": "java_2_chunk_26.txt", "file_type": "text/plain", "file_size": 904, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0f3e00d872d1e68348a36e7eb598d1ae974c44b9c4ea4c49ab277ca627927883", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41ced6e0-b6e0-4619-bead-216b5a98a6b0", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_25.txt", "file_name": "java_2_chunk_25.txt", "file_type": "text/plain", "file_size": 219, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c5a03f043aeb4a4cdba12de2e943f2267eed659f062466bd3b976a3b4fad3e53", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3218aa24-c299-4dc1-aa0d-8d760c665d4a", "node_type": "1", "metadata": {}, "hash": "1b92429069dbe6977389f1b874497b7f26e8dbd906c4500526db51b1a657bf5b", "class_name": "RelatedNodeInfo"}}, "text": "Java Program Examples Java Programming Examples Java Exercises \u2013 Basic to Advanced Java Practice Programs Java Coding Practice Problems Java Fundamentals Coding Practice Problems Java Methods Coding Practice Problems Java Arrays Coding Practice Problems Java Strings Coding Practice Problems Java OOPs Coding Practice Problems Java Sorting and Searching Algorithms Coding Practice Problems Java Collections Coding Practice Problems Java Stream & Lambda Expression Coding Practice Problems Java Quizzes and MCQs Java Language MCQs with Answers Important Java Projects Number Guessing Game Simple Banking Application Currency Converter Tic-Tac-Toe Game Snake Game Memory Game Chat Application Face Detection System Social Networking Site Text Editor Career & Jobs in Java 2025 Java opens doors to a wide range of tech careers across industries\u2014from enterprise software to mobile apps and cloud systems.", "start_char_idx": 0, "end_char_idx": 900, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3218aa24-c299-4dc1-aa0d-8d760c665d4a": {"__data__": {"id_": "3218aa24-c299-4dc1-aa0d-8d760c665d4a", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_27.txt", "file_name": "java_2_chunk_27.txt", "file_type": "text/plain", "file_size": 1001, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "298b40d8-852b-4e32-b493-c21ca2888ec7", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_27.txt", "file_name": "java_2_chunk_27.txt", "file_type": "text/plain", "file_size": 1001, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "fc39704597edcee9b72cc9e56d75dab07d5209df20328604778e8c50fb1607df", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8bda9546-c97a-478f-a64a-4456d6c5182c", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_26.txt", "file_name": "java_2_chunk_26.txt", "file_type": "text/plain", "file_size": 904, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0f3e00d872d1e68348a36e7eb598d1ae974c44b9c4ea4c49ab277ca627927883", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b921abb6-c936-4baf-a32d-b4cbd22c0de7", "node_type": "1", "metadata": {}, "hash": "a702a3385e1fe14a6b6e3b3f5fb21fdbbea0570e90cd2c083bb8f81c35d597f3", "class_name": "RelatedNodeInfo"}}, "text": "Here\u2019s a list of top career options for professionals with Java expertise, along with their average salary ranges: List of Companies Using Java These are some popular companies that use Java in thier workflow: Java Tutorials Java Similar Reads Company About Us Legal Privacy Policy Careers In Media Contact Us Corporate Solution Campus Training Program Explore Job-A-Thon Offline Classroom Program DSA in JAVA/C++ Master System Design Master CP Videos Tutorials Python Java C++ PHP GoLang SQL R Language Android DSA Data Structures Algorithms DSA for Beginners Basic DSA Problems DSA Roadmap DSA Interview Questions Competitive Programming Data Science & ML Data Science With Python Machine Learning ML Maths Data Visualisation Pandas NumPy NLP Deep Learning Web Technologies HTML CSS JavaScript TypeScript ReactJS NextJS NodeJs Bootstrap Tailwind CSS Python Tutorial Python Examples Django Tutorial Python Projects Python Tkinter Web Scraping OpenCV Tutorial Python Interview Question Computer Scie", "start_char_idx": 0, "end_char_idx": 999, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b921abb6-c936-4baf-a32d-b4cbd22c0de7": {"__data__": {"id_": "b921abb6-c936-4baf-a32d-b4cbd22c0de7", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_28.txt", "file_name": "java_2_chunk_28.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "403bb27c-4db0-4dd8-afc1-2200d4240e35", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_28.txt", "file_name": "java_2_chunk_28.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cc2d98191ef12d28f62b808f123e6c40a66950ab518e1e21e8b7e17ebadfc219", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3218aa24-c299-4dc1-aa0d-8d760c665d4a", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_27.txt", "file_name": "java_2_chunk_27.txt", "file_type": "text/plain", "file_size": 1001, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "fc39704597edcee9b72cc9e56d75dab07d5209df20328604778e8c50fb1607df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8dff125-c275-4286-970b-140ae5c820b7", "node_type": "1", "metadata": {}, "hash": "7658da4cd5fedc75a1adcf3555b8227677ddd8676cd684cb515e139cb5b6804f", "class_name": "RelatedNodeInfo"}}, "text": "nce GATE CS Notes Operating Systems Computer Network Database Management System Software Engineering Digital Logic Design Engineering Maths DevOps Git AWS Docker Kubernetes Azure GCP DevOps Roadmap System Design High Level Design Low Level Design UML Diagrams Interview Guide Design Patterns OOAD System Design Bootcamp Interview Questions School Subjects Mathematics Physics Chemistry Biology Social Science English Grammar Databases SQL MYSQL PostgreSQL PL/SQL MongoDB Preparation Corner Company-Wise Recruitment Process Aptitude Preparation Puzzles Company-Wise Preparation More Tutorials Software Development Software Testing Product Management Project Management Linux Excel All Cheat Sheets Courses IBM Certification Courses DSA and Placements Web Development Data Science Programming Languages DevOps & Cloud Programming Languages C Programming with Data Structures C++ Programming Course Java Programming Course Python Full Course Clouds/Devops DevOps Engineering AWS Solutions Architect Cert", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8dff125-c275-4286-970b-140ae5c820b7": {"__data__": {"id_": "e8dff125-c275-4286-970b-140ae5c820b7", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_29.txt", "file_name": "java_2_chunk_29.txt", "file_type": "text/plain", "file_size": 227, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "919de205-9105-4709-a691-669b10f94571", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_29.txt", "file_name": "java_2_chunk_29.txt", "file_type": "text/plain", "file_size": 227, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2a5ec2c2212ce58a090fd548645a7e8268c29a0b3ae07073a330e78cb78d28f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b921abb6-c936-4baf-a32d-b4cbd22c0de7", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_28.txt", "file_name": "java_2_chunk_28.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cc2d98191ef12d28f62b808f123e6c40a66950ab518e1e21e8b7e17ebadfc219", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db559fe4-0f04-4838-a1b6-07868e92e04b", "node_type": "1", "metadata": {}, "hash": "e23907ec22b8d0dffbed0ced9e5b03f4ce9df2e720cf172ebaef31d640e14b4b", "class_name": "RelatedNodeInfo"}}, "text": "ification Salesforce Certified Administrator Course GATE 2026 GATE CS Rank Booster GATE DA Rank Booster GATE CS & IT Course - 2026 GATE DA Course 2026 GATE Rank Predictor Thank You! What kind of Experience do you want to share?", "start_char_idx": 0, "end_char_idx": 227, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db559fe4-0f04-4838-a1b6-07868e92e04b": {"__data__": {"id_": "db559fe4-0f04-4838-a1b6-07868e92e04b", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_3.txt", "file_name": "java_2_chunk_3.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cdfd995c-4015-40e8-8191-0572d5f6bad9", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_3.txt", "file_name": "java_2_chunk_3.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "df8ce74d4629c741525613685e5d7d4c970c256c3ed325f1d7a22086bf60151b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8dff125-c275-4286-970b-140ae5c820b7", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_29.txt", "file_name": "java_2_chunk_29.txt", "file_type": "text/plain", "file_size": 227, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2a5ec2c2212ce58a090fd548645a7e8268c29a0b3ae07073a330e78cb78d28f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c00e5b1-d08f-4f03-80ee-410d3e49a937", "node_type": "1", "metadata": {}, "hash": "7e728dc6933450c329dc4d3622fc16fea07e5115d0e14e8c5b6ba99864f1a536", "class_name": "RelatedNodeInfo"}}, "text": "s NotificationsMark all as readAllView AllNotificationsMark all as readAllUnreadReadYou're all caught up!! Notifications Java Course Java Arrays Java Strings Java OOPs Java Collection Java 8 Tutorial Java Multithreading Java Exception Handling Java Programs Java Project Java Collections Interview Java Interview Questions Java MCQs Spring Spring MVC Spring Boot Hibernate Explore GfG Courses Share Your Experiences Java Tutorial Java Overview Introduction to Java The Complete History of Java Programming Language How to Install Java on Windows, Linux and macOS? Setting up Environment Variables For Java - Complete Guide to Set JAVA_HOME How JVM Works - JVM Architecture JDK in Java Differences Between JDK, JRE and JVM Java Basics Java Syntax Java Hello World Program Java Identifiers Java Keywords Java Data Types Java Variables Scope of Variables in Java Java Operators Java User Input - Scanner Class Java Flow Control Java if statement Java if-else Statement Java if-else-if ladder with Exampl", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c00e5b1-d08f-4f03-80ee-410d3e49a937": {"__data__": {"id_": "6c00e5b1-d08f-4f03-80ee-410d3e49a937", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_4.txt", "file_name": "java_2_chunk_4.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40eb348d-b6d9-43eb-ab3c-eefe00567789", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_4.txt", "file_name": "java_2_chunk_4.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "60f2a2039c40ac34ef276f26e523aed3513659df9ed610831bc2429ff796a744", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db559fe4-0f04-4838-a1b6-07868e92e04b", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_3.txt", "file_name": "java_2_chunk_3.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "df8ce74d4629c741525613685e5d7d4c970c256c3ed325f1d7a22086bf60151b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc1d6b64-dd47-478a-b17b-33300ac8e0e9", "node_type": "1", "metadata": {}, "hash": "f7baea84072c7f9f134ce1147a31721c78db8f739bdcbec6913c03268352dc6b", "class_name": "RelatedNodeInfo"}}, "text": "es Java For Loop For-Each Loop in Java Java while Loop Java Do While Loop Java Break Statement Java Continue Statement Java return Keyword Java Methods Java Methods How to Call a Method in Java? Static Method vs Instance Method in Java Access Modifiers in Java Command Line Arguments in Java Variable Arguments (Varargs) in Java Java Arrays Arrays in Java How to Initialize an Array in Java? Java Multi-Dimensional Arrays Jagged Array in Java Arrays Class in Java Final Arrays in Java Java Strings Java Strings Why Java Strings are Immutable? Java String concat() Method with Examples String Class in Java StringBuffer Class in Java Java StringBuilder Class String vs StringBuilder vs StringBuffer in Java Java OOPs Concepts Java OOP(Object Oriented Programming) Concepts Classes and Objects in Java Java Constructors Object Class in Java Abstraction in Java Encapsulation in Java Inheritance in Java Polymorphism in Java Method Overloading in Java Overriding in Java Java Packages Java Interfaces Ja", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc1d6b64-dd47-478a-b17b-33300ac8e0e9": {"__data__": {"id_": "fc1d6b64-dd47-478a-b17b-33300ac8e0e9", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_5.txt", "file_name": "java_2_chunk_5.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0943d2a7-75b6-4057-b8e2-60d039e39fd8", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_5.txt", "file_name": "java_2_chunk_5.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2c9a204aa4c1fb7f49adffd59178208ec444632e1eebd8c8a9a5e27d94b0ee60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c00e5b1-d08f-4f03-80ee-410d3e49a937", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_4.txt", "file_name": "java_2_chunk_4.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "60f2a2039c40ac34ef276f26e523aed3513659df9ed610831bc2429ff796a744", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "066a9c4b-854c-4f85-b0e6-a84d89cd6f89", "node_type": "1", "metadata": {}, "hash": "d203eb26fc03c18d67f07d161bd5e53c081cbe46eab18aeed662fe991c8f5a28", "class_name": "RelatedNodeInfo"}}, "text": "va Interface Interfaces and Inheritance in Java Java Class vs Interfaces Java Functional Interfaces Nested Interface in Java Marker Interface in Java Java Comparator Interface Java Collections Collections in Java Collections Class in Java Collection Interface in Java Java List Interface ArrayList in Java Vector Class in Java LinkedList in Java Stack Class in Java Set in Java Java HashSet TreeSet in Java Java LinkedHashSet Queue Interface In Java PriorityQueue in Java Deque Interface in Java Map Interface in Java HashMap in Java Java LinkedHashMap Hashtable in Java Java Dictionary Class SortedSet Interface in Java with Examples Java Comparator Interface Java Comparable Interface Java Comparable vs Comparator Java Iterator Java Exception Handling Java Exception Handling Java Checked vs Unchecked Exceptions Java Try Catch Block Java final, finally and finalize throw and throws in Java User-Defined Custom Exception in Java Chained Exceptions in Java Null Pointer Exception in Java Exception", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "066a9c4b-854c-4f85-b0e6-a84d89cd6f89": {"__data__": {"id_": "066a9c4b-854c-4f85-b0e6-a84d89cd6f89", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_6.txt", "file_name": "java_2_chunk_6.txt", "file_type": "text/plain", "file_size": 356, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d18ddba6-a70f-4716-9456-3cab3b4a1302", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_6.txt", "file_name": "java_2_chunk_6.txt", "file_type": "text/plain", "file_size": 356, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "761ac3b83e37c681d45156a0ea3ef4f312107cb643360b3d972b43c4e48dc3a6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc1d6b64-dd47-478a-b17b-33300ac8e0e9", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_5.txt", "file_name": "java_2_chunk_5.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2c9a204aa4c1fb7f49adffd59178208ec444632e1eebd8c8a9a5e27d94b0ee60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfe3f780-a670-469c-bee8-29f35fcbd475", "node_type": "1", "metadata": {}, "hash": "57f32ec6ae8e9c98790269432c338ec5e2f2cd220bcc440ad66164b24fb85e08", "class_name": "RelatedNodeInfo"}}, "text": "Handling with Method Overriding in Java Java Multithreading Java Multithreading Tutorial Java Threads Java Thread Class Java Runnable Interface Lifecycle and States of a Thread in Java Main thread in Java Java Thread Priority in Multithreading Java Naming a Thread and Fetching Name of Current Thread Java Thread.start() vs Thread.run() Method Java Thread.", "start_char_idx": 0, "end_char_idx": 356, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfe3f780-a670-469c-bee8-29f35fcbd475": {"__data__": {"id_": "bfe3f780-a670-469c-bee8-29f35fcbd475", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_7.txt", "file_name": "java_2_chunk_7.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46ce1934-2ac7-4722-95f7-e517b0627c6f", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_7.txt", "file_name": "java_2_chunk_7.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2bb8d7656c22d670ca8e22924adaab6aedd8a4e31a4ddd0fb21ca0e569a062e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "066a9c4b-854c-4f85-b0e6-a84d89cd6f89", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_6.txt", "file_name": "java_2_chunk_6.txt", "file_type": "text/plain", "file_size": 356, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "761ac3b83e37c681d45156a0ea3ef4f312107cb643360b3d972b43c4e48dc3a6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20dd2f21-844a-4f9b-8271-9447088700ba", "node_type": "1", "metadata": {}, "hash": "4b5110bff028e6f01c001f7d68585b6153357849f1d776511256ffc7d092495e", "class_name": "RelatedNodeInfo"}}, "text": "sleep() Method Java Daemon Thread Java Thread Safety and How to Achieve it? Thread Pools in Java Java File Handling File Handling in Java Java File Class Java Program to Create a New File Java Program to Write into a File Delete a File Using Java Java FileReader Class Java FileWriter Class Java FilePermission Class Java FileDescriptor Class Java Streams and Lambda Expressions Java Lambda Expressions Java Method References Java 8 Stream Tutorial Java 8 Features - Complete Tutorial Java IO Java IO - Input/Output in Java with Examples Java Reader Class Java Writer Class Java FileInputStream Class FileOutputStream in Java Ways to Read Input from Console in Java Java BufferedOutputStream Class Java BufferedReader vs Scanner Class Fast I/O in Java in Competitive Programming Java Synchronization Synchronization in Java Importance of Thread Synchronization in Java Java Method and Block Synchronization Java Atomic vs Volatile vs Synchronized Java Lock Framework vs Thread Synchronization Deadloc", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "20dd2f21-844a-4f9b-8271-9447088700ba": {"__data__": {"id_": "20dd2f21-844a-4f9b-8271-9447088700ba", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_8.txt", "file_name": "java_2_chunk_8.txt", "file_type": "text/plain", "file_size": 246, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f055d703-23a1-420f-9c01-1788556ab374", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_8.txt", "file_name": "java_2_chunk_8.txt", "file_type": "text/plain", "file_size": 246, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "17431620d4009d740c2c0893128508c06b90ffa72a64de681c3ab3444dd80a01", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfe3f780-a670-469c-bee8-29f35fcbd475", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_7.txt", "file_name": "java_2_chunk_7.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2bb8d7656c22d670ca8e22924adaab6aedd8a4e31a4ddd0fb21ca0e569a062e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43872589-5160-41d3-995e-62447b9f0304", "node_type": "1", "metadata": {}, "hash": "c218319a332ea8e4eee231fa2d414f5bdfb62925f846ec8f4bf3c00224d10616", "class_name": "RelatedNodeInfo"}}, "text": "k in Java Multithreading Deadlock Prevention And Avoidance Difference Between Lock and Monitor in Java Concurrency ReentrantLock in Java Java Regex Regular Expressions in Java Java Pattern pattern() Method Java Matcher pattern() Method java.lang.", "start_char_idx": 0, "end_char_idx": 246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43872589-5160-41d3-995e-62447b9f0304": {"__data__": {"id_": "43872589-5160-41d3-995e-62447b9f0304", "embedding": null, "metadata": {"file_path": "docs\\java\\java_2_chunk_9.txt", "file_name": "java_2_chunk_9.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ccc9d01c-00b7-47c8-b2b1-386a05dc5740", "node_type": "4", "metadata": {"file_path": "docs\\java\\java_2_chunk_9.txt", "file_name": "java_2_chunk_9.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ca4e161b6eb034bc2e692d33b454fe03d400fc89729940a5e16260815d3dc8f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20dd2f21-844a-4f9b-8271-9447088700ba", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_8.txt", "file_name": "java_2_chunk_8.txt", "file_type": "text/plain", "file_size": 246, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "17431620d4009d740c2c0893128508c06b90ffa72a64de681c3ab3444dd80a01", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e05bcfbe-b7f4-49ab-9acb-8e27e5914151", "node_type": "1", "metadata": {}, "hash": "3fae86ff26da0908d8208bfd3770279c34e9fe48c9cb362c08b3fd37b9345841", "class_name": "RelatedNodeInfo"}}, "text": "Character Class Methods | Set 1 Java Quantifiers Java Networking Java Networking TCP/IP Model User Datagram Protocol (UDP) Difference Between IPv4 and IPv6 Difference Between Connection-oriented and Connection-less Services Socket Programming in Java Java ServerSocket Class Java URL Class JDBC JDBC (Java Database Connectivity) JDBC Drivers Establishing JDBC Connection in Java Types of Statements in JDBC Java Memory Allocation Java Memory Management How are Java Objects Stored in Memory? Stack vs Heap Memory Allocation Java Virtual Machine (JVM) Stack Area How Many Types of Memory Areas are Allocated by JVM? Garbage Collection in Java JVM Garbage Collectors Stack vs Heap Memory Allocation Memory leaks in Java Java Interview Questions Java Interview Questions and Answers Java Multiple Choice Questions Java Practice Problems Java Programs - Java Programming Examples Java Exercises - Basic to Advanced Java Practice Programs with Solutions Java Quiz | Level Up Your Java Skills Java Projects", "start_char_idx": 0, "end_char_idx": 1000, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e05bcfbe-b7f4-49ab-9acb-8e27e5914151": {"__data__": {"id_": "e05bcfbe-b7f4-49ab-9acb-8e27e5914151", "embedding": null, "metadata": {"file_path": "docs\\java\\javabrains.io_42_0.txt", "file_name": "javabrains.io_42_0.txt", "file_type": "text/plain", "file_size": 3710, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9fad2a54-8df5-4fd4-b4a7-fcafc2032d3d", "node_type": "4", "metadata": {"file_path": "docs\\java\\javabrains.io_42_0.txt", "file_name": "javabrains.io_42_0.txt", "file_type": "text/plain", "file_size": 3710, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0a899fd82ee81921cfd9875d7dd5efe3c6ec0acae10b76c9d70bfe564f1be6f7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43872589-5160-41d3-995e-62447b9f0304", "node_type": "1", "metadata": {"file_path": "docs\\java\\java_2_chunk_9.txt", "file_name": "java_2_chunk_9.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ca4e161b6eb034bc2e692d33b454fe03d400fc89729940a5e16260815d3dc8f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4822573-38ff-4d5a-a419-863fe749c8b9", "node_type": "1", "metadata": {}, "hash": "16147ed8522bf6ae7d98d1194562ed293f4203cb84ec0a063fd16139ef0bbd2e", "class_name": "RelatedNodeInfo"}}, "text": "Java Brains Start Learning There is no shortage of video tutorials and blog posts online today. In fact, we have the opposite problem . We have too many of them. How often do you watch a tutorial and end up not getting what you wanted? Or realize you don't have the prerequisite information? How often do you not even know what to learn? You don't need more free tutorials. You need planned and guided learning. You need a learning map ! Wouldn't it be nice if someone gave you a full and clear path to go from where you are to being a kickass developer? How about if every step of the way had clear, detailed and job-oriented online courses? How about if those courses also came with hands-on assignments that you can use to practice and develop confidence? You've come to the right place! Show me! Watching video tutorials is just the beginning. Get hands-on assignments with course videos that allow you to actually apply and implement what is being taught in the course material. This is active learning! Video training Watch it done! See hundreds of video tutorials and follow end-to end courses covering every step of your developer journey Learning maps included Learning roadmaps to guide you what to learn, combined with full courses on the topics you need. No more searching hundreds of courses and videos to learn something Don't just learn. Understand! No more tutorials that only teach you \"quick starts\". Java Brains tutorials are known for building a strong fundamental understanding that paves your way to succeed in the future. LLM Concepts Deep Dive Course Master transformers, embeddings, and RAG. Learn the internals of modern AI and understand practical solutions with vector databases. $50 From Java to AI: The Python-Free Guide to Large Language Models Course A complete introduction to the exciting world of Large Language Models, specifically designed for Java developers who want to understand and implement AI without needing Python. $50 Modern Spring from Scratch Course Dive into the world of Modern Spring with the fundamentals! A comprehensive exploration of Spring Core's foundational concepts, advanced techniques, and best practices. $50 Relational Databases and SQL Course Elevate your backend prowess with essential RDBMS and SQL knowledge. Dive into database essentials, master SQL queries, and confidently bridge the gap between coding and data. $50 Databases and Data Stores for Backend Engineers Course Get up to speed with the intricate maze of databases and data storage. Uncover key principles, explore the nuances of different major database types and equip yourself with the expertise to make informed decisions for your backend systems. $74.99 Core Java Project Work Course This no-framework Core Java hands-on project and walkthrough course invites you to code alongside me, as you practice requirement outlining, data structure design and coding. Practice your Java and go all the way from idea into functioning software. $20 Maven Quick Dive Course Quick dive into Maven! This course focuses on rapidly getting you up to speed on Maven, taking you through Maven's functionalities and best practices, ensuring a clear understanding of its role in Java project management $20 Functional Java Course Discover the core concepts of Functional Programming in Java. From lambda expressions to the Streams API, gain in-depth knowledge to expand your Java expertise. Ideal for developers keen on understanding functional paradigms in Java. $74.99 Java Collections In Depth Course Dive in depth into the world of Java Collections, from understanding equality to exploring Lists, Sets, Maps, and Queues, and all of their important implementations. $74.99 View more courses", "start_char_idx": 0, "end_char_idx": 3710, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4822573-38ff-4d5a-a419-863fe749c8b9": {"__data__": {"id_": "e4822573-38ff-4d5a-a419-863fe749c8b9", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_0.txt", "file_name": "javarevisited.blogspot.com_28_0.txt", "file_type": "text/plain", "file_size": 4587, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "06dca54d-7f84-4a52-908b-33c4063aa480", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_0.txt", "file_name": "javarevisited.blogspot.com_28_0.txt", "file_type": "text/plain", "file_size": 4587, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6af89c148b718d6849959e2f3ecc8ea2d201703d36548abe742aa216797cb69c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e05bcfbe-b7f4-49ab-9acb-8e27e5914151", "node_type": "1", "metadata": {"file_path": "docs\\java\\javabrains.io_42_0.txt", "file_name": "javabrains.io_42_0.txt", "file_type": "text/plain", "file_size": 3710, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0a899fd82ee81921cfd9875d7dd5efe3c6ec0acae10b76c9d70bfe564f1be6f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3f8cb34-ce29-43ca-8668-29fca633e3c2", "node_type": "1", "metadata": {}, "hash": "49da7744de575de0ff3dec492340bda9c48edbcc493098a47f9f98c8672687f9", "class_name": "RelatedNodeInfo"}}, "text": "Javarevisited: Blog about Java Programming Tutorials, Examples, Design Patterns, Interview Questions and Answers, FIX Protocol, Tibco RV messaging, UNIX and Linux Commands, XML, SQL, MySQL, Oracle, jQuery, JavaScript,HTML, Multithreading, Collection, Error and Exception, Debugging, Best Practices and Practical tips from my experience. Javarevisited Learn Java, Programming, Spring, Hibernate throw tutorials, examples, and interview questions Topics and Categories core java spring hibernate collections multithreading design patterns interview questions coding data structure OOP java 8 books About Me Java Certifications JDBC jsp-servlet JSON SQL Linux Courses online resources jvm-internals REST Eclipse jQuery Java IO Java XML Sunday, May 25, 2025 Top 7 Free Java Courses for Beginners to Learn Online in 2025 - Best of Lot We all love free resources, don't we? If you want to learn Java online in 2025 and looking for the best free core Java online courses then you have come to the right place. Earlier, I have shared the best Java courses for beginners and in this article, I am going to share the best free courses to learn Java online. There was a time when I buy a lot of books when I was preparing for my engineering entrance exam but I only ended up buying books not reading them. After that, I changed my habit to first try to read a book on loan or try free resources and only buy when I really need them. When I started my programming journey, mostly I learn from free resources like free courses and books and there I developed the passion to collect free resources as well. Read more \u00bb By javin paul at May 25, 2025 8 comments Email This BlogThis! Share to X Share to Facebook Labels: core java , courses , free resources , online resources Top 7 Data Science and Machine Learning Courses to Learn Online in 2025 - Best of Lot Many programmers and Computer Science graduates are moving towards Data Science and Machine learning hoping for better pay and career opportunity and there is a reason for it. Data Scientist and Machine Learning Specialist have been ranked the number one job on Glassdoor for the last couple of years and the average salary of a data scientist is over $120,000 in the United States according to Indeed. Data Science is not only a rewarding career in terms of money but also provides the opportunity to solve some of the world's most interesting problems. IMHO, that's the main motivation many good programmers are moving towards Data Science, Machine Learning, and Artificial Intelligence. Read more \u00bb By javin paul at May 25, 2025 3 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , Data Science , online resources , python Top 7 Spring MVC Online Courses for Beginners in 2025 - Best of Lot Hello guy, Many of you have been asking me about the best online courses to learn Reactive Spring, Spring Boot, and Spring MVC. I have shared the best Spring Boot courses in the past, and today I will share the best courses to learn Spring MVC . Many Java developers think that Spring MVC is the same as Spring Framework, which confuses them. In this article, I'll try to answer than questions and share some of the best courses to learn Spring MVC for Java developers. Both Spring Core and Spring MVC are part of the same umbrella, a more significant spring framework project, but they are not the same. Read more \u00bb By javin paul at May 25, 2025 0 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , spring , spring mvc Top 6 Courses and Books to Learn Tailwind CSS for Beginners in 2025 - Best of Lot Hello guys, if you want to learn Tailwind CSS and their utility class in 2025 and looking for the best online courses to learn Tailwind CSS then you have come to the right place. In the past, I have shared best courses to learn HTML and CSS and Bootstrap , another popular CSS framework and in this article, I will share best online courses for Tailwind CSS. If you don't know what is Tailwind CSS, let me give you a brief overview first. It's another utility framework which allows you to break your style into small reusable components. This prevent repetition and improves organization by creating CSS classes for every feature or section on the website instead of hogging all page space with one big style sheet that applies globally Read more \u00bb By javin paul at May 25, 2025 0 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , css , Tailwind , web development Top 8 Courses to learn Pandas and Python Data Analysis for Beginners in 2025 - Best of Lot Pandas", "start_char_idx": 0, "end_char_idx": 4583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3f8cb34-ce29-43ca-8668-29fca633e3c2": {"__data__": {"id_": "b3f8cb34-ce29-43ca-8668-29fca633e3c2", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_1.txt", "file_name": "javarevisited.blogspot.com_28_1.txt", "file_type": "text/plain", "file_size": 4670, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae969e3a-1e27-491e-9a0b-86b25777661a", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_1.txt", "file_name": "javarevisited.blogspot.com_28_1.txt", "file_type": "text/plain", "file_size": 4670, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "bf3912ec06814b90f5c93162631840ddeececaf5c57446010e41553804e1c208", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4822573-38ff-4d5a-a419-863fe749c8b9", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_0.txt", "file_name": "javarevisited.blogspot.com_28_0.txt", "file_type": "text/plain", "file_size": 4587, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6af89c148b718d6849959e2f3ecc8ea2d201703d36548abe742aa216797cb69c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c40d0d8b-bfc0-4ed3-a30c-fa3ad5a69e5a", "node_type": "1", "metadata": {}, "hash": "dc9ce09fbf57e9154ac081b8def7c7d3dcc19451c69b049a570f999c52096ac4", "class_name": "RelatedNodeInfo"}}, "text": "is one of the most potent and popular Python libraries for Data Analysis. It's also one of the favorite tools for Data scientists because it helps them in cleaning, transformation, manipulation, and analysis of Data. To be honest, data in the real world is messy, and before you can start with your analysis, you need to clean and transform the data in the format you want. A tool or library like Pandas really helps there. That's why it's essential to learn about Pandas while doing Data Analysis with Python. It's even more critical if you are in the field of Data Science and Data Analysis . If you know Pandas, well and good, but if you don't mind, as I am going to share some of the best online courses to learn Pandas and Data Analysis with Python in 2025. Read more \u00bb By javin paul at May 25, 2025 1 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , Data Science , online resources , python Friday, May 23, 2025 Top 10 Data Science Certification Courses for Python and R Developers in 2025 - Best of Lot Hello guys, Data Science, Machine Learning, Deep Learning, and Artificial intelligence are really hot at this moment and offering a lucrative career to programmers with high pay and exciting work. It's an excellent opportunity for programmers who are willing to learn these new skills and upgrade themselves. It's also important from the job perspective because Robots and chatbots are getting smarter day by day, thanks to these technologies, and most likely will take over some of the jobs which many programmers do today. Hence, it's essential for software engineers and developers to upgrade themselves with these skills. Read more \u00bb By javin paul at May 23, 2025 3 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , Data Science , machine learning , online resources Top 5 Udemy Courses to Learn Artificial Intelligence in 2025 - Best of Lot If you want to learn Artificial Intelligence in 2025 and looking for the best online courses then you have come to the right place. Earlier, I have shared the best Data Science courses and today, I am going to share the best courses to learn Artificial Intelligence in 2025 . These are the best online courses for Artificial Intelligence or AI for beginners and curated from sites like Udemy , Pluralsight , and Coursera , three of the best online learning platforms. These courses have been created by experts like Andrew Ng, an AI pioneer and founder of Coursera, and trusted by thousands of programmers and non-technical people who want to learn AI. You can also join them to learn Artificial Intelligence in 2025. Read more \u00bb By javin paul at May 23, 2025 2 comments Email This BlogThis! Share to X Share to Facebook Labels: artificial intelligence , coursera , courses , machine learning Top 10 Coursera Certifications, Courses, and Specializations to Learn Essential Skills in 2025 - Best of Lot Hello guys, if you are looking for the best Coursera courses, certification, and specialization to join in 2025 then you have come to the right place. In the last few articles I have shared the best Coursera courses to learn Python , Software Development , and Cloud Computing , and today, I will share the best Coursera courses, specializations, and certifications you can join in 2025. Taking online courses and certifications have become mandatory in order to have a professional and successful career and the process is similar to a college education just by staying at your home taking classes watching videos and passing the quizzes and done you are now officially certified and when it comes to the best platform to learn online no one can compete with Coursera. Read more \u00bb By javin paul at May 23, 2025 1 comments Email This BlogThis! Share to X Share to Facebook Labels: best of javarevisited , coursera , courses Top 7 Free Udemy Courses to Learn Kubernetes for Beginners in 2025 - Best of Lot Hello guys, DevOps is becoming an essential skill in today's Programming and Software Development world and Kubernetes is an important concept and tool for DevOps engineers . It takes container-based deployment to another level and allows you to manage it on the scale. You can use Kubernetes to scale your container environment or let Kubernetes do all the work for you by leveraging its auto-scaling feature. Many DevOps beginners think that Docker and Kubernetes are the same but they are not. Docker provides a container to deploy your application and commands to interact with those but container but Kubernetes is actually a container management technology, which decides how many containers are needed and deal with other management aspects.", "start_char_idx": 0, "end_char_idx": 4666, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c40d0d8b-bfc0-4ed3-a30c-fa3ad5a69e5a": {"__data__": {"id_": "c40d0d8b-bfc0-4ed3-a30c-fa3ad5a69e5a", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_2.txt", "file_name": "javarevisited.blogspot.com_28_2.txt", "file_type": "text/plain", "file_size": 4483, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41dbe945-48f3-45c3-b7a6-a7b6642f131f", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_2.txt", "file_name": "javarevisited.blogspot.com_28_2.txt", "file_type": "text/plain", "file_size": 4483, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f93dbaa63adbf8402a9a1b7388a37ed6113efaf6ad4eb8e37af2220e083f910d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3f8cb34-ce29-43ca-8668-29fca633e3c2", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_1.txt", "file_name": "javarevisited.blogspot.com_28_1.txt", "file_type": "text/plain", "file_size": 4670, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "bf3912ec06814b90f5c93162631840ddeececaf5c57446010e41553804e1c208", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b9dae3d2-bd00-4059-bbfe-e24c1afa845d", "node_type": "1", "metadata": {}, "hash": "3138c10d656207678454800c7084f1ad42d9dfb2d13799c183a8f6ebc901d3ad", "class_name": "RelatedNodeInfo"}}, "text": "Read more \u00bb By javin paul at May 23, 2025 2 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , DevOps , Kubernetes Top 5 Udemy Courses to learn D3.js for Data Visualization with JavaScript in 2025 - Best of Lot If you have done any Data visualization work then you might have heard about D3 - one of the excellent JavaScript libraries, which allows you to create beautiful interactive data visualization for the web. It's prevalent among Data Scientists and Data Analysts who often need these visualizations and charts to present data insights to stakeholders and business people. If you are not familiar with D3, no need to worry because, In this article, I am going to share some of the awesome courses to learn D3 in 2025. These courses teach you the basics of data visualization with D3 by binding data to a web page\u2019s elements and customizing the elements based on that very data. You will also learn how to build different kinds of charts like Bar charts, Pie charts, Mind maps, etc using D3.js Read more \u00bb By javin paul at May 23, 2025 0 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , D3 , Data Science , Data visualization , JavaScript , online resources Top 6 Udemy Courses to Learn IntelliJ IDEA and Android Studio IDE for Beginners in 2025 [Best & FREE] There is no doubt that IntelliJ IDEA is THE best IDE for Java development, even though Eclipse may still be probably used by more people because it's FREE, IntelliJ IDEA is the most feature-rich and complete IDE. The Android Studio , which is the official IDE for Android development in Java, is also based upon IntelliJ IDEA, which further cement its place as the IDE Java developer should learn. The only thing which stops many other Java developers and me from moving from IntelliJ IDEA in the past was the lack of resources. Since Eclipse was free from the start, there are tons of resources, like books , courses , and tutorials are available. Read more \u00bb By javin paul at May 23, 2025 1 comments Email This BlogThis! Share to X Share to Facebook Labels: android , courses , online resources , tools Top 6 Free Data Structure and Algorithm Courses for Java and C Programmers Data Structure and Algorithm is one of the essential topics for programmers, both to get a job and do well on Job. Good knowledge of data structure and algorithm is the foundation of writing good code. If you are familiar with essential data structures like an array , string , linked list , tree, map, and advanced data structure like Tries, AVL trees, etc and know when to use which data structure and compute the CPU and memory cost of your code in terms Even though you don't need to write your own array, linked list or hash table, given every major programming SKD provides them like JDK or C++ STL library, you will need to understand them so that you can use them in right place. Using the right data structure can drastically improve the performance of an algorithm. Read more \u00bb By javin paul at May 23, 2025 3 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , data structure and algorithm , online resources Which is the best course to Learn Spring Security 5 and Spring Data JPA for Java Programmers? If you are a Java Spring developer and working with Spring Security then you may be familiar with the \"Learn Spring Security\" course by Eugen Paraschiv of Baeldung. It is one of the most advanced and comprehensive courses on Spring Security and the best part of this course is that Eugen always keeps it up-to-date with the new Spring Security release. Now that version Spring Security 5 is out - he has updated his course to use new features of Spring Security 5. Btw, there is some really cool new functionality coming in Spring Security 5 for the reactive programming model, and many other improvements and new features. But, the most important one is the release of OAuth2. Read more \u00bb By javin paul at May 23, 2025 0 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , online resources , spring , spring security Grokking the SQL Interview is Available Now !! Hello guys, I am feeling proud and excited to announce the release of my new book, \"Grokking the SQL Interview\" , a book, which programmers, Data Scientist, Data Analyst, QA, Business Analyst, and Junior DBAs can use to prepare for SQL question on tech interviews . Yes, it's finally available now after 2 years of waiting and you can purchase it", "start_char_idx": 0, "end_char_idx": 4476, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9dae3d2-bd00-4059-bbfe-e24c1afa845d": {"__data__": {"id_": "b9dae3d2-bd00-4059-bbfe-e24c1afa845d", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_3.txt", "file_name": "javarevisited.blogspot.com_28_3.txt", "file_type": "text/plain", "file_size": 4913, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d427b32c-885f-42a5-834b-a3ae4bec4fde", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_3.txt", "file_name": "javarevisited.blogspot.com_28_3.txt", "file_type": "text/plain", "file_size": 4913, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6ecdf65ca40f30686abc0f27f7a417c31a2b2e6613312924c77211da6429f50d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c40d0d8b-bfc0-4ed3-a30c-fa3ad5a69e5a", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_2.txt", "file_name": "javarevisited.blogspot.com_28_2.txt", "file_type": "text/plain", "file_size": 4483, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f93dbaa63adbf8402a9a1b7388a37ed6113efaf6ad4eb8e37af2220e083f910d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bcaa1cd5-c008-4591-a191-9aecd08b2bbb", "node_type": "1", "metadata": {}, "hash": "3cf50a62b530b113be7945a2ac2a7b2ca1d794b016cbb38689408a9b2161053b", "class_name": "RelatedNodeInfo"}}, "text": "now on Gumroad for a special price of just $10.95 (original price $21.90). I thought about this book 4 years ago , and it took really long to work on this as I tried to make it as perfect as possible. Read more \u00bb By javin paul at May 23, 2025 0 comments Email This BlogThis! Share to X Share to Facebook Labels: best of javarevisited , books , SQL Top 5 Free Udemy Courses to Learn Java Multithreading and Concurrency in 2025 - Best of Lot Hello guys, if you want to learn multithreading and concurrency in Java and looking for best free resources like online courses and tutorials then you have come to the right place. Earlier, I have shared best free Java Courses and best free Spring Framework courses and today, I will share best free online courses to learn Multithreading and Concurrency in Java. M ultithreading is one of the important skill for Java programmers as companies are always in hunt of Java programmer who are good at multithreading and concurrency but at the same time its very hard topic to master . Acquiring solid multithreading and concurrency skill require a lot of hard worked and years of experience but you can speed up by joining best Java multithreading courses and learning from expert. Read more \u00bb By javin paul at May 23, 2025 1 comments Email This BlogThis! Share to X Share to Facebook Labels: courses , free resources , Java multithreading Tutorials Older Posts Home Subscribe to: Posts ( Atom ) Total Pageviews Search This Blog Preparing for Java and Spring Boot Interview? Join My Newsletter .. Its FREE My Books Everything Bundle (Java + Spring Boot + SQL Interview) for a discount Grokking the Java Interview Grokking the Spring Boot Interview Spring Framework Practice Questions Grokking the SQL Interview Grokking the Java Interview Part 2 Grokking the Java SE 17 Developer Certification (1Z0-829 Exam) My Courses Spring Professional Certification Practice Test Java SE 11 Certification Practice Test Azure Fundamentals AZ-900 Practice Test Java EE Developer Exam Practice Test Java Foundations 1Z0-811 Exam Practice Test AWS Cloud Practitioner CLF-C02 Exam Practice Test Java SE 17 1Z0-829 Exam Practice Test Azure AI-900 Exam Practice Test 1Z0-829 Java Certification Topic wise Practice Test My Newsletter articles How to grow financially as Software Engineer? Difference between Microservices and Monolithic Architecture What is Rate Limiter? How does it work Difference between @Component vs @Bean annotations in Spring Framework? Top 10 Software Design Concepts Every Developer should know How does SSO Single Sign On Authentication Works? Interview Questions core java interview question (183) interview questions (108) data structure and algorithm (91) Coding Interview Question (86) spring interview questions (52) design patterns (47) object oriented programming (40) SQL Interview Questions (36) thread interview questions (30) collections interview questions (26) database interview questions (16) servlet interview questions (15) hibernate interview questions (11) Programming interview question (6) Java Tutorials FIX protocol tutorial (16) JDBC (35) Java Certification OCPJP SCJP (33) Java JSON tutorial (23) Java Programming Tutorials (21) Java multithreading Tutorials (64) Java xml tutorial (16) date and time tutorial (27) java IO tutorial (30) java collection tutorial (94) jsp-servlet (37) online resources (210) Get New Blog Posts on Your Email Followers Categories courses (274) SQL (77) linux (52) database (51) Eclipse (37) REST (34) Java Certification OCPJP SCJP (33) JVM Internals (27) JQuery (26) Testing (23) Maven (16) general (15) Blog Archive \u25bc 2025 (494) \u25bc May (68) Top 7 Free Java Courses for Beginners to Learn Onl... Top 7 Data Science and Machine Learning Courses to... Top 7 Spring MVC Online Courses for Beginners in 2... Top 6 Courses and Books to Learn Tailwind CSS for ... Top 8 Courses to learn Pandas and Python Data Anal... Top 10 Data Science Certification Courses for Pyth... Top 5 Udemy Courses to Learn Artificial Intelligen... Top 10 Coursera Certifications, Courses, and Speci... Top 7 Free Udemy Courses to Learn Kubernetes for B... Top 5 Udemy Courses to learn D3.js for Data Visual... Top 6 Udemy Courses to Learn IntelliJ IDEA and And... Top 6 Free Data Structure and Algorithm Courses fo... Which is the best course to Learn Spring Security ... Grokking the SQL Interview is Available Now !!", "start_char_idx": 0, "end_char_idx": 4389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bcaa1cd5-c008-4591-a191-9aecd08b2bbb": {"__data__": {"id_": "bcaa1cd5-c008-4591-a191-9aecd08b2bbb", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_3.txt", "file_name": "javarevisited.blogspot.com_28_3.txt", "file_type": "text/plain", "file_size": 4913, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d427b32c-885f-42a5-834b-a3ae4bec4fde", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_3.txt", "file_name": "javarevisited.blogspot.com_28_3.txt", "file_type": "text/plain", "file_size": 4913, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6ecdf65ca40f30686abc0f27f7a417c31a2b2e6613312924c77211da6429f50d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9dae3d2-bd00-4059-bbfe-e24c1afa845d", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_3.txt", "file_name": "javarevisited.blogspot.com_28_3.txt", "file_type": "text/plain", "file_size": 4913, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a6810100cd69abac1a8eb9ecab45ae48a7f693d838b0bdc7872b75e1eba35433", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5e98941f-7c54-4596-9fd0-e97d2571a9a9", "node_type": "1", "metadata": {}, "hash": "e886dfb7296f251abe46e0689a03e74e057bbf9e7e658c1dfd3dd3c8cd0837d1", "class_name": "RelatedNodeInfo"}}, "text": "! Top 5 Free Udemy Courses to Learn Java Multithread... Top 15 Udemy Courses to Learn Essential Skills for... 10 Best Udemy Courses of Stephane Maarek to Learn ... Top 5 Jose Portilla Courses from Udemy to Learn Py... Top 6 Websites to learn Microsoft Azure Cloud for ... Top 10 Tools Data Scientists and Machine Learning ... Top 5 Free Udemy Courses to Learn JUnit in 2025 - ... Top 5 Udemy Courses to Learn JavaScript Unit Testi... Teachable, Thinkific vs Udemy? Which is the Best O... 3 Ways to Learn Web Development", "start_char_idx": 4388, "end_char_idx": 4907, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5e98941f-7c54-4596-9fd0-e97d2571a9a9": {"__data__": {"id_": "5e98941f-7c54-4596-9fd0-e97d2571a9a9", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_4.txt", "file_name": "javarevisited.blogspot.com_28_4.txt", "file_type": "text/plain", "file_size": 4666, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "484a24ce-7a69-46d6-b488-d96e6c9301ae", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_4.txt", "file_name": "javarevisited.blogspot.com_28_4.txt", "file_type": "text/plain", "file_size": 4666, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cb14287c2658c3241984d8e1fe0c45538a269bf21564602bbccb364a3c4468db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bcaa1cd5-c008-4591-a191-9aecd08b2bbb", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_3.txt", "file_name": "javarevisited.blogspot.com_28_3.txt", "file_type": "text/plain", "file_size": 4913, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b19b5876bfcf7dfc095a97cb7e8dd6fa3e94ca9bc1c69823e9685f633addd676", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6fb0571-4e0b-4831-a85f-a65fc90e074d", "node_type": "1", "metadata": {}, "hash": "c8dbbe8552aa45c4bd6e3da0ea9062a4b345b22eeadc307118949b633186c5cc", "class_name": "RelatedNodeInfo"}}, "text": "in 2025 - Best of Lot 21 Jenkins and CI/CD Interview Questions for Java ... Review - Is Advanced CSS and Sass: Flexbox, Grid, ... Top 10 Online Courses to Learn Web 3 in 2025 - Be... Top 5 Java EE 7 Application Developer Exam Courses... Top 5 Java 8 Practice Test and Exam Simulators (OC... Review - Is React Complete Guide Course on Udemy G... 10 Linux Commands and Options Every Developer shou... Why Programmers Should Learn Mathematics Again? Top 10 Business, Finance & Entrepreneurship Course... 250+ Practice Questions for Java SE 11 Developer C... What is Covariant Method Overriding of Java? Example How to create Custom Exception in Java - Tutorial ... Review of Udemy's Machine Learning A-Z - Hands-On ... 10 Articles Every Web Developer Should Read Top 10 Java SE 17 Certification Practice Questions... Does Udemy, Coursera, edX, and Udacity Course Cert... Difference between UTF-8, UTF-16 and UTF-32 Charac... Where is Java used in Real World? Is Pramp a Good Place for System Design and Coding... Review - Is System Design Interview - An Insider's... Top 10 System Design Courses for Beginners and Exp... Top 8 Udemy Courses to Learn System Design and Sof... Top 10 System Design and Software Analysis and Des... Top 10 Courses to Crack System Design Interview in... Top 10 Websites to Learn System Design and Softwar... DesignGurus.io Review - Is Grokking Advanced Syste... Top 20 System Design Interview Questions with Answ... How to design a Messaging App like Twitter on Syst... Top 10 Free Courses for System Design Interviews i... Review - Is ByteByteGo System Design Interview Cou... Educative Review - Is Grokking Modern System Desig... Review - Is Grokking the System Design interview C... 100+ System Design Interview Questions and Problem... 4 Steps to Prepare for System Design Interviews in... How to Design Vending Machine in Java - Part 2 [Ob... Top 40 OOP Object Oriented Programming Interview Q... Top 50 Linux Interview Questions Answers for 3 to ... Review - Is Build Responsive Real-World Websites W... Top 8 Free Courses to Learn Kotlin in 2025 10 Git commands Every Developer Should Know/Learn Review - Is Coursera's Meta Database Engineer Prof... Top 20 Angular interview questions and Answers for... Top 5 Courses to Crack AWS Certified SysOps Admini... How to Learn Java Programming in 2025? [with Resou... \u25ba April (116) \u25ba March (33) \u25ba February (129) \u25ba January (148) \u25ba 2024 (303) \u25ba December (89) \u25ba November (4) \u25ba October (63) \u25ba September (31) \u25ba August (11) \u25ba July (22) \u25ba June (8) \u25ba May (24) \u25ba April (34) \u25ba March (9) \u25ba February (1) \u25ba January (7) \u25ba 2023 (568) \u25ba December (4) \u25ba November (4) \u25ba October (8) \u25ba September (154) \u25ba August (20) \u25ba July (47) \u25ba June (2) \u25ba May (173) \u25ba April (114) \u25ba March (29) \u25ba February (8) \u25ba January (5) \u25ba 2022 (96) \u25ba December (1) \u25ba November (1) \u25ba September (1) \u25ba August (24) \u25ba July (25) \u25ba June (14) \u25ba May (7) \u25ba April (5) \u25ba March (3) \u25ba February (11) \u25ba January (4) \u25ba 2021 (352) \u25ba December (1) \u25ba November (7) \u25ba October (21) \u25ba September (44) \u25ba August (138) \u25ba July (141) Contributors SimpleJava javin paul Popular Posts How to fix @Autowired - No qualifying bean of type found for dependency in Spring Boot? [Solved] Hello guys, if you are working in a Java and Spring Boot project and you are getting errors like \"@Autowired - No qualifyin... TIBCO Rendezvous or TIBCO RV Messaging? Example Tutorial TIBCO Tutorial: TIBCO RV messaging When I started working with a big investment bank I come across a new messaging technology called TIBC... Top 133 Java Interview Questions Answers for 2 to 5 Years Experienced Programmers Time is changing and so is Java interviews. Gone are the days, when knowing the difference between String and StringBuffer can help you to g... How to create HTTP Server in Java - ServerSocket Example Java has very good networking support, allows you to write client-server applications by using TCP Sockets.", "start_char_idx": 0, "end_char_idx": 3887, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6fb0571-4e0b-4831-a85f-a65fc90e074d": {"__data__": {"id_": "e6fb0571-4e0b-4831-a85f-a65fc90e074d", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_4.txt", "file_name": "javarevisited.blogspot.com_28_4.txt", "file_type": "text/plain", "file_size": 4666, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "484a24ce-7a69-46d6-b488-d96e6c9301ae", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_4.txt", "file_name": "javarevisited.blogspot.com_28_4.txt", "file_type": "text/plain", "file_size": 4666, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cb14287c2658c3241984d8e1fe0c45538a269bf21564602bbccb364a3c4468db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5e98941f-7c54-4596-9fd0-e97d2571a9a9", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_4.txt", "file_name": "javarevisited.blogspot.com_28_4.txt", "file_type": "text/plain", "file_size": 4666, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "7b6f7f921cacb791bf8e8e220cb44727bd7ee8550afe2f9195b2754dff972524", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36e1e56e-af5b-4fd3-83fb-6eed394817f7", "node_type": "1", "metadata": {}, "hash": "27ed0635a94ca5d0c6d5e96bd517856f8cdbbcb5fb395610520a218bcc5e5dc1", "class_name": "RelatedNodeInfo"}}, "text": "[Solved] Hello guys, if you are working in a Java and Spring Boot project and you are getting errors like \"@Autowired - No qualifyin... TIBCO Rendezvous or TIBCO RV Messaging? Example Tutorial TIBCO Tutorial: TIBCO RV messaging When I started working with a big investment bank I come across a new messaging technology called TIBC... Top 133 Java Interview Questions Answers for 2 to 5 Years Experienced Programmers Time is changing and so is Java interviews. Gone are the days, when knowing the difference between String and StringBuffer can help you to g... How to create HTTP Server in Java - ServerSocket Example Java has very good networking support, allows you to write client-server applications by using TCP Sockets. In this tutorial, we will learn... Top 5 Books to Learn Core Java for Beginners in 2025 - Best of Lot Hello guys, I have shared a lot of books related to Java and related technologies in the past, like books and online courses to learn Spri... Top 5 Udemy Courses to Learn Maven in 2025 - Best of Lot The Apache Maven or commonly known as just \"Maven,\" is an essential tool for Java Programmers. It allows you to build your proje... The 2025 Java Developer RoadMap [UPDATED] Hello guys, I have been sharing a lot of roadmaps to become a Web developer , DevOps engineer , and recently React.js developer . One of th... How to use String.codepoint() method in Java? Example Tutorial", "start_char_idx": 3163, "end_char_idx": 4568, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36e1e56e-af5b-4fd3-83fb-6eed394817f7": {"__data__": {"id_": "36e1e56e-af5b-4fd3-83fb-6eed394817f7", "embedding": null, "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_5.txt", "file_name": "javarevisited.blogspot.com_28_5.txt", "file_type": "text/plain", "file_size": 721, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39b4744e-1b20-4ec5-80ff-a1920ed4350e", "node_type": "4", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_5.txt", "file_name": "javarevisited.blogspot.com_28_5.txt", "file_type": "text/plain", "file_size": 721, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1d05b1acfce4a5749098646565760aa7ddc3cae36692c6eaf90eaa83cf9e36f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6fb0571-4e0b-4831-a85f-a65fc90e074d", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_4.txt", "file_name": "javarevisited.blogspot.com_28_4.txt", "file_type": "text/plain", "file_size": 4666, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "9ca83aefe894c376b057b5e5a25fc41fe8922cfc02fce05155c8eb1c59d5914f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8cc18e0-1ba0-4292-8507-b31109161c74", "node_type": "1", "metadata": {}, "hash": "1b09d6b04c7dd0a2d9e848d8b271a3d55fc3d3cf2f2fcd87ee1e2d58920682a3", "class_name": "RelatedNodeInfo"}}, "text": "CodePoint method in String is used to get Unicode code point value at index or before the index. In String class we have a lot of util... Top 30 UNIX command Interview Questions asked in Investment Banks UNIX Interview Questions and Answers UNIX or Linux operating system has become a default Server operating system and for whichever progra... Top 20 Angular interview questions and Answers for 1 to 2 Years Experienced Hello guys, if you are preparing for Angular developer interview or a web developer interview where Angular skills are required and looking ... Subscribe To Posts Atom Posts All Comments Atom All Comments Pages Privacy Policy Terms & Conditions Copyright by Javin Paul 2010-2025. Powered by Blogger .", "start_char_idx": 0, "end_char_idx": 721, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8cc18e0-1ba0-4292-8507-b31109161c74": {"__data__": {"id_": "a8cc18e0-1ba0-4292-8507-b31109161c74", "embedding": null, "metadata": {"file_path": "docs\\java\\medium.com_37_0.txt", "file_name": "medium.com_37_0.txt", "file_type": "text/plain", "file_size": 2870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60dc5051-fe7e-4362-9056-72a8645418ab", "node_type": "4", "metadata": {"file_path": "docs\\java\\medium.com_37_0.txt", "file_name": "medium.com_37_0.txt", "file_type": "text/plain", "file_size": 2870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "976ffc929525c4448d6dab3f65819d16aceea221c763abed792625a83e5a1bf7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36e1e56e-af5b-4fd3-83fb-6eed394817f7", "node_type": "1", "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_5.txt", "file_name": "javarevisited.blogspot.com_28_5.txt", "file_type": "text/plain", "file_size": 721, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1d05b1acfce4a5749098646565760aa7ddc3cae36692c6eaf90eaa83cf9e36f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94be6548-705c-4a68-995a-ddd6c80b530f", "node_type": "1", "metadata": {}, "hash": "7d08e794a31b5f32882f50bc1bb390361381370f7f072084718a057287746a60", "class_name": "RelatedNodeInfo"}}, "text": "The most insightful stories about Java - Medium Sitemap Open in app Sign up Sign in Medium Logo Write Sign up Sign in Explore topics Java Programming Languages Software Development Programming Spring Boot Coding Spring JavaScript Android Software Engineering Kotlin Java Topic \u00b7 608K followers \u00b7 100K stories Follow Recommended stories In Mike\u2019s blog by Mike Hearn Why not object capability languages? A map of the security territory May 11 A response icon 2 CherishedThoughts How to Crochet a Rose Algorithm: Demystifying Code Through Crochet Design Using Crochet to Visually Explain the Rose Curve and Polar Coordinates Apr 23 A response icon 3 In Code Like A Girl by Nidhi Gahlawat Smart Pointers: Learn the Smarter Way To Manage Memory! In the last article, we covered manual memory management in C++ with new and delete. But managing heap memory manually is tricky and\u2026 Mar 27 A response icon 7 Mar 27 A response icon 7 William Jackson When Inheritance is a Good Thing Yes, inheritance can be a valuable tool! It can also be a costly hurdle. Let\u2019s talk about it. Mar 16 A response icon 11 Mar 16 A response icon 11 In Level Up Coding by Jimin Kang Concurrent Programming: Producer-Consumer Problem An overview of a couple synchronization methods to approach this central problem in concurrent programming. Feb 14 A response icon 3 Feb 14 A response icon 3 In Mike\u2019s blog by Mike Hearn Why not object capability languages? A map of the security territory May 11 A response icon 2 CherishedThoughts How to Crochet a Rose Algorithm: Demystifying Code Through Crochet Design Using Crochet to Visually Explain the Rose Curve and Polar Coordinates Apr 23 A response icon 3 In Code Like A Girl by Nidhi Gahlawat Smart Pointers: Learn the Smarter Way To Manage Memory! In the last article, we covered manual memory management in C++ with new and delete. But managing heap memory manually is tricky and\u2026 Mar 27 A response icon 7 William Jackson When Inheritance is a Good Thing Yes, inheritance can be a valuable tool! It can also be a costly hurdle. Let\u2019s talk about it. Mar 16 A response icon 11 In Level Up Coding by Jimin Kang Concurrent Programming: Producer-Consumer Problem An overview of a couple synchronization methods to approach this central problem in concurrent programming. Feb 14 A response icon 3 In Outbrain Engineering by Gal Ashuach How to Prevent Bugs From Reaching Production 6 Practices We Have in Outbrain Feb 9 A response icon 3 In Code Like A Girl by Aleksandra Liutikova aka Java Senorita Deepseek and The Java Test: Overhyped AI or a Game-Changer? Revolution or just another letdown? I will test the AI with Java task and let you know if you can cancel your ChatGPT subscription or not Feb 3 A response icon 10 Marc Petit-Huguenin Detecting SIP Call Loops An Undecidable Problem Jan 21 A response icon 4 See more recommended stories", "start_char_idx": 0, "end_char_idx": 2856, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94be6548-705c-4a68-995a-ddd6c80b530f": {"__data__": {"id_": "94be6548-705c-4a68-995a-ddd6c80b530f", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_0.txt", "file_name": "www.baeldung.com_14_0.txt", "file_type": "text/plain", "file_size": 5069, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41542e1d-81df-456d-a0bb-7c8a9c4ec335", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_0.txt", "file_name": "www.baeldung.com_14_0.txt", "file_type": "text/plain", "file_size": 5069, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a8e974760974156447eeb5df7c2038ebfc925af1cbe06f0d04fd0b78f9611184", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8cc18e0-1ba0-4292-8507-b31109161c74", "node_type": "1", "metadata": {"file_path": "docs\\java\\medium.com_37_0.txt", "file_name": "medium.com_37_0.txt", "file_type": "text/plain", "file_size": 2870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "976ffc929525c4448d6dab3f65819d16aceea221c763abed792625a83e5a1bf7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "95d82e12-4c77-4e90-8357-787f9e07bc56", "node_type": "1", "metadata": {}, "hash": "0649d4b75d579bbdf848997bf8ce6d8555bc5cb0fb0a0b0aaecf5ba1c5f8e36b", "class_name": "RelatedNodeInfo"}}, "text": "The Java Stream API Tutorial | Baeldung Baeldung Pro \u2013 NPI EA (cat = Baeldung) Baeldung Pro comes with both absolutely No-Ads as well as finally with Dark Mode , for a clean learning experience: >> Explore a clean Baeldung Once the early-adopter seats are all used, the price will go up and stay at $33/year. Partner \u2013 Microsoft \u2013 NPI EA (cat = Baeldung) Azure Container Apps is a fully managed serverless container service that enables you to build and deploy modern, cloud-native Java applications and microservices at scale. It offers a simplified developer experience while providing the flexibility and portability of containers. Of course, Azure Container Apps has really solid support for our ecosystem, from a number of build options, managed Java components, native metrics, dynamic logger, and quite a bit more. To learn more about Java features on Azure Container Apps, visit the documentation page . You can also ask questions and leave feedback on the Azure Container Apps GitHub page . Partner \u2013 Microsoft \u2013 NPI EA (cat= Spring Boot) Azure Container Apps is a fully managed serverless container service that enables you to build and deploy modern, cloud-native Java applications and microservices at scale. It offers a simplified developer experience while providing the flexibility and portability of containers. Of course, Azure Container Apps has really solid support for our ecosystem, from a number of build options, managed Java components, native metrics, dynamic logger, and quite a bit more. To learn more about Java features on Azure Container Apps, you can get started over on the documentation page . And, you can also ask questions and leave feedback on the Azure Container Apps GitHub page . Partner \u2013 Orkes \u2013 NPI EA (cat=Spring) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. Partner \u2013 Orkes \u2013 NPI EA (tag=Microservices) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. eBook \u2013 Guide Spring Cloud \u2013 NPI EA (cat=Spring Cloud) Let's get started with a Microservice Architecture with Spring Cloud: >> Join Pro and download the eBook eBook \u2013 Mockito \u2013 NPI EA (tag = Mockito) Mocking is an essential part of unit testing, and the Mockito library makes it easy to write clean and intuitive unit tests for your Java code. Get started with mocking and improve your application tests using our Mockito guide : Download the eBook eBook \u2013 Java Concurrency \u2013 NPI EA (cat=Java Concurrency) Handling concurrency in an application can be a tricky process with many potential pitfalls . A solid grasp of the fundamentals will go a long way to help minimize these issues. Get started with understanding multi-threaded applications with our Java Concurrency guide: >> Download the eBook eBook \u2013 Reactive \u2013 NPI EA (cat=Reactive) Spring 5 added support for reactive programming with the Spring WebFlux module, which has been improved upon ever since. Get started with the Reactor project basics and reactive programming in Spring Boot: >> Join Pro and download the eBook eBook \u2013 Java Streams \u2013 NPI EA (cat=Java Streams) Since its introduction in Java 8, the Stream API has become a staple of Java development. The basic operations like iterating, filtering, mapping sequences of elements are deceptively simple to use. But these can also be overused and fall into some common pitfalls. To get a better understanding on how Streams work and how to combine them with other language features, check out our guide to Java Streams: >> Join Pro and download the eBook eBook \u2013 Jackson \u2013 NPI EA (cat=Jackson) Do JSON right with Jackson Download the E-book eBook \u2013 HTTP Client \u2013 NPI EA (cat=Http Client-Side) Get the most out of the Apache HTTP Client Download the E-book eBook \u2013 Maven \u2013 NPI EA (cat = Maven) Get Started with", "start_char_idx": 0, "end_char_idx": 5019, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95d82e12-4c77-4e90-8357-787f9e07bc56": {"__data__": {"id_": "95d82e12-4c77-4e90-8357-787f9e07bc56", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_1.txt", "file_name": "www.baeldung.com_14_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9b4481c-7138-4c72-8177-be02e68efbf5", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_1.txt", "file_name": "www.baeldung.com_14_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "42704851b333868dc8729302079d47101c8e5d07eb0f047d3683e62c1d5ec2fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94be6548-705c-4a68-995a-ddd6c80b530f", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_0.txt", "file_name": "www.baeldung.com_14_0.txt", "file_type": "text/plain", "file_size": 5069, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a8e974760974156447eeb5df7c2038ebfc925af1cbe06f0d04fd0b78f9611184", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5eb95ff-3f1c-40dc-badb-e2644e04dedb", "node_type": "1", "metadata": {}, "hash": "d44abb88e9a2874def45b058136032fe499e69c0794f797ef779ed29f48511c3", "class_name": "RelatedNodeInfo"}}, "text": "Apache Maven: Download the E-book eBook \u2013 Persistence \u2013 NPI EA (cat=Persistence) Working on getting your persistence layer right with Spring? Explore the eBook eBook \u2013 RwS \u2013 NPI EA (cat=Spring MVC) Building a REST API with Spring? Download the E-book Course \u2013 LS \u2013 NPI EA (cat=Jackson) Get started with Spring and Spring Boot, through the Learn Spring course: >> LEARN SPRING Course \u2013 RWSB \u2013 NPI EA (cat=REST) Explore Spring Boot 3 and Spring 6 in-depth through building a full REST API with the framework: >> The New \u201cREST With Spring Boot\u201d Course \u2013 LSS \u2013 NPI EA (cat=Spring Security) Yes, Spring Security can be complex, from the more advanced functionality within the Core to the deep OAuth support in the framework. I built the security material as two full courses - Core and OAuth , to get practical with these more complex scenarios. We explore when and how to use each feature and code through it on the backing project . You can explore the course here: >> Learn Spring Security Course \u2013 All Access \u2013 NPI EA (cat= Spring) All Access is finally out, with all of my Spring courses. Learn JUnit is out as well, and Learn Maven is coming fast. And, of course, quite a bit more affordable. Finally. >> GET THE COURSE Course \u2013 LSD \u2013 NPI EA (tag=Spring Data JPA) Spring Data JPA is a great way to handle the complexity of JPA with the powerful simplicity of Spring Boot . Get started with Spring Data JPA through the guided reference course: >> CHECK OUT THE COURSE Partner \u2013 LambdaTest \u2013 NPI EA (cat=Testing) End-to-end testing is a very useful method to make sure that your application works as intended. This highlights issues in the overall functionality of the software, that the unit and integration test stages may miss. Playwright is an easy-to-use, but powerful tool that automates end-to-end testing , and supports all modern browsers and platforms. When coupled with LambdaTest (an AI-powered cloud-based test execution platform) it can be further scaled to run the Playwright scripts in parallel across 3000+ browser and device combinations: >> Automated End-to-End Testing With Playwright Course \u2013 Spring Sale 2025 \u2013 NPI EA (cat= Baeldung) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW Course \u2013 Spring Sale 2025 \u2013 NPI (cat=Baeldung) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW eBook \u2013 Java Streams \u2013 NPI (cat=Java Streams) Since its introduction in Java 8, the Stream API has become a staple of Java development. The basic operations like iterating, filtering, mapping sequences of elements are deceptively simple to use. But these can also be overused and fall into some common pitfalls. To get a better understanding on how Streams work and how to combine them with other language features, check out our guide to Java Streams: >> Join Pro and download the eBook 1. Overview In this comprehensive tutorial, we\u2019ll go through the practical uses of Java Streams from their introduction in Java 8 to the latest enhancements in Java 9. To understand this material, readers need to have a basic knowledge of Java 8 (lambda expressions, Optional, method references) and of the Stream API. In order to be more familiar with these topics, please take a look at our previous articles: New Features in Java 8 and Introduction to Java 8 Streams . Further reading: Lambda Expressions and Functional Interfaces: Tips and Best Practices Tips and best practices on using Java 8 lambdas and functional interfaces. Read more \u2192 Guide to Java Collectors The article discusses Java 8 Collectors, showing examples of built-in collectors, as well as showing how to build custom collector. Read more \u2192 2. Stream Creation There are many ways to create a stream instance of different sources. Once created, the instance will not modify its source, therefore allowing the creation of multiple instances from a single source. 2.1. Empty Stream We should use the empty() method in case of the creation of an empty stream: Stream<String> streamEmpty = Stream.empty(); We often use the empty() method upon creation to avoid returning null for streams with no element: public Stream<String> streamOf(List<String> list) { return list == null || list.isEmpty() ? Stream.empty() : list.stream(); } 2.2.", "start_char_idx": 0, "end_char_idx": 4310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a5eb95ff-3f1c-40dc-badb-e2644e04dedb": {"__data__": {"id_": "a5eb95ff-3f1c-40dc-badb-e2644e04dedb", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_1.txt", "file_name": "www.baeldung.com_14_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9b4481c-7138-4c72-8177-be02e68efbf5", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_1.txt", "file_name": "www.baeldung.com_14_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "42704851b333868dc8729302079d47101c8e5d07eb0f047d3683e62c1d5ec2fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "95d82e12-4c77-4e90-8357-787f9e07bc56", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_1.txt", "file_name": "www.baeldung.com_14_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e96a38f42c5eccb6065cf9d428fe02168a689324b9a763f477b6e5dd965f4d2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17bd514f-85aa-4524-90c8-c22784d13e76", "node_type": "1", "metadata": {}, "hash": "e0261771e8816368cd696982da333ac1618b5611329aa4aefd4460821559ef12", "class_name": "RelatedNodeInfo"}}, "text": "Further reading: Lambda Expressions and Functional Interfaces: Tips and Best Practices Tips and best practices on using Java 8 lambdas and functional interfaces. Read more \u2192 Guide to Java Collectors The article discusses Java 8 Collectors, showing examples of built-in collectors, as well as showing how to build custom collector. Read more \u2192 2. Stream Creation There are many ways to create a stream instance of different sources. Once created, the instance will not modify its source, therefore allowing the creation of multiple instances from a single source. 2.1. Empty Stream We should use the empty() method in case of the creation of an empty stream: Stream<String> streamEmpty = Stream.empty(); We often use the empty() method upon creation to avoid returning null for streams with no element: public Stream<String> streamOf(List<String> list) { return list == null || list.isEmpty() ? Stream.empty() : list.stream(); } 2.2. Stream of Collection We can also create a stream of any type of Collection ( Collection, List, Set ): Collection<String> collection = Arrays.asList(\"a\", \"b\", \"c\"); Stream<String> streamOfCollection = collection.stream(); 2.3. Stream of Array An array can also be the source of a stream: Stream<String> streamOfArray = Stream.of(\"a\", \"b\", \"c\"); We can also create a stream out of an existing array or of part of an array: String[] arr = new String[]{\"a\", \"b\", \"c\"}; Stream<String>", "start_char_idx": 3378, "end_char_idx": 4790, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17bd514f-85aa-4524-90c8-c22784d13e76": {"__data__": {"id_": "17bd514f-85aa-4524-90c8-c22784d13e76", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_2.txt", "file_name": "www.baeldung.com_14_2.txt", "file_type": "text/plain", "file_size": 5643, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46a4e7ba-994f-4db8-b32d-a9baf73fd5ef", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_2.txt", "file_name": "www.baeldung.com_14_2.txt", "file_type": "text/plain", "file_size": 5643, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f27ca943b8df140b8d8d9d3ce706b850bf726496b7febfbf5ad2ce44d83c676d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5eb95ff-3f1c-40dc-badb-e2644e04dedb", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_1.txt", "file_name": "www.baeldung.com_14_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e034ffc1f4571b10e2d863d2728eb0f2cbed4baab72ffa2068248e9d09d7cde8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4417db60-b581-4649-b83c-1af3b24265b1", "node_type": "1", "metadata": {}, "hash": "520f71afe8437fc25cf8f6f7d706119488b5e4313f35e954109daacee7b2cf91", "class_name": "RelatedNodeInfo"}}, "text": "streamOfArrayFull = Arrays.stream(arr); Stream<String> streamOfArrayPart = Arrays.stream(arr, 1, 3); 2.4. Stream.builder() When builder is used, the desired type should be additionally specified in the right part of the statement, otherwise the build() method will create an instance of the Stream<Object>: Stream<String> streamBuilder = Stream.<String>builder().add(\"a\").add(\"b\").add(\"c\").build(); 2.5. Stream.generate() The generate() method accepts a Supplier<T> for element generation. As the resulting stream is infinite, the developer should specify the desired size, or the generate() method will work until it reaches the memory limit: Stream<String> streamGenerated = Stream.generate(() -> \"element\").limit(10); The code above creates a sequence of ten strings with the value \u201celement.\u201d 2.6. Stream.iterate() Another way of creating an infinite stream is by using the iterate() method: Stream<Integer> streamIterated = Stream.iterate(40, n -> n + 2).limit(20); The first element of the resulting stream is the first parameter of the iterate() method. When creating every following element, the specified function is applied to the previous element. In the example above the second element will be 42. 2.7. Stream of Primitives Java 8 offers the possibility to create streams out of three primitive types: int, long and double. As Stream<T> is a generic interface, and there is no way to use primitives as a type parameter with generics, three new special interfaces were created: IntStream, LongStream, DoubleStream. Using the new interfaces alleviates unnecessary auto-boxing, which allows for increased productivity: IntStream intStream = IntStream.range(1, 3); LongStream longStream = LongStream.rangeClosed(1, 3); The range(int startInclusive, int endExclusive) method creates an ordered stream from the first parameter to the second parameter. It increments the value of subsequent elements with the step equal to 1. The result doesn\u2019t include the last parameter, it is just an upper bound of the sequence. The rangeClosed(int startInclusive, int endInclusive) method does the same thing with only one difference, the second element is included. We can use these two methods to generate any of the three types of streams of primitives. Since Java 8, the Random class provides a wide range of methods for generating streams of primitives. For example, the following code creates a DoubleStream, which has three elements: Random random = new Random(); DoubleStream doubleStream = random.doubles(3); 2.8. Stream of String We can also use String as a source for creating a stream with the help of the chars() method of the String class. Since there is no interface for CharStream in JDK, we use the IntStream to represent a stream of chars instead. IntStream streamOfChars = \"abc\".chars(); The following example breaks a String into sub-strings according to specified RegEx : Stream<String> streamOfString = Pattern.compile(\", \").splitAsStream(\"a, b, c\"); 2.9. Stream of File Furthermore, Java NIO class Files allows us to generate a Stream<String> of a text file through the lines() method. Every line of the text becomes an element of the stream: Path path = Paths.get(\"C:\\\\file.txt\"); Stream<String> streamOfStrings = Files.lines(path); Stream<String> streamWithCharset = Files.lines(path, Charset.forName(\"UTF-8\")); The Charset can be specified as an argument of the lines() method. 3. Referencing a Stream We can instantiate a stream, and have an accessible reference to it, as long as only intermediate operations are called. Executing a terminal operation makes a stream inaccessible . To demonstrate this, we will forget for a while that the best practice is to chain the sequence of operation. Besides its unnecessary verbosity, technically the following code is valid: Stream<String> stream = Stream.of(\"a\", \"b\", \"c\").filter(element -> element.contains(\"b\")); Optional<String> anyElement = stream.findAny(); However, an attempt to reuse the same reference after calling the terminal operation will trigger the IllegalStateException: Optional<String> firstElement = stream.findFirst(); As the IllegalStateException is a RuntimeException , a compiler will not signalize about a problem. So it is very important to remember that Java 8 streams can\u2019t be reused. This kind of behavior is logical. We designed streams to apply a finite sequence of operations to the source of elements in a functional style, not to store elements.", "start_char_idx": 0, "end_char_idx": 4444, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4417db60-b581-4649-b83c-1af3b24265b1": {"__data__": {"id_": "4417db60-b581-4649-b83c-1af3b24265b1", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_2.txt", "file_name": "www.baeldung.com_14_2.txt", "file_type": "text/plain", "file_size": 5643, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46a4e7ba-994f-4db8-b32d-a9baf73fd5ef", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_2.txt", "file_name": "www.baeldung.com_14_2.txt", "file_type": "text/plain", "file_size": 5643, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f27ca943b8df140b8d8d9d3ce706b850bf726496b7febfbf5ad2ce44d83c676d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17bd514f-85aa-4524-90c8-c22784d13e76", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_2.txt", "file_name": "www.baeldung.com_14_2.txt", "file_type": "text/plain", "file_size": 5643, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c41c69cfce93f43ca0745c560a68031cdeac439406e87f24de5ad0e483382295", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "511d2c90-3e22-436b-953e-437b8333a8cc", "node_type": "1", "metadata": {}, "hash": "bb1fac22b4f25facb4e2d0433a039fd982f7ac5bbb74cda39c24b87ce0b28bd8", "class_name": "RelatedNodeInfo"}}, "text": "Executing a terminal operation makes a stream inaccessible . To demonstrate this, we will forget for a while that the best practice is to chain the sequence of operation. Besides its unnecessary verbosity, technically the following code is valid: Stream<String> stream = Stream.of(\"a\", \"b\", \"c\").filter(element -> element.contains(\"b\")); Optional<String> anyElement = stream.findAny(); However, an attempt to reuse the same reference after calling the terminal operation will trigger the IllegalStateException: Optional<String> firstElement = stream.findFirst(); As the IllegalStateException is a RuntimeException , a compiler will not signalize about a problem. So it is very important to remember that Java 8 streams can\u2019t be reused. This kind of behavior is logical. We designed streams to apply a finite sequence of operations to the source of elements in a functional style, not to store elements. So to make the previous code work properly, some changes should be made: List<String> elements = Stream.of(\"a\", \"b\", \"c\").filter(element -> element.contains(\"b\")) .collect(Collectors.toList()); Optional<String> anyElement = elements.stream().findAny(); Optional<String> firstElement = elements.stream().findFirst(); 4. Stream Pipeline To perform a sequence of operations over the elements of the data source and aggregate their results, we need three parts: the source , intermediate operation(s) and a terminal operation. Intermediate operations return a new modified stream. For example, to create a new stream of the existing one without few elements, the skip() method should be used: Stream<String> onceModifiedStream = Stream.of(\"abcd\", \"bbcd\", \"cbcd\").skip(1); If we need more than one modification, we can chain intermediate operations. Let\u2019s assume that we also need to substitute every element of the current Stream<String> with a sub-string of the first few chars. We can do this by chaining the skip() and map() methods: Stream<String> twiceModifiedStream = stream.skip(1).map(element -> element.substring(0, 3)); As we can see, the map() method takes a lambda expression as a", "start_char_idx": 3542, "end_char_idx": 5633, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "511d2c90-3e22-436b-953e-437b8333a8cc": {"__data__": {"id_": "511d2c90-3e22-436b-953e-437b8333a8cc", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_3.txt", "file_name": "www.baeldung.com_14_3.txt", "file_type": "text/plain", "file_size": 5009, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "254ead42-0db8-4735-8290-db16f4dddd6e", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_3.txt", "file_name": "www.baeldung.com_14_3.txt", "file_type": "text/plain", "file_size": 5009, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "abc3ac8ae2430959c8d340f3bd0dd2d8ff1fd5ca1995ab8379fdf958ad0b91db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4417db60-b581-4649-b83c-1af3b24265b1", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_2.txt", "file_name": "www.baeldung.com_14_2.txt", "file_type": "text/plain", "file_size": 5643, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0f47697bb9ab73bd7a6bd8d7be127f983b1d201a29907912ef5afe10ab93ac3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5d18c41-fa28-4ac5-8dab-3e094e7c8edb", "node_type": "1", "metadata": {}, "hash": "4e18d532832cbb38a9e3a3bb5a4309b74558172fcfe05ad9a1961af01b29e87a", "class_name": "RelatedNodeInfo"}}, "text": "parameter. If we want to learn more about lambdas, we can take a look at our tutorial Lambda Expressions and Functional Interfaces: Tips and Best Practices . A stream by itself is worthless; the user is interested in the result of the terminal operation, which can be a value of some type or an action applied to every element of the stream. We can only use one terminal operation per stream. The correct and most convenient way to use streams is by a stream pipeline, which is a chain of the stream source, intermediate operations, and a terminal operation: List<String> list = Arrays.asList(\"abc1\", \"abc2\", \"abc3\"); long size = list.stream().skip(1) .map(element -> element.substring(0, 3)).sorted().count(); 5. Lazy Invocation Intermediate operations are lazy. This means that they will be invoked only if it is necessary for the terminal operation execution. For example, let\u2019s call the method wasCalled() , which increments an inner counter every time it\u2019s called: private long counter; private void wasCalled() { counter++; } Now let\u2019s call the method wasCalled () from operation filter() : List<String> list = Arrays.asList(\u201cabc1\u201d, \u201cabc2\u201d, \u201cabc3\u201d); counter = 0; Stream<String> stream = list.stream().filter(element -> { wasCalled(); return element.contains(\"2\"); }); As we have a source of three elements, we can assume that the filter() method will be called three times, and the value of the counter variable will be 3. However, running this code doesn\u2019t change counter at all, it is still zero, so the filter() method wasn\u2019t even called once. The reason why is missing of the terminal operation. Let\u2019s rewrite this code a little bit by adding a map() operation and a terminal operation, findFirst(). We will also add the ability to track the order of method calls with the help of logging: Optional<String> stream = list.stream().filter(element -> { log.info(\"filter() was called\"); return element.contains(\"2\"); }).map(element -> { log.info(\"map() was called\"); return element.toUpperCase(); }).findFirst(); The resulting log shows that we called the filter() method twice and the map() method once. This is because the pipeline executes vertically. In our example, the first element of the stream didn\u2019t satisfy the filter\u2019s predicate. Then we invoked the filter() method for the second element, which passed the filter. Without calling the filter() for the third element, we went down through the pipeline to the map() method. The findFirst() operation satisfies by just one element. So, in this particular example, the lazy invocation allowed us to avoid one method call for filter(). 6. Order of Execution From the performance point of view, the right order is one of the most important aspects of chaining operations in the stream pipeline: long size = list.stream().map(element -> { wasCalled(); return element.substring(0, 3); }).skip(2).count(); Execution of this code will increase the value of the counter by three. This means that we called the map() method of the stream three times, but the value of the size is one. So the resulting stream has just one element, and we executed the expensive map() operations for no reason two out of the three times. If we change the order of the skip() and the map() methods , the counter will increase by only one. So we will call the map() method only once: long size = list.stream().skip(2).map(element -> { wasCalled(); return element.substring(0, 3); }).count(); This brings us to the following rule: intermediate operations which reduce the size of the stream should be placed before operations which are applying to each element. So we need to keep methods such as s kip(), filter(), and distinct() at the top of our stream pipeline. 7. Stream Reduction The API has many terminal operations which aggregate a stream to a type or to a primitive: count(), max(), min(), and sum(). However, these operations work according to the predefined implementation. So what if a developer needs to customize a Stream\u2019s reduction mechanism? There are two methods which allow us to do this, the reduce() and the collect() methods. 7.1. The reduce() Method There are three variations of this method, which differ by their signatures and returning types. They can have the following parameters: identity \u2013 the initial value for an accumulator, or a default value if a stream is empty and there is nothing to accumulate accumulator \u2013 a function which specifies the logic of the aggregation of elements.", "start_char_idx": 0, "end_char_idx": 4452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a5d18c41-fa28-4ac5-8dab-3e094e7c8edb": {"__data__": {"id_": "a5d18c41-fa28-4ac5-8dab-3e094e7c8edb", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_3.txt", "file_name": "www.baeldung.com_14_3.txt", "file_type": "text/plain", "file_size": 5009, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "254ead42-0db8-4735-8290-db16f4dddd6e", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_3.txt", "file_name": "www.baeldung.com_14_3.txt", "file_type": "text/plain", "file_size": 5009, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "abc3ac8ae2430959c8d340f3bd0dd2d8ff1fd5ca1995ab8379fdf958ad0b91db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "511d2c90-3e22-436b-953e-437b8333a8cc", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_3.txt", "file_name": "www.baeldung.com_14_3.txt", "file_type": "text/plain", "file_size": 5009, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6ee928eb28f7508a536c6c32c8c68ce3953ce9cb3dab713f1faa1173c29e4135", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ea3dbfc-ce8e-46df-b6c6-a5a5da68ed65", "node_type": "1", "metadata": {}, "hash": "712a1cf09cb2a393660d506ba066d73fd9d712438929a709044b1c26c556f8ff", "class_name": "RelatedNodeInfo"}}, "text": "So we need to keep methods such as s kip(), filter(), and distinct() at the top of our stream pipeline. 7. Stream Reduction The API has many terminal operations which aggregate a stream to a type or to a primitive: count(), max(), min(), and sum(). However, these operations work according to the predefined implementation. So what if a developer needs to customize a Stream\u2019s reduction mechanism? There are two methods which allow us to do this, the reduce() and the collect() methods. 7.1. The reduce() Method There are three variations of this method, which differ by their signatures and returning types. They can have the following parameters: identity \u2013 the initial value for an accumulator, or a default value if a stream is empty and there is nothing to accumulate accumulator \u2013 a function which specifies the logic of the aggregation of elements. As the accumulator creates a new value for every step of reducing, the quantity of new values equals the stream\u2019s size and only the last value is useful. This is not very good for the performance. combiner \u2013 a function which aggregates the results of the accumulator. We only call combiner in a parallel mode to reduce the results of accumulators from different threads. Now let\u2019s look at these three methods in action: OptionalInt reduced = IntStream.range(1, 4).reduce((a, b) -> a + b); reduced = 6 (1 + 2 + 3) int", "start_char_idx": 3597, "end_char_idx": 4969, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ea3dbfc-ce8e-46df-b6c6-a5a5da68ed65": {"__data__": {"id_": "2ea3dbfc-ce8e-46df-b6c6-a5a5da68ed65", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_4.txt", "file_name": "www.baeldung.com_14_4.txt", "file_type": "text/plain", "file_size": 5687, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e04493a-736a-426a-96c5-c4b80c409b77", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_4.txt", "file_name": "www.baeldung.com_14_4.txt", "file_type": "text/plain", "file_size": 5687, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3695be9194893ad2915bcd10c4f18516fcc3b1b8b1dbe4a3aabc1c5860301adc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5d18c41-fa28-4ac5-8dab-3e094e7c8edb", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_3.txt", "file_name": "www.baeldung.com_14_3.txt", "file_type": "text/plain", "file_size": 5009, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8eb3835fe4e9c4556d92a3d185a8e34c72c966c41903489387b2f928e2f18d06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "224d0e89-dbbb-44f9-b776-8a9dc5032daf", "node_type": "1", "metadata": {}, "hash": "d29304136c23a08d7a9b3cd956f429a437caba3e70c57231ae40dc55bd0253bd", "class_name": "RelatedNodeInfo"}}, "text": "reducedTwoParams = IntStream.range(1, 4).reduce(10, (a, b) -> a + b); reducedTwoParams = 16 (10 + 1 + 2 + 3) int reducedParams = Stream.of(1, 2, 3) .reduce(10, (a, b) -> a + b, (a, b) -> { log.info(\"combiner was called\"); return a + b; }); The result will be the same as in the previous example (16), and there will be no login, which means that combiner wasn\u2019t called. To make a combiner work, a stream should be parallel: int reducedParallel = Arrays.asList(1, 2, 3).parallelStream() .reduce(10, (a, b) -> a + b, (a, b) -> { log.info(\"combiner was called\"); return a + b; }); The result here is different (36), and the combiner was called twice. Here the reduction works by the following algorithm: the accumulator ran three times by adding every element of the stream to identity . These actions are being done in parallel. As a result, they have (10 + 1 = 11; 10 + 2 = 12; 10 + 3 = 13;). Now combiner can merge these three results. It needs two iterations for that (12 + 13 = 25; 25 + 11 = 36). 7.2. The collect() Method The reduction of a stream can also be executed by another terminal operation, the collect() method. It accepts an argument of the type Collector, which specifies the mechanism of reduction. There are already created, predefined collectors for most common operations. They can be accessed with the help of the Collectors type. In this section, we will use the following List as a source for all streams: List<Product> productList = Arrays.asList(new Product(23, \"potatoes\"), new Product(14, \"orange\"), new Product(13, \"lemon\"), new Product(23, \"bread\"), new Product(13, \"sugar\")); Converting a stream to the Collection ( Collection, List or Set ): List<String> collectorCollection = productList.stream().map(Product::getName).collect(Collectors.toList()); Reducing to String : String listToString = productList.stream().map(Product::getName) .collect(Collectors.joining(\", \", \"[\", \"]\")); The joining() method can have from one to three parameters (delimiter, prefix, suffix). The most convenient thing about using joining() is that the developer doesn\u2019t need to check if the stream reaches its end to apply the suffix and not to apply a delimiter. Collector will take care of that. Processing the average value of all numeric elements of the stream: double averagePrice = productList.stream() .collect(Collectors.averagingInt(Product::getPrice)); Processing the sum of all numeric elements of the stream: int summingPrice = productList.stream() .collect(Collectors.summingInt(Product::getPrice)); The methods averagingXX(), summingXX() and summarizingXX() can work with primitives ( int, long, double ) and with their wrapper classes ( Integer, Long, Double ). One more powerful feature of these methods is providing the mapping. As a result, the developer doesn\u2019t need to use an additional map() operation before the collect() method. Collecting statistical information about stream\u2019s elements: IntSummaryStatistics statistics = productList.stream() .collect(Collectors.summarizingInt(Product::getPrice)); By using the resulting instance of type IntSummaryStatistics , the developer can create a statistical report by applying the toString() method. The result will be a String common to this one \u201cIntSummaryStatistics{count=5, sum=86, min=13, average=17,200000, max=23}.\u201d It is also easy to extract from this object separate values for count, sum, min, average , and max by applying the methods getCount(), getSum(), getMin(), getAverage(), and getMax(). All of these values can be extracted from a single pipeline. Grouping of stream\u2019s elements according to the specified function: Map<Integer, List<Product>> collectorMapOfLists = productList.stream() .collect(Collectors.groupingBy(Product::getPrice)); In the example above, the stream was reduced to the Map , which groups all products by their price.", "start_char_idx": 0, "end_char_idx": 3831, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "224d0e89-dbbb-44f9-b776-8a9dc5032daf": {"__data__": {"id_": "224d0e89-dbbb-44f9-b776-8a9dc5032daf", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_4.txt", "file_name": "www.baeldung.com_14_4.txt", "file_type": "text/plain", "file_size": 5687, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e04493a-736a-426a-96c5-c4b80c409b77", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_4.txt", "file_name": "www.baeldung.com_14_4.txt", "file_type": "text/plain", "file_size": 5687, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3695be9194893ad2915bcd10c4f18516fcc3b1b8b1dbe4a3aabc1c5860301adc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ea3dbfc-ce8e-46df-b6c6-a5a5da68ed65", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_4.txt", "file_name": "www.baeldung.com_14_4.txt", "file_type": "text/plain", "file_size": 5687, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6c35730d0b783bf2247aa12977b519af6de5056cdc82d3a92f601d16ff35470f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edca4391-6142-449f-bd2f-d0b0b226cd9b", "node_type": "1", "metadata": {}, "hash": "cb39a6bcf3729285293cc0985eea95227eee1f9aa53d1c80bd9d2afdfaf626e7", "class_name": "RelatedNodeInfo"}}, "text": "The result will be a String common to this one \u201cIntSummaryStatistics{count=5, sum=86, min=13, average=17,200000, max=23}.\u201d It is also easy to extract from this object separate values for count, sum, min, average , and max by applying the methods getCount(), getSum(), getMin(), getAverage(), and getMax(). All of these values can be extracted from a single pipeline. Grouping of stream\u2019s elements according to the specified function: Map<Integer, List<Product>> collectorMapOfLists = productList.stream() .collect(Collectors.groupingBy(Product::getPrice)); In the example above, the stream was reduced to the Map , which groups all products by their price. Dividing stream\u2019s elements into groups according to some predicate: Map<Boolean, List<Product>> mapPartioned = productList.stream() .collect(Collectors.partitioningBy(element -> element.getPrice() > 15)); Pushing the collector to perform additional transformation: Set<Product> unmodifiableSet = productList.stream() .collect(Collectors.collectingAndThen(Collectors.toSet(), Collections::unmodifiableSet)); In this particular case, the collector has converted a stream to a Set , and then created the unchangeable Set out of it. Custom collector: If for some reason a custom collector should be created, the easiest and least verbose way of doing so is to use the method of() of the type Collector. Collector<Product, ?, LinkedList<Product>> toLinkedList = Collector.of(LinkedList::new, LinkedList::add, (first, second) -> { first.addAll(second); return first; }); LinkedList<Product> linkedListOfPersons = productList.stream().collect(toLinkedList); In this example, an instance of the Collector got reduced to the LinkedList <Persone>. 8. Parallel Streams Before Java 8, parallelization was complex. The emergence of the ExecutorService and the ForkJoin simplified a developer\u2019s life a little bit, but it was still worth remembering how to create a specific executor, how to run it, and so on. Java 8 introduced a way of accomplishing parallelism in a functional style. The API allows us to create parallel streams, which perform operations in a parallel mode. When the source of a stream is a Collection or an array , it can be achieved with the help of the parallelStream() method: Stream<Product> streamOfCollection = productList.parallelStream(); boolean isParallel = streamOfCollection.isParallel(); boolean bigPrice = streamOfCollection .map(product -> product.getPrice() * 12) .anyMatch(price -> price > 200); If the source of a", "start_char_idx": 3175, "end_char_idx": 5669, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edca4391-6142-449f-bd2f-d0b0b226cd9b": {"__data__": {"id_": "edca4391-6142-449f-bd2f-d0b0b226cd9b", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_5.txt", "file_name": "www.baeldung.com_14_5.txt", "file_type": "text/plain", "file_size": 5084, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6728b914-6bae-4d42-a8c8-acec4267ebf8", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_5.txt", "file_name": "www.baeldung.com_14_5.txt", "file_type": "text/plain", "file_size": 5084, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4c5ede687d6a6a8dd9f245ff982ecaf1bb6979482e60dd1a196c567f4700ead2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "224d0e89-dbbb-44f9-b776-8a9dc5032daf", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_4.txt", "file_name": "www.baeldung.com_14_4.txt", "file_type": "text/plain", "file_size": 5687, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d2961991d211cf7190f7135559225138c6c7405305427f70ffc1230d8ad8aee6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2fe585d4-e52b-4cae-b07b-ba92af62a4c0", "node_type": "1", "metadata": {}, "hash": "51b6f7f42b0a806a299f4ad64e374df76fc3b314726afe7def29edfbcd7bc905", "class_name": "RelatedNodeInfo"}}, "text": "stream is something other than a Collection or an array , the parallel() method should be used: IntStream intStreamParallel = IntStream.range(1, 150).parallel(); boolean isParallel = intStreamParallel.isParallel(); Under the hood, Stream API automatically uses the ForkJoin framework to execute operations in parallel. By default, the common thread pool will be used and there is no way (at least for now) to assign some custom thread pool to it. This can be overcome by using a custom set of parallel collectors. When using streams in parallel mode, avoid blocking operations. It is also best to use parallel mode when tasks need a similar amount of time to execute. If one task lasts much longer than the other, it can slow down the complete app\u2019s workflow. The stream in parallel mode can be converted back to the sequential mode by using the sequential() method: IntStream intStreamSequential = intStreamParallel.sequential(); boolean isParallel = intStreamSequential.isParallel(); 9. Stream API Enhancements in Java 9 Java 9 introduces a few notable improvements to the Stream API that make working with streams even more expressive and efficient. In this section, we\u2019ll cover the takeWhile() , dropWhile() , iterate() , and ofNullable() methods, exploring how they simplify various operations compared to Java 8. 9.1. takeWhile() and dropWhile() The new takeWhile() and dropWhile() methods use a Predicate to specify a condition for including or excluding elements in the stream. These methods are particularly useful for ordered streams, as they allow us to process elements based on a condition applied sequentially. With takeWhile() , we can collect elements from the start of a stream until a given condition is no longer met. As soon as an element fails this condition, takeWhile() stops collecting further elements: Stream<String> stream = Stream.iterate(\"\", s -> s + \"s\") .takeWhile(s -> s.length() < 10); Here, takeWhile() applies the predicate \u201c s -> s.length() < 10 \u201c, which means it will keep adding elements to the stream as long as the string length is less than 10. The collection stops collecting elements as soon as an element no longer meets the condition. In contrast, dropWhile() discards elements from the start of the stream as long as they satisfy the given Predicate . It stops dropping elements the moment an element fails the condition, at which point it includes the remaining elements in the stream: Stream<String> stream = Stream.of(\"a\", \"aa\", \"aaa\", \"aaaaa\") .dropWhile(s -> s.length() < 5); In this case, dropWhile() will skip over elements until it encounters a string with a length of 5 or greater, at which point it stops dropping elements. 9.2. Enhanced iterate() Method Java 9 adds a variant of the iterate() method that allows us to specify a condition under which the stream will stop generating elements, effectively creating a finite stream. This enhanced iterate() function can specify a stopping condition when needed: Stream.iterate(0, i -> i < 10, i -> i + 1) .forEach(System.out::println); This example generates numbers from 0 to 9, directly integrating the stopping condition within the iterate() method itself, making it simpler and clearer than Java 8\u2019s infinite streams. 9.3. ofNullable() for Optional Elements Often, we may need to create a stream with a single element that might be null . Java 9\u2019s ofNullable() method addresses this by returning an empty stream if the provided element is null , avoiding the need for complex conditional logic: collection.stream() .flatMap(s -> Stream.ofNullable(map.get(s))) .collect(Collectors.toList()); This ofNullable() method removes the need for ternary expressions or null checks, streamlining the code where conditional element addition is necessary. 10. Conclusion The Stream API is a powerful, but simple to understand set of tools for processing the sequence of elements. When used properly, it allows us to reduce a huge amount of boilerplate code, create more readable programs, and improve an app\u2019s productivity. In most of the code samples shown in this article, we left the streams unconsumed (we didn\u2019t apply the close() method or a terminal operation). In a real app, don\u2019t leave an instantiated stream unconsumed, as that will lead to memory leaks. The code backing this article is available on GitHub. Once you're logged in as a Baeldung Pro Member , start learning and coding on the project.", "start_char_idx": 0, "end_char_idx": 4405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2fe585d4-e52b-4cae-b07b-ba92af62a4c0": {"__data__": {"id_": "2fe585d4-e52b-4cae-b07b-ba92af62a4c0", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_5.txt", "file_name": "www.baeldung.com_14_5.txt", "file_type": "text/plain", "file_size": 5084, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6728b914-6bae-4d42-a8c8-acec4267ebf8", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_5.txt", "file_name": "www.baeldung.com_14_5.txt", "file_type": "text/plain", "file_size": 5084, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4c5ede687d6a6a8dd9f245ff982ecaf1bb6979482e60dd1a196c567f4700ead2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edca4391-6142-449f-bd2f-d0b0b226cd9b", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_5.txt", "file_name": "www.baeldung.com_14_5.txt", "file_type": "text/plain", "file_size": 5084, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5e85b82df880378ec722d4558814164f063871a3bd869b317c97dc86508fd1d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05f7c954-ed6b-43cf-8c58-0dac48956a4e", "node_type": "1", "metadata": {}, "hash": "4242293da33c91b51e8f480ca31edf961e6af1fe193b8068a43434a2a68ad242", "class_name": "RelatedNodeInfo"}}, "text": "10. Conclusion The Stream API is a powerful, but simple to understand set of tools for processing the sequence of elements. When used properly, it allows us to reduce a huge amount of boilerplate code, create more readable programs, and improve an app\u2019s productivity. In most of the code samples shown in this article, we left the streams unconsumed (we didn\u2019t apply the close() method or a terminal operation). In a real app, don\u2019t leave an instantiated stream unconsumed, as that will lead to memory leaks. The code backing this article is available on GitHub. Once you're logged in as a Baeldung Pro Member , start learning and coding on the project. Baeldung Pro \u2013 NPI EA (cat = Baeldung) Baeldung Pro comes with both absolutely No-Ads as well as finally with Dark Mode , for a clean learning experience: >> Explore a clean Baeldung Once the early-adopter seats are all used, the price will go up and stay at $33/year. Partner \u2013 Microsoft \u2013 NPI EA (cat = Spring Boot) Azure Container Apps is a fully managed serverless container service that enables you to build and deploy modern, cloud-native Java applications and microservices at scale. It offers a simplified developer experience while providing the flexibility and portability of containers. Of course, Azure Container Apps has really solid support", "start_char_idx": 3752, "end_char_idx": 5060, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05f7c954-ed6b-43cf-8c58-0dac48956a4e": {"__data__": {"id_": "05f7c954-ed6b-43cf-8c58-0dac48956a4e", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_6.txt", "file_name": "www.baeldung.com_14_6.txt", "file_type": "text/plain", "file_size": 4895, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24ddc37a-b7d2-49a5-a3d0-e9f31067e5b2", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_6.txt", "file_name": "www.baeldung.com_14_6.txt", "file_type": "text/plain", "file_size": 4895, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6b141733a7b917acb9f9a295fa5092200c2c9e2bade8c1782cedc10d51205ae1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2fe585d4-e52b-4cae-b07b-ba92af62a4c0", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_5.txt", "file_name": "www.baeldung.com_14_5.txt", "file_type": "text/plain", "file_size": 5084, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e843bfa78a93ab9db0a1ff4f0b5098ae626b8746ea29afdef2ea0213be0f7060", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa5cd7b0-7f53-4bbb-96ea-253300b14c9c", "node_type": "1", "metadata": {}, "hash": "4cb6b4d3d690a62f5e8d06e1c8693fc038da75dce384d0a69b2d52601050e8cd", "class_name": "RelatedNodeInfo"}}, "text": "for our ecosystem, from a number of build options, managed Java components, native metrics, dynamic logger, and quite a bit more. To learn more about Java features on Azure Container Apps, visit the documentation page . You can also ask questions and leave feedback on the Azure Container Apps GitHub page . Partner \u2013 Orkes \u2013 NPI EA (cat = Spring) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. Partner \u2013 Orkes \u2013 NPI EA (tag = Microservices) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. eBook \u2013 HTTP Client \u2013 NPI EA (cat=HTTP Client-Side) The Apache HTTP Client is a very robust library, suitable for both simple and advanced use cases when testing HTTP endpoints . Check out our guide covering basic request and response handling, as well as security, cookies, timeouts, and more: >> Download the eBook eBook \u2013 Java Concurrency \u2013 NPI EA (cat=Java Concurrency) Handling concurrency in an application can be a tricky process with many potential pitfalls . A solid grasp of the fundamentals will go a long way to help minimize these issues. Get started with understanding multi-threaded applications with our Java Concurrency guide: >> Download the eBook eBook \u2013 Java Streams \u2013 NPI EA (cat=Java Streams) Since its introduction in Java 8, the Stream API has become a staple of Java development. The basic operations like iterating, filtering, mapping sequences of elements are deceptively simple to use. But these can also be overused and fall into some common pitfalls. To get a better understanding on how Streams work and how to combine them with other language features, check out our guide to Java Streams: >> Join Pro and download the eBook eBook \u2013 Persistence \u2013 NPI EA (cat=Persistence) Working on getting your persistence layer right with Spring? Explore the eBook Course \u2013 LS \u2013 NPI EA (cat=REST) Get started with Spring Boot and with core Spring, through the Learn Spring course: >> CHECK OUT THE COURSE Course \u2013 Spring Sale 2025 \u2013 NPI EA (cat= Baeldung) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW Course \u2013 Spring Sale 2025 \u2013 NPI (All) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW eBook \u2013 Java Streams \u2013 NPI (cat=Java Streams) Since its introduction in Java 8, the Stream API has become a staple of Java development. The basic operations like iterating, filtering, mapping sequences of elements are deceptively simple to use. But these can also be overused and fall into some common pitfalls.", "start_char_idx": 0, "end_char_idx": 3824, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa5cd7b0-7f53-4bbb-96ea-253300b14c9c": {"__data__": {"id_": "fa5cd7b0-7f53-4bbb-96ea-253300b14c9c", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_6.txt", "file_name": "www.baeldung.com_14_6.txt", "file_type": "text/plain", "file_size": 4895, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24ddc37a-b7d2-49a5-a3d0-e9f31067e5b2", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_6.txt", "file_name": "www.baeldung.com_14_6.txt", "file_type": "text/plain", "file_size": 4895, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6b141733a7b917acb9f9a295fa5092200c2c9e2bade8c1782cedc10d51205ae1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05f7c954-ed6b-43cf-8c58-0dac48956a4e", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_6.txt", "file_name": "www.baeldung.com_14_6.txt", "file_type": "text/plain", "file_size": 4895, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c249e34160c8de15950126b4e7390dd4416db3a426a9f3a92e045e5319ac4574", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07a95ace-742f-47d4-9cf7-0d15ce78bbfd", "node_type": "1", "metadata": {}, "hash": "67dcb9de8d4954d41aa302cf4e6a414bee43e48ba3b47d2fd0bcf15107e39c09", "class_name": "RelatedNodeInfo"}}, "text": "All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW Course \u2013 Spring Sale 2025 \u2013 NPI (All) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW eBook \u2013 Java Streams \u2013 NPI (cat=Java Streams) Since its introduction in Java 8, the Stream API has become a staple of Java development. The basic operations like iterating, filtering, mapping sequences of elements are deceptively simple to use. But these can also be overused and fall into some common pitfalls. To get a better understanding on how Streams work and how to combine them with other language features, check out our guide to Java Streams: >> Join Pro and download the eBook eBook Jackson \u2013 NPI EA \u2013 3 (cat = Jackson) Do JSON right with Jackson Download the E-book Course \u2013 LSSC \u2013 NPI EA (cat= Security) Course \u2013 LS \u2013 NPI EA (cat=Spring) Course \u2013 All Access \u2013 NPI EA (cat= Spring) Course \u2013 LSSO \u2013 NPI EA (tag = OAuth) Course \u2013 LSD \u2013 NPI EA (tag=Spring Data JPA) eBook \u2013 Guide Spring Cloud \u2013 NPI EA (cat=Spring Cloud) >> Join Pro and get the eBook eBook \u2013 Guide Junit \u2013 NPI EA (tag=JUnit) Quick Guide to Take Advantage of JUnit 5 Download the E-book Course \u2013 RWSB \u2013 NPI EA (cat=REST) eBook \u2013 Jackson \u2013 NPI EA \u2013 2 (cat=Jackson) Do JSON right with Jackson Download the E-book eBook \u2013 RwS Java \u2013 NPI EA (cat=Java) Building a REST API with Spring 5? Download the E-book eBook \u2013 Maven \u2013 NPI EA (cat= Maven) Get Started with Apache Maven Download the E-book eBook- Spring Reactive Guide", "start_char_idx": 3299, "end_char_idx": 4805, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "07a95ace-742f-47d4-9cf7-0d15ce78bbfd": {"__data__": {"id_": "07a95ace-742f-47d4-9cf7-0d15ce78bbfd", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_7.txt", "file_name": "www.baeldung.com_14_7.txt", "file_type": "text/plain", "file_size": 339, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8d494a8-fa45-4598-a554-c4da471c61db", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_7.txt", "file_name": "www.baeldung.com_14_7.txt", "file_type": "text/plain", "file_size": 339, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8d664884fc118c59dc16b58eebe582631aca44072c887342b12b60238f8390e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa5cd7b0-7f53-4bbb-96ea-253300b14c9c", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_6.txt", "file_name": "www.baeldung.com_14_6.txt", "file_type": "text/plain", "file_size": 4895, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c2cfe8460ee3df03de071bcfe668ff3dfcdaca5f9851e742289d8375f1042c05", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f06620e-3c59-4f66-967c-e223a1b5bd8c", "node_type": "1", "metadata": {}, "hash": "fffc0a4ee1f5f720a634397b742408c564c3372d844e0d5fad6438ff8f7475ca", "class_name": "RelatedNodeInfo"}}, "text": "\u2013 NPI EA (cat=Reactive) Spring Reactive Guide >> Join Pro and get the eBook eBook \u2013 Mockito \u2013 NPI EA (tag=Mockito) Starting to test with Mockito? Download the Guide eBook \u2013 Persistence \u2013 NPI EA (cat=Persistence) Download the E-book Course \u2013 Spring Sale 2025 \u2013 NPI EA (cat = Baeldung) Course \u2013 Spring Sale 2025 \u2013 NPI (All)", "start_char_idx": 0, "end_char_idx": 321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f06620e-3c59-4f66-967c-e223a1b5bd8c": {"__data__": {"id_": "0f06620e-3c59-4f66-967c-e223a1b5bd8c", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_0.txt", "file_name": "www.baeldung.com_45_0.txt", "file_type": "text/plain", "file_size": 5078, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f19b229-380d-4dcb-8663-6be644a555ff", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_0.txt", "file_name": "www.baeldung.com_45_0.txt", "file_type": "text/plain", "file_size": 5078, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4b8826ace8ebd2e679a846ad440c04af8d831ed17df867baa82a045894ca265a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07a95ace-742f-47d4-9cf7-0d15ce78bbfd", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_7.txt", "file_name": "www.baeldung.com_14_7.txt", "file_type": "text/plain", "file_size": 339, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8d664884fc118c59dc16b58eebe582631aca44072c887342b12b60238f8390e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "794ce92f-25b5-4988-acf1-4f54f9eaa362", "node_type": "1", "metadata": {}, "hash": "130aa6af7b49cc212e112bd50f179652113ba4713982673d42e8f17d4340cef9", "class_name": "RelatedNodeInfo"}}, "text": "Java Collections Series | Baeldung Baeldung Pro \u2013 NPI EA (cat = Baeldung) Baeldung Pro comes with both absolutely No-Ads as well as finally with Dark Mode , for a clean learning experience: >> Explore a clean Baeldung Once the early-adopter seats are all used, the price will go up and stay at $33/year. Partner \u2013 Microsoft \u2013 NPI EA (cat = Baeldung) Azure Container Apps is a fully managed serverless container service that enables you to build and deploy modern, cloud-native Java applications and microservices at scale. It offers a simplified developer experience while providing the flexibility and portability of containers. Of course, Azure Container Apps has really solid support for our ecosystem, from a number of build options, managed Java components, native metrics, dynamic logger, and quite a bit more. To learn more about Java features on Azure Container Apps, visit the documentation page . You can also ask questions and leave feedback on the Azure Container Apps GitHub page . Partner \u2013 Microsoft \u2013 NPI EA (cat= Spring Boot) Azure Container Apps is a fully managed serverless container service that enables you to build and deploy modern, cloud-native Java applications and microservices at scale. It offers a simplified developer experience while providing the flexibility and portability of containers. Of course, Azure Container Apps has really solid support for our ecosystem, from a number of build options, managed Java components, native metrics, dynamic logger, and quite a bit more. To learn more about Java features on Azure Container Apps, you can get started over on the documentation page . And, you can also ask questions and leave feedback on the Azure Container Apps GitHub page . Partner \u2013 Orkes \u2013 NPI EA (cat=Spring) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. Partner \u2013 Orkes \u2013 NPI EA (tag=Microservices) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. eBook \u2013 Guide Spring Cloud \u2013 NPI EA (cat=Spring Cloud) Let's get started with a Microservice Architecture with Spring Cloud: >> Join Pro and download the eBook eBook \u2013 Mockito \u2013 NPI EA (tag = Mockito) Mocking is an essential part of unit testing, and the Mockito library makes it easy to write clean and intuitive unit tests for your Java code. Get started with mocking and improve your application tests using our Mockito guide : Download the eBook eBook \u2013 Java Concurrency \u2013 NPI EA (cat=Java Concurrency) Handling concurrency in an application can be a tricky process with many potential pitfalls . A solid grasp of the fundamentals will go a long way to help minimize these issues. Get started with understanding multi-threaded applications with our Java Concurrency guide: >> Download the eBook eBook \u2013 Reactive \u2013 NPI EA (cat=Reactive) Spring 5 added support for reactive programming with the Spring WebFlux module, which has been improved upon ever since. Get started with the Reactor project basics and reactive programming in Spring Boot: >> Join Pro and download the eBook eBook \u2013 Java Streams \u2013 NPI EA (cat=Java Streams) Since its introduction in Java 8, the Stream API has become a staple of Java development. The basic operations like iterating, filtering, mapping sequences of elements are deceptively simple to use. But these can also be overused and fall into some common pitfalls. To get a better understanding on how Streams work and how to combine them with other language features, check out our guide to Java Streams: >> Join Pro and download the eBook eBook \u2013 Jackson \u2013 NPI EA (cat=Jackson) Do JSON right with Jackson Download the E-book eBook \u2013 HTTP Client \u2013 NPI EA (cat=Http Client-Side) Get the most out of the Apache HTTP Client Download the E-book eBook \u2013 Maven \u2013 NPI EA (cat = Maven) Get Started with Apache Maven:", "start_char_idx": 0, "end_char_idx": 5028, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "794ce92f-25b5-4988-acf1-4f54f9eaa362": {"__data__": {"id_": "794ce92f-25b5-4988-acf1-4f54f9eaa362", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_1.txt", "file_name": "www.baeldung.com_45_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10bc0395-32dc-4b8d-8483-25f55939c297", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_1.txt", "file_name": "www.baeldung.com_45_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "dbb785984be0a91a38d62db42b2d973a6930572c8733f5f9e9065af733afd48e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f06620e-3c59-4f66-967c-e223a1b5bd8c", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_0.txt", "file_name": "www.baeldung.com_45_0.txt", "file_type": "text/plain", "file_size": 5078, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "4b8826ace8ebd2e679a846ad440c04af8d831ed17df867baa82a045894ca265a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78303da7-ef4d-45e9-88d7-0d311352c674", "node_type": "1", "metadata": {}, "hash": "c05302d1508d241209dbca6893e915880b09916766ba5103ef44e713aecc09fa", "class_name": "RelatedNodeInfo"}}, "text": "Download the E-book eBook \u2013 Persistence \u2013 NPI EA (cat=Persistence) Working on getting your persistence layer right with Spring? Explore the eBook eBook \u2013 RwS \u2013 NPI EA (cat=Spring MVC) Building a REST API with Spring? Download the E-book Course \u2013 LS \u2013 NPI EA (cat=Jackson) Get started with Spring and Spring Boot, through the Learn Spring course: >> LEARN SPRING Course \u2013 RWSB \u2013 NPI EA (cat=REST) Explore Spring Boot 3 and Spring 6 in-depth through building a full REST API with the framework: >> The New \u201cREST With Spring Boot\u201d Course \u2013 LSS \u2013 NPI EA (cat=Spring Security) Yes, Spring Security can be complex, from the more advanced functionality within the Core to the deep OAuth support in the framework. I built the security material as two full courses - Core and OAuth , to get practical with these more complex scenarios. We explore when and how to use each feature and code through it on the backing project . You can explore the course here: >> Learn Spring Security Course \u2013 All Access \u2013 NPI EA (cat= Spring) All Access is finally out, with all of my Spring courses. Learn JUnit is out as well, and Learn Maven is coming fast. And, of course, quite a bit more affordable. Finally. >> GET THE COURSE Course \u2013 LSD \u2013 NPI EA (tag=Spring Data JPA) Spring Data JPA is a great way to handle the complexity of JPA with the powerful simplicity of Spring Boot . Get started with Spring Data JPA through the guided reference course: >> CHECK OUT THE COURSE Partner \u2013 LambdaTest \u2013 NPI EA (cat=Testing) End-to-end testing is a very useful method to make sure that your application works as intended. This highlights issues in the overall functionality of the software, that the unit and integration test stages may miss. Playwright is an easy-to-use, but powerful tool that automates end-to-end testing , and supports all modern browsers and platforms. When coupled with LambdaTest (an AI-powered cloud-based test execution platform) it can be further scaled to run the Playwright scripts in parallel across 3000+ browser and device combinations: >> Automated End-to-End Testing With Playwright Course \u2013 Spring Sale 2025 \u2013 NPI EA (cat= Baeldung) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW Course \u2013 Spring Sale 2025 \u2013 NPI (cat=Baeldung) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW List List Implementations: A Guide to the Java LinkedList Guide to the Java ArrayList Immutable ArrayList in Java Guide to CopyOnWriteArrayList Multi Dimensional ArrayList in Java List Operations: Converting Iterator to List Java - Get Random Item/Element From a List Partition a List in Java (popular) Removing All Nulls From a List in Java Removing All Duplicates From a List in Java (popular) Check if Two Lists Are Equal in Java How to Find an Element in a List with Java (popular) Java List UnsupportedOperationException Copy a List to Another List in Java (popular) Remove All Occurrences of a Specific Value from a List Add Multiple Items to an Java ArrayList Remove the First Element from a List Ways to Iterate Over a List in Java Intersection of Two Lists in Java How to Count Duplicate Elements in Arraylist Finding the Differences Between Two Lists in Java (popular) Reversing a Linked List in Java Assert Two Lists for Equality Ignoring Order in Java (popular) Java List Initialization in One Line (popular) Determine the Class of a Generic Type in Java (popular) Converting a Java List to a Json Array Finding All Duplicates in a List in Java (popular) Sets Set Implementations: A Guide to TreeSet in Java A Guide to HashSet in Java Maps Map Implementations: A Guide to Java HashMap (popular) The Java HashMap Under the Hood A Guide to TreeMap in Java (popular) Java TreeMap vs HashMap Guide to WeakHashMap in Java A Guide to ConcurrentMap (popular) Guide to the ConcurrentSkipListMap An Introduction to Java.util.Hashtable Class A Guide to LinkedHashMap in Java (popular) A Guide to EnumMap (popular) Immutable Map Implementations in Java Java Map With Case-Insensitive Keys Java HashMap Load Factor Collections.synchronizedMap vs. ConcurrentHashMap Map Operations: How to Store Duplicate Keys in a Map in Java?", "start_char_idx": 0, "end_char_idx": 4230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78303da7-ef4d-45e9-88d7-0d311352c674": {"__data__": {"id_": "78303da7-ef4d-45e9-88d7-0d311352c674", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_1.txt", "file_name": "www.baeldung.com_45_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10bc0395-32dc-4b8d-8483-25f55939c297", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_1.txt", "file_name": "www.baeldung.com_45_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "dbb785984be0a91a38d62db42b2d973a6930572c8733f5f9e9065af733afd48e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "794ce92f-25b5-4988-acf1-4f54f9eaa362", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_1.txt", "file_name": "www.baeldung.com_45_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "fd30ae75f94358a88f1437ea790ac2537c029e7a30a6f871ce2efa367fb031b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "489693f9-1f88-4ac9-b1f3-9c538d377958", "node_type": "1", "metadata": {}, "hash": "7485b8dcadcd206ce4ad33a627307cd3354a5a5328c4c86fddff961e42b4a375", "class_name": "RelatedNodeInfo"}}, "text": "ConcurrentHashMap Map Operations: How to Store Duplicate Keys in a Map in Java? Initialize a HashMap in Java (popular) Merging Two Maps with Java (popular) Sort a HashMap in Java (popular) Comparing Two HashMaps in Java (popular) Using the Map.Entry Java Class (popular) Working With Maps Using Streams (popular) Iterate Over a Map in Java (popular) Queues Guide to PriorityBlockingQueue in Java Guide to java.util.concurrent.BlockingQueue (popular) A Guide to Java SynchronousQueue Guide to the Java TransferQueue Guide to DelayQueue Introduction to the Java ArrayDeque Guide to the Java Queue Interface A Guide to Concurrent Queues in Java Convert", "start_char_idx": 4151, "end_char_idx": 4800, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "489693f9-1f88-4ac9-b1f3-9c538d377958": {"__data__": {"id_": "489693f9-1f88-4ac9-b1f3-9c538d377958", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_2.txt", "file_name": "www.baeldung.com_45_2.txt", "file_type": "text/plain", "file_size": 5297, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf25075a-e48a-4748-b127-e8767de9d36f", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_2.txt", "file_name": "www.baeldung.com_45_2.txt", "file_type": "text/plain", "file_size": 5297, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "bc0bf54c14228a133f9afaf2983475705002f25ef95b3a1e4b5591cab1272ecd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78303da7-ef4d-45e9-88d7-0d311352c674", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_1.txt", "file_name": "www.baeldung.com_45_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6cf1dd03b7256750a214b07478d1445ac087fea056b8b45fdc1c571a80cead1f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63bf8dca-8fff-44b5-8b82-9e1dd943a51e", "node_type": "1", "metadata": {}, "hash": "c9a63bcc4c9bcd062e0bae13db8acc65120a0aad8ccadba8e4ad2dd4edc5caa6", "class_name": "RelatedNodeInfo"}}, "text": "Collections Converting Between an Array and a List in Java (popular) Converting Between an Array and a Set in Java Converting Between a List and a Set in Java (popular) Convert a Map to an Array, List or Set in Java How to Convert List to Map in Java (popular) Map to String Conversion in Java Arrays.asList vs new ArrayList(Arrays.asList()) Collecting Stream Elements into a List in Java (popular) Operations on Collection The Difference Between Collection.stream().forEach() and Collection.forEach() (popular) Sorting in Java Shuffling Collections in Java Flattening Nested Collections in Java Zipping Collections in Java Join and Split Arrays and Collections in Java Java - Combine Multiple Collections (popular) Finding Max/Min of a List or Collection (popular) Collect a Java Stream to an Immutable Collection Java Convenience Factory Methods for Collections Java Collections Interview Questions A Guide to Iterator in Java Getting the Size of an Iterable in Java Removing Elements from Java Collections Time Complexity of Java Collections (popular) Apache Commons Collections Apache Commons Collections Bag Apache Commons Collections SetUtils Apache Commons Collections OrderedMap Apache Commons Collections BidiMap A Guide to Apache Commons Collections CollectionUtils Apache Commons Collections MapUtils Guide to Apache Commons CircularFifoQueue Guava Collections Guava Collections Cookbook Guide to Guava Multimap Guava - Join and Split Collections Guide to Guava Table Other Collections Introduction to Eclipse Collections Introduction to PCollections Filtering and Transforming Collections in Guava Hamcrest Collections Cookbook Implementing a Binary Tree in Java (popular) Baeldung Pro \u2013 NPI EA (cat = Baeldung) Baeldung Pro comes with both absolutely No-Ads as well as finally with Dark Mode , for a clean learning experience: >> Explore a clean Baeldung Once the early-adopter seats are all used, the price will go up and stay at $33/year. Partner \u2013 Microsoft \u2013 NPI EA (cat = Spring Boot) Azure Container Apps is a fully managed serverless container service that enables you to build and deploy modern, cloud-native Java applications and microservices at scale. It offers a simplified developer experience while providing the flexibility and portability of containers. Of course, Azure Container Apps has really solid support for our ecosystem, from a number of build options, managed Java components, native metrics, dynamic logger, and quite a bit more. To learn more about Java features on Azure Container Apps, visit the documentation page . You can also ask questions and leave feedback on the Azure Container Apps GitHub page . Partner \u2013 Orkes \u2013 NPI EA (cat = Spring) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. Partner \u2013 Orkes \u2013 NPI EA (tag = Microservices) Modern software architecture is often broken. Slow delivery leads to missed opportunities, innovation is stalled due to architectural complexities, and engineering resources are exceedingly expensive. Orkes is the leading workflow orchestration platform built to enable teams to transform the way they develop, connect, and deploy applications, microservices, AI agents, and more. With Orkes Conductor managed through Orkes Cloud, developers can focus on building mission critical applications without worrying about infrastructure maintenance to meet goals and, simply put, taking new products live faster and reducing total cost of ownership. Try a 14-Day Free Trial of Orkes Conductor today. eBook \u2013 HTTP Client \u2013 NPI EA (cat=HTTP Client-Side) The Apache HTTP Client is a very robust library, suitable for both simple and advanced use cases when testing HTTP endpoints . Check out our guide covering basic request and response handling, as well as security, cookies, timeouts, and more: >> Download the eBook eBook \u2013 Java Concurrency \u2013 NPI EA (cat=Java Concurrency) Handling concurrency in an application can be a tricky process with many potential pitfalls . A solid grasp of the fundamentals will go a long way to help minimize these issues. Get started with understanding multi-threaded applications with our Java Concurrency guide: >> Download the eBook eBook \u2013 Java Streams \u2013 NPI EA (cat=Java Streams) Since its introduction in Java 8, the Stream API has become a staple of Java development. The basic operations like iterating, filtering, mapping sequences of elements are deceptively simple to use. But these can also be overused and fall into some common pitfalls. To get a better understanding on how Streams work and how to combine them with other language features, check out our guide to Java Streams: >> Join Pro and download", "start_char_idx": 0, "end_char_idx": 5271, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63bf8dca-8fff-44b5-8b82-9e1dd943a51e": {"__data__": {"id_": "63bf8dca-8fff-44b5-8b82-9e1dd943a51e", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_3.txt", "file_name": "www.baeldung.com_45_3.txt", "file_type": "text/plain", "file_size": 1791, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a512118-983b-4b78-b1e1-f619705422ee", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_3.txt", "file_name": "www.baeldung.com_45_3.txt", "file_type": "text/plain", "file_size": 1791, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8a03dc3b775f75ffbd0b32f16cb8c7d9a8c407d2226d6f67f88f1392326dba46", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "489693f9-1f88-4ac9-b1f3-9c538d377958", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_2.txt", "file_name": "www.baeldung.com_45_2.txt", "file_type": "text/plain", "file_size": 5297, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "bc0bf54c14228a133f9afaf2983475705002f25ef95b3a1e4b5591cab1272ecd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "37ed85f6-5447-4571-82b9-fd56dabb28e3", "node_type": "1", "metadata": {}, "hash": "a6e21942661a06ca8987f4209059a0b73794889014972bb8cd84af77cae5c358", "class_name": "RelatedNodeInfo"}}, "text": "the eBook eBook \u2013 Persistence \u2013 NPI EA (cat=Persistence) Working on getting your persistence layer right with Spring? Explore the eBook Course \u2013 LS \u2013 NPI EA (cat=REST) Get started with Spring Boot and with core Spring, through the Learn Spring course: >> CHECK OUT THE COURSE Course \u2013 Spring Sale 2025 \u2013 NPI EA (cat= Baeldung) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW Course \u2013 Spring Sale 2025 \u2013 NPI (All) Yes, we're now running our Spring Sale. All Courses are 25% off until 26th May, 2025: >> EXPLORE ACCESS NOW eBook Jackson \u2013 NPI EA \u2013 3 (cat = Jackson) Do JSON right with Jackson Download the E-book Course \u2013 LSSC \u2013 NPI EA (cat= Security) Course \u2013 LS \u2013 NPI EA (cat=Spring) Course \u2013 All Access \u2013 NPI EA (cat= Spring) Course \u2013 LSSO \u2013 NPI EA (tag = OAuth) Course \u2013 LSD \u2013 NPI EA (tag=Spring Data JPA) eBook \u2013 Guide Spring Cloud \u2013 NPI EA (cat=Spring Cloud) >> Join Pro and get the eBook eBook \u2013 Guide Junit \u2013 NPI EA (tag=JUnit) Quick Guide to Take Advantage of JUnit 5 Download the E-book Course \u2013 RWSB \u2013 NPI EA (cat=REST) eBook \u2013 Jackson \u2013 NPI EA \u2013 2 (cat=Jackson) Do JSON right with Jackson Download the E-book eBook \u2013 RwS Java \u2013 NPI EA (cat=Java) Building a REST API with Spring 5? Download the E-book eBook \u2013 Maven \u2013 NPI EA (cat= Maven) Get Started with Apache Maven Download the E-book eBook- Spring Reactive Guide \u2013 NPI EA (cat=Reactive) Spring Reactive Guide >> Join Pro and get the eBook eBook \u2013 Mockito \u2013 NPI EA (tag=Mockito) Starting to test with Mockito? Download the Guide eBook \u2013 Persistence \u2013 NPI EA (cat=Persistence) Download the E-book Course \u2013 Spring Sale 2025 \u2013 NPI EA (cat = Baeldung) Course \u2013 Spring Sale 2025 \u2013 NPI (All)", "start_char_idx": 0, "end_char_idx": 1707, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37ed85f6-5447-4571-82b9-fd56dabb28e3": {"__data__": {"id_": "37ed85f6-5447-4571-82b9-fd56dabb28e3", "embedding": null, "metadata": {"file_path": "docs\\java\\www.baeldung.com_4_0.txt", "file_name": "www.baeldung.com_4_0.txt", "file_type": "text/plain", "file_size": 1238, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32f2dea0-7eb4-45e5-b795-b0db4b37c2e9", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.baeldung.com_4_0.txt", "file_name": "www.baeldung.com_4_0.txt", "file_type": "text/plain", "file_size": 1238, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8e3587fe9869df7287c97ce4470763b2d63812a0d6a3993cc9ca0d0342ec64aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63bf8dca-8fff-44b5-8b82-9e1dd943a51e", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_3.txt", "file_name": "www.baeldung.com_45_3.txt", "file_type": "text/plain", "file_size": 1791, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8a03dc3b775f75ffbd0b32f16cb8c7d9a8c407d2226d6f67f88f1392326dba46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b836fad-88c3-4d66-be82-db6f308c7ad1", "node_type": "1", "metadata": {}, "hash": "62a95c1e5fbd0c8f77caf4095126918f392fa44c3d1dd8170f6550a23fae9339", "class_name": "RelatedNodeInfo"}}, "text": "Baeldung Baeldung Pro (New) Baeldung Pro is finally out and live \ud83d\ude42 All Access Along with Pro, also launching All-Access for all Baeldung courses! Java Weekly \ufeffReviews The Java Weekly NEWSLETTER Java Weekly, Issue 595 LATEST Java Weekly, Issue 594 Java Weekly, Issue 593 Latest Articles on Java Introduction to ActiveJ Introduction to SootUp Introduction to gRPC with Spring Boot Java Series Get Started with Java FULL GUIDE Java Collections Tutorials Java Concurrency Tutorials Java Streams Tutorial Spring Boot Tutorials Spring Boot Tutorial FULL GUIDE Spring Dependency Injection Tutorials SERIES Bootstrap a Simple Spring Boot Application GUIDE Other Content Baeldung on Linux READ MORE Baeldung on CS READ MORE Baeldung on Kotlin READ MORE Baeldung on Ops READ MORE Other Spring Series REST with Spring Tutorial FULL GUIDE All Spring Persistence Guides SERIES Spring Cloud Series SERIES On Spring Security All Spring Security Guides FULL GUIDE The Spring Security Authentication Series SERIES Spring Security OAuth2 Guides SERIES Java Libraries Mockito Tutorials SERIES A Guide to JUnit 5 GUIDE Introduction to Project Lombok GUIDE About Jackson and JSON All Jackson Guides FULL GUIDE Jackson Annotations The Jackson ObjectMapper", "start_char_idx": 0, "end_char_idx": 1233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b836fad-88c3-4d66-be82-db6f308c7ad1": {"__data__": {"id_": "8b836fad-88c3-4d66-be82-db6f308c7ad1", "embedding": null, "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_0.txt", "file_name": "www.codecademy.com_38_0.txt", "file_type": "text/plain", "file_size": 5011, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb0f6b83-87e0-404d-ae11-f06d61560c42", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_0.txt", "file_name": "www.codecademy.com_38_0.txt", "file_type": "text/plain", "file_size": 5011, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "81a0db4dd5a760ae36fc449d254b7aae42ed544e3d4d8f67db35c081e8cc66e8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "37ed85f6-5447-4571-82b9-fd56dabb28e3", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.baeldung.com_4_0.txt", "file_name": "www.baeldung.com_4_0.txt", "file_type": "text/plain", "file_size": 1238, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8e3587fe9869df7287c97ce4470763b2d63812a0d6a3993cc9ca0d0342ec64aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69949008-1056-490c-baf9-261234053238", "node_type": "1", "metadata": {}, "hash": "5433149d465145ea8c0c406eae024579fc58324c622139115f812d5ec11a4517", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorial: Learn Java Programming | Codecademy Skip to Content Free Course Learn Java Learn to code in Java \u2014 a robust programming language used to create software, web and mobile apps, and more. 4.4 4.4 out of 5 stars 9,901 ratings Diagonal B Regular This course includes AI assistance for guided coding help Projects to apply new skills Quizzes to test your knowledge A certificate of completion Start 1,300,540 learners enrolled Diagonal B Regular This course includes AI assistance for guided coding help Projects to apply new skills Quizzes to test your knowledge A certificate of completion Skill level Beginner Time to complete Average based on combined completion rates \u2014 individual pacing in lessons, projects, and quizzes may vary 17 hours Projects 14 Prerequisites None About this course Popular for its versatility and ability to create a wide variety of applications, learning Java opens up your possibilities when coding. With it, you\u2019ll be able to develop large systems, software, and mobile applications \u2014 and even create mobile apps for Android. Learn important Java coding fundamentals and practice your new skills with real-world projects. Skills you'll gain Build core programming concepts Learn object-oriented concepts Create Java projects Syllabus 16 lessons \u2022 14 projects \u2022 15 quizzes Expand all sections 1 Hello World Welcome to the world of Java programming! Java is a popular object-oriented programming language that is used in many different industries. 2 Variables Learn about datatypes in Java and how we use them. Then, practice your skills with two projects where you create and manipulate variables. 3 Object-Oriented Java Learn about object-oriented programming in Java. Explore syntax for defining classes and creating instances. 4 Conditionals and Control Flow Conditionals and control flow in Java programs. 5 Arrays and ArrayLists Build lists of data with Java arrays and ArrayLists. 6 Loops Use loops to iterate through lists and repeat code. 7 String Methods The Java String class provides a lot of useful methods for performing operations on strings and data manipulation. Certificate of completion available with Plus or Pro Earn a certificate of completion and showcase your accomplishment on your resume or LinkedIn. Show all 11 modules Start The platform Hands-on learning AI-assisted learning Make progress faster with our AI Learning Assistant, a tool that automatically understands your current course, instructions, and solution code \u2014 and gives you instant, personalized feedback. Real-world projects Take what you're learning into the real world. Choose from guided projects that help you solidify new concepts \u2014 or test yourself with independent projects designed to build your portfolio. Job-readiness checker See how well your skills and experience meet the requirements for jobs you're interested in. AI generates a personalized report to show you how ready you are for your dream job and where to improve to qualify for a role. Interview simulator Use AI to identify strengths and get personalized, actionable feedback to improve your interviewing skills. Easily see what's needed to improve your skills \u2014 no matter what stage you're at in your career. Assessments Test new skills as you learn them so you can better understand and apply new concepts. You'll also see which topics need more review and get practice recommendations to continue to improve. Explore features Projects in this course practice Project Planting a Tree Write your first Java program from scratch by introducing yourself to users and planting a tree for them. You'll practice creating a class, defining the main method, and organizing print statements. practice Project Java Variables: Mad Libs In this project, we're going to practice creating variables and printing. We're going to put your skills to the test by generating a story, Mad Libs style. practice Project Math Magic It's time to build fluency with operators in Java. In this project, we're going to practice arithmetic in Java so you can hone your skills and feel confident taking them to the real world. Why? Practicing computing integer values with Java's arithmetic operators will help you with a wide, wide range of Java tasks in the future. What's next? Some math, more Java, and a sprinkle of magic. You got this! Grid Regular Grid Regular Earn a certificate of completion Show your network you've done the work by earning a certificate of completion for each course or path you finish. Show proof Receive a certificate that demonstrates you've completed a course or path. Build a collection The more courses and paths you complete, the more certificates you collect. Share with your network Easily add certificates of completion to your LinkedIn profile to share your accomplishments. Learn Java course ratings and reviews 4.4 4.4 out of 5 stars 9,901 ratings 5 stars 60% 4 stars 28% 3 stars 8% 2 stars 2% 1 star 3% Checker Dense Really helped me grasp the basics of Java that I couldn't", "start_char_idx": 0, "end_char_idx": 4993, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69949008-1056-490c-baf9-261234053238": {"__data__": {"id_": "69949008-1056-490c-baf9-261234053238", "embedding": null, "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_1.txt", "file_name": "www.codecademy.com_38_1.txt", "file_type": "text/plain", "file_size": 3306, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eeee697d-2a7e-4ec2-8599-c42a1cce3320", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_1.txt", "file_name": "www.codecademy.com_38_1.txt", "file_type": "text/plain", "file_size": 3306, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "414e8d59cc141970a69b4a17a6db9e4e44f6124c989bd8e2445e1db4b14355b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b836fad-88c3-4d66-be82-db6f308c7ad1", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_0.txt", "file_name": "www.codecademy.com_38_0.txt", "file_type": "text/plain", "file_size": 5011, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "81a0db4dd5a760ae36fc449d254b7aae42ed544e3d4d8f67db35c081e8cc66e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f94a4021-715d-4f31-ae00-da383ae9bbfa", "node_type": "1", "metadata": {}, "hash": "d80f585bc4c56781c888e69b5d2e5bb041b24f9e66fc5777878e7b14edf8d52d", "class_name": "RelatedNodeInfo"}}, "text": "really understand otherwise. I highly recommended this for new programmers or even lightly experienced ones such as myself and I will 100% recommend this to anyone I know who is into coding. Seamus B. Verified Learner Checker Dense Easy to follow and well explained. The concepts cover the range of topics that are vital to getting started in Java and challenging enough to be useful, but with enough help to let you understand if you get stuck. Chris J. Verified Learner Checker Dense I loved this course. It was very on pace for somebody who wanted to learn how to program properly. I've bene trying to learn for many years, but no one has explained it so simply as Codecademy. Thanks Codecademy! Mihai C. Verified Learner Our learners work at Google Logo Meta Logo Apple Logo EA Logo Amazon Logo IBM Logo Microsoft Logo Reddit Logo Spotify Logo Uber Logo YouTube Logo Instagram Logo Frequently asked questions about Java What is Java? Java is an open-source, general-purpose programming language known for its versatility and stability. It\u2019s used for everything from building websites to operating systems and wearable devices. You can even find Java in outer space, running the Mars rover. What does Java do? What kind of jobs can Java get me? Are Java and Javascript the same? What do I need to know before learning Java? Join over 50 million learners and start Learn Java today! Start Looking for something else? Related resources Article Java and the Command Line A brief overview of running Java through the command line. Article Java Program Structure Java programs have a specific structure. Let's take a closer look at the Hello World program \u2014 line by line! Article Java Style Guide Learn essential Java coding style rules with the Java style guide, including naming conventions, brackets, spacing, and indentation best practices. Related courses and paths Skill path Study for the AP Computer Science A Exam (Java) Master the core concepts covered in AP Computer Science A Exam and gain a solid understanding of programming and fluency in Java. Checker Dense Includes 8 Courses Checker Dense With Certificate Checker Dense Beginner Friendly 19 hours Free course Intro to Java Get started with Java by learning about the basics of a Java program and variables! Checker Dense Beginner Friendly 6 hours Free course Java for Programmers Take this course meant for experienced programmers and learn Java, one of the world's most popular languages. Checker Dense Intermediate 1 hour Browse more topics Cloud computing 2,682,641 learners enrolled For business 3,749,318 learners enrolled Mobile development 1,461,768 learners enrolled Code foundations 7,983,871 learners enrolled Computer science 6,452,501 learners enrolled Java 1,312,294 learners enrolled Web development 5,351,460 learners enrolled Data science 4,898,559 learners enrolled Python 3,952,609 learners enrolled View full catalog Checker Dense Unlock additional features with a paid plan Practice Projects Guided projects that help you solidify the skills and concepts you're learning. Assessments Auto-graded quizzes and immediate feedback help you reinforce your skills as you learn. Certificate of Completion Earn a document to prove you've completed a course or path that you can share with your network. See pricing and plans", "start_char_idx": 0, "end_char_idx": 3302, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f94a4021-715d-4f31-ae00-da383ae9bbfa": {"__data__": {"id_": "f94a4021-715d-4f31-ae00-da383ae9bbfa", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_0.txt", "file_name": "www.geeksforgeeks.org_1_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c12f1715-4cac-4ea7-82a7-50ed580ca8fa", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_0.txt", "file_name": "www.geeksforgeeks.org_1_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "24efdbce2de9a704dc865a6fd63cf9403eb840d7a5811f14205045b1c389924c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69949008-1056-490c-baf9-261234053238", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_1.txt", "file_name": "www.codecademy.com_38_1.txt", "file_type": "text/plain", "file_size": 3306, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "414e8d59cc141970a69b4a17a6db9e4e44f6124c989bd8e2445e1db4b14355b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ad3c1c4-2f4a-41e0-9075-4c8adb7b1997", "node_type": "1", "metadata": {}, "hash": "530a666b03bef3e247e3fcf18ec6e471f32f94d1f2927be82f414ae702eed6cc", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorial | GeeksforGeeks Java Course Java Arrays Java Strings Java OOPs Java Collection Java 8 Tutorial Java Multithreading Java Exception Handling Java Programs Java Project Java Collections Interview Java Interview Questions Java MCQs Spring Spring MVC Spring Boot Hibernate Sign In \u25b2 Open In App Explore GfG Courses Share Your Experiences Java Tutorial Java Overview Introduction to Java The Complete History of Java Programming Language How to Install Java on Windows, Linux and macOS? Setting up Environment Variables For Java - Complete Guide to Set JAVA_HOME How JVM Works - JVM Architecture JDK in Java Differences Between JDK, JRE and JVM Java Basics Java Syntax Java Hello World Program Java Identifiers Java Keywords Java Data Types Java Variables Scope of Variables in Java Java Operators Java User Input - Scanner Class Java Flow Control Java if statement Java if-else Statement Java if-else-if ladder with Examples Java For Loop For-Each Loop in Java Java while Loop Java Do While Loop Java Break Statement Java Continue Statement Java return Keyword Java Methods Java Methods How to Call a Method in Java? Static Method vs Instance Method in Java Access Modifiers in Java Command Line Arguments in Java Variable Arguments (Varargs) in Java Java Arrays Arrays in Java How to Initialize an Array in Java? Java Multi-Dimensional Arrays Jagged Array in Java Arrays Class in Java Final Arrays in Java Java Strings Java Strings Why Java Strings are Immutable? Java String concat() Method with Examples String Class in Java StringBuffer Class in Java Java StringBuilder Class String vs StringBuilder vs StringBuffer in Java Java OOPs Concepts Java OOP(Object Oriented Programming) Concepts Classes and Objects in Java Java Constructors Object Class in Java Abstraction in Java Encapsulation in Java Inheritance in Java Polymorphism in Java Method Overloading in Java Overriding in Java Java Packages Java Interfaces Java Interface Interfaces and Inheritance in Java Java Class vs Interfaces Java Functional Interfaces Nested Interface in Java Marker Interface in Java Java Comparator Interface Java Collections Collections in Java Collections Class in Java Collection Interface in Java Java List Interface ArrayList in Java Vector Class in Java LinkedList in Java Stack Class in Java Set in Java Java HashSet TreeSet in Java Java LinkedHashSet Queue Interface In Java PriorityQueue in Java Deque Interface in Java Map Interface in Java HashMap in Java Java LinkedHashMap Hashtable in Java Java Dictionary Class SortedSet Interface in Java with Examples Java Comparator Interface Java Comparable Interface Java Comparable vs Comparator Java Iterator Java Exception Handling Java Exception Handling Java Checked vs Unchecked Exceptions Java Try Catch Block Java final, finally and finalize throw and throws in Java User-Defined Custom Exception in Java Chained Exceptions in Java Null Pointer Exception in Java Exception Handling with Method Overriding in Java Java Multithreading Java Multithreading Tutorial Java Threads Java Thread Class Java Runnable Interface Lifecycle and States of a Thread in Java Main thread in Java Java Thread Priority in Multithreading Java Naming a Thread and Fetching Name of Current Thread Java Thread.start() vs Thread.run() Method Java Thread.sleep() Method Java Daemon Thread Java Thread Safety and How to Achieve it? Thread Pools in Java Java File Handling File Handling in Java Java File Class Java Program to Create a New File Java Program to Write into a File Delete a File Using Java Java FileReader Class Java FileWriter Class Java FilePermission Class Java FileDescriptor Class Java Streams and Lambda Expressions Java Lambda Expressions Java Method References Java 8 Stream Tutorial Java 8 Features - Complete Tutorial Java IO Java IO - Input/Output in Java with Examples Java Reader Class Java Writer Class Java FileInputStream Class FileOutputStream in Java Ways to Read Input from Console in Java Java BufferedOutputStream Class Java BufferedReader vs Scanner Class Fast I/O in Java in Competitive Programming Java Synchronization Synchronization in Java Importance of Thread Synchronization in Java Java Method and Block Synchronization Java Atomic vs Volatile vs Synchronized Java Lock Framework vs Thread Synchronization Deadlock in Java Multithreading Deadlock Prevention And Avoidance Difference Between Lock and Monitor in Java Concurrency ReentrantLock in Java Java Regex Regular Expressions in Java Java Pattern pattern() Method Java Matcher pattern() Method java.lang.Character Class Methods | Set 1 Java Quantifiers Java Networking Java Networking TCP/IP Model User Datagram Protocol (UDP) Difference Between IPv4 and IPv6 Difference Between Connection-oriented and Connection-less Services Socket Programming in Java Java ServerSocket Class Java URL Class JDBC JDBC (Java Database Connectivity) JDBC Drivers Establishing JDBC Connection in Java Types of Statements in JDBC Java Memory Allocation Java Memory Management How are Java Objects Stored in Memory? Stack vs Heap Memory Allocation Java Virtual Machine (JVM) Stack Area How Many Types of Memory Areas are Allocated by JVM? Garbage Collection in Java JVM Garbage Collectors Stack vs Heap Memory Allocation Memory leaks in Java Java Interview Questions Java Interview", "start_char_idx": 0, "end_char_idx": 5291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ad3c1c4-2f4a-41e0-9075-4c8adb7b1997": {"__data__": {"id_": "2ad3c1c4-2f4a-41e0-9075-4c8adb7b1997", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_1.txt", "file_name": "www.geeksforgeeks.org_1_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d3427ba-a10b-4bdd-99e3-7e74f155085c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_1.txt", "file_name": "www.geeksforgeeks.org_1_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c05cb94e71599683c2a2a17591b1c67e43377c169001c460498c7f34e15bf973", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f94a4021-715d-4f31-ae00-da383ae9bbfa", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_0.txt", "file_name": "www.geeksforgeeks.org_1_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "24efdbce2de9a704dc865a6fd63cf9403eb840d7a5811f14205045b1c389924c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1eade4dd-901e-4ac0-98a8-e6d90272c13c", "node_type": "1", "metadata": {}, "hash": "33e94338bd2e26d4f9558180bf4a9ba6ab38ee3e8dee190771939b803adf05dd", "class_name": "RelatedNodeInfo"}}, "text": "Questions and Answers Java Multiple Choice Questions Java Practice Problems Java Programs - Java Programming Examples Java Exercises - Basic to Advanced Java Practice Programs with Solutions Java Quiz | Level Up Your Java Skills Java Projects Top 50 Java Project Ideas For Beginners and Advanced [Update 2025] Number Guessing Game in Java Mini Banking Application in Java Java Program to Convert Currency using AWT Tic-Tac-Toe Game in Java Design Snake Game Memory Game in Java How to Implement a Simple Chat Application Using Sockets in Java? Image Processing in Java - Face Detection Design Media Sharing Social Networking System Java Swing | Create a simple text editor Java Backend Development Course Java Tutorial Last Updated : 19 May, 2025 Comments Improve Suggest changes Like Article Like Report Java is a high-level, object-oriented programming language used to build web apps, mobile applications, and enterprise software systems. It is known for its Write Once, Run Anywhere capability, which means code written in Java can run on any device that supports the Java Virtual Machine (JVM). Java syntax and structure is similar to C-based languages like C++ and C#. Its robustness, platform-independent compatibility, and strong memory management have made it a go-to language for developers worldwide. This Java tutorial is designed for both beginners and experienced professionals and it covers basic to advanced Java topics. Why Learn Java? Java is used to build Android apps, desktop and web apps, enterprise backend systems, and cloud-based software. Java is in high demand with many job opportunities in software development. Java has popular frameworks like Spring and Hibernate which makes Java powerful for enterprise applications. Java supports object-oriented programming for clean and reusable code. It runs on all platforms Windows, Mac, and Linux using the JVM. Top companies like Amazon, Netflix, and LinkedIn use Java. Java Hello World Program Here is a simple Java program that prints \"Hello World\". Java // A Java program to print \"Hello World\" public class Geeks { public static void main ( String args [] ) { System . out . println ( \"Hello World\" ); } } Output Hello World Java Basics Java basics form the foundation of your programming journey, covering essential concepts like syntax, data types, variables, loops, and conditionals. Mastering these fundamentals is key to building strong, error-free Java applications: Introduction Download and Install Java JDK vs JRE vs JVM Identifiers Keywords Quiz : Java Basics and Identifiers Data Types Variables Operators Quiz : Variables , Operator Decision Making (if, if-else, switch, break, continue, jump) Loops Quiz : Control Statements and Loops Java Methods Java methods are reusable blocks of code that perform specific tasks and help organize your program. They improve code readability, reduce repetition, and make debugging easier: Introduction to Methods How to Call Methods? Static Methods vs Instance Methods Access Modifiers Command Line Arguments Variable Arguments (Varargs) Quiz : Methods Java Arrays Java arrays are containers that store multiple values of the same data type in a single variable. They provide an efficient way to manage and access collections of data using index-based positions: Introduction to Arrays Declare and Initialize Arrays Multi-Dimensional Arrays Quiz: Java Arrays Jagged Arrays Arrays Class Final Arrays Java Array Programs Quiz: Array Programs Java Strings Java Strings represent sequences of characters and are widely used in text processing. They are immutable, meaning once created, their values cannot be changed: Introduction of Strings Why Strings are Immutable? Java String Concatenation Quiz : String Basics String Class StringBuffer Class StringBuilder Class Quiz: String Classes Strings vs StringBuffer vs StringBuilder Java String Programs Java OOPs Concepts Java follows the Object-Oriented Programming (OOP) paradigm, which organizes code into classes and objects. Core OOP principles like inheritance, encapsulation, polymorphism, and abstraction make Java modular and scalable: What are OOPs Concepts? Classes and Objects Quiz: Classes and Objects Constructors Quiz : Constructors Object Class Abstraction Encapsulation Inheritance Quiz : Inheritance and Abstraction Polymorphism Compile-Time Polymorphism (Method Overloading) Runtime Polymorphism (Method Overriding) Packages Quiz : Polymorphism and Packages Java Interfaces Java interfaces define a contract that classes must follow, specifying method signatures without implementations. They enable abstraction and support multiple inheritance in Java through a clean, structured approach: Java Interfaces Interfaces and Inheritance Class vs Interface Quiz: Interfaces Functional Interface Nested Interface Marker Interface Comparator Interface Quiz : Interface types and Comparator Java Collections Java Collections provide a framework for storing and manipulating groups of objects efficiently. It includes interfaces like List, Set, and Map, along with classes like ArrayList, HashSet, and HashMap: Java Collection Framework Collections Class Collection Interface Quiz: Collection Framework List Interface Quiz : List Interface ArrayList Class Quiz: ArrayList Vector Class Quiz : Vector LinkedList Class Quiz : LinkedList Stack Class Set Interface HashSet Class Quiz: Set and HashSet TreeSet Class LinkedHashSet Class Queue Interface Priority Queue Class Deque Interface Map", "start_char_idx": 0, "end_char_idx": 5469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1eade4dd-901e-4ac0-98a8-e6d90272c13c": {"__data__": {"id_": "1eade4dd-901e-4ac0-98a8-e6d90272c13c", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_2.txt", "file_name": "www.geeksforgeeks.org_1_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8126d58-ecb7-4dd4-8101-9d65551b561f", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_2.txt", "file_name": "www.geeksforgeeks.org_1_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2ffdd5ae8ec826276e76272f0ae083917e3404f4c9f6d5d99e4e9461b306537c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ad3c1c4-2f4a-41e0-9075-4c8adb7b1997", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_1.txt", "file_name": "www.geeksforgeeks.org_1_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "c05cb94e71599683c2a2a17591b1c67e43377c169001c460498c7f34e15bf973", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "873e785f-2f49-4ec1-a3fb-5ca5ba7d8ebc", "node_type": "1", "metadata": {}, "hash": "20e4d2185571b8e788b8b977662a485131254f9bc383dc7c6c73a190b704fbf4", "class_name": "RelatedNodeInfo"}}, "text": "Interface HashMap Class LinkedHashMap Class Quiz: Queue and Map Interface HashTable Class Quiz : Hashtable Dictionary SortedSet Interface Comparator Interface Comparable Interface Comparator vs Comparable Quiz : Comparator vs Comparable Iterator Quiz: Iterators Java Exception Handling ava Exception Handling is a mechanism to handle runtime errors, ensuring the program runs smoothly without crashing. It uses keywords like try, catch, throw, throws, and finally to manage exceptions: Java Exceptions Checked vs Unchecked Exceptions Try Catch Block Quiz: Java Exceptions Final, Finally and Finalize Throw and Throws Customized Exception Handling Chained Exceptions Null Pointer Exceptions Exception Handling with Method Overriding Quiz : Exception Handling Java Multithreading Java Multithreading allows concurrent execution of two or more threads, enabling efficient CPU utilization and faster program performance. It is commonly used for tasks like parallel processing and responsive applications: Introduction to Java Multithreading Threads Thread Class Runnable Interface Quiz: Thread Basics and Lifecycle Lifecycle and States of a Thread Main Thread Thread Priority in Multithreading Naming & Feteching Name of Current Thread Thread.start() vs Thread.run() Method Thread.sleep() Method Daemon Thread Quiz : Thread Methods and Daemon Threads Thread Safety Thread Pools Java File Handling Java File Handling enables programs to create, read, write, and manipulate files stored on the system. It uses classes from the java.io and java.nio packages for efficient file operations: File Handling File Class Create Files Read Files Quiz: File Handling Write on Files Delete File FileReader Class FileWriter Class Quiz: File Writing FilePermission Class FileDescriptor Class Java Streams and Lambda Expressions Java Streams and Lambda Expressions simplify data processing by enabling functional-style operations on collections. Lambdas provide concise syntax for anonymous functions, while Streams allow efficient filtering, mapping, and reduction of data: Lambda Expressions Method References Java Stream - Complete Tutorial Quiz: Lambda Expressions and Streams Java 8 Features - Complete Tutorial Java IO Java IO (Input/Output) provides a set of classes and streams to read and write data from various sources like files, consoles, and network connections. It is part of the java.io package and supports both byte and character streams: Introduction to Java IO Reader Class Writer Class FileInput Stream Quiz : IO Basics FileOutput Stream BufferedReader Input Stream BufferedReader Output stream BufferedReader vs Scanner Fast I/O Quiz : BufferedReader vs Scanner and Fast I/O Java Synchronization Java Synchronization is used to control access to shared resources in multithreaded environments. It ensures that only one thread can access a critical section at a time, preventing data inconsistency: Java Synchronization Importance of Thread Synchronization Method and Block Synchronization Quiz : Synchronization Basics Atomic vs Volatile vs Synchronized Local Frameworks vs Thread Synchronization Deadlock in Multithreading Quiz : Deadlocks and Synchronization Deadlock Prevention and Avoidance Lock vs Monitor in Concurrency Reentrant Lock Quiz : Concurrency Locks and Reentrant Locks Java Regex Java Regex (Regular Expressions) allows pattern matching and text manipulation using the java.util.regex package. It is powerful for validating, searching, and replacing strings based on specific patterns: What is Java Regex? Pattern Class Matcher Class Character Class Quiz : Regex Basics and Pattern Matching Quantifiers Java Networking Java Networking enables communication between devices over a network using classes from the java.net package. It supports protocols like TCP and UDP for building client-server applications and data exchange: Introduction to Java Networking TCP Architecture UDP Architecture IPV4 vs IPV6 Quiz : Networking Basics and Protocols Connection-Oriented vs Connectionless Protocols Socket Programming Server Socket Class Quiz: Sockets and Server Communication URL Class and Methods Java Database Connectivity(JDBC) Introduction to Java JDBC JDBC Driver JDBC Connection Types of Statements in JDBC Quiz : JDBC Java Memory Allocation Java Memory Allocation refers to how memory is assigned to variables, objects, and classes during program execution. It involves stack and heap memory, with the JVM managing allocation and garbage collection automatically: Java Memory Management How Java Objects Stored in Memory? Quiz : Java Memory Allocation Stack vs Heap Memory Allocation Quiz : Heap vs Stack Java Virtual Machine(JVM) Stack Area Types of Memory Areas Allocated by JVM Garbage Collection Quiz: JVM Memory Management and Garbage Collection Types of JVM Garbage Collectors Heap and Stack Memory Allocation Memory Leaks Java Interview Questions Prepare for Java interviews with these commonly asked questions, covering core concepts, OOP, collections, multithreading, exception handling, and frameworks like Spring and Hibernate: 200+ Core Java Interview Questions and Answers Java MCQ Best Approach to Learn Java Here\u2019s the step-by-step approach to learn and master Java efficiently and effectively: 1. Understand Java Fundamentals: Start with the basics: what Java is, how it works (JVM, JRE, JDK), and why it\u2019s platform-independent. Learn about Java\u2019s role in building desktop, web, and mobile applications. 2. Set Up the Java Environment: Install the latest JDK and configure your development environment. Use a beginner-friendly IDE like IntelliJ IDEA, Eclipse, or VS Code for writing and testing your code. 3. Learn", "start_char_idx": 0, "end_char_idx": 5651, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "873e785f-2f49-4ec1-a3fb-5ca5ba7d8ebc": {"__data__": {"id_": "873e785f-2f49-4ec1-a3fb-5ca5ba7d8ebc", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_3.txt", "file_name": "www.geeksforgeeks.org_1_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91e1bfb1-db50-4601-924e-bf96cb6152f9", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_3.txt", "file_name": "www.geeksforgeeks.org_1_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8d2c834426888014902bc9b352940be0be7db6cc3106700fb7fb8c6593a2e508", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1eade4dd-901e-4ac0-98a8-e6d90272c13c", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_2.txt", "file_name": "www.geeksforgeeks.org_1_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2ffdd5ae8ec826276e76272f0ae083917e3404f4c9f6d5d99e4e9461b306537c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8d80ac6-4acd-4818-acce-22c7c4c367e7", "node_type": "1", "metadata": {}, "hash": "2a74d0789f841ff8518361b37da3f4471f66132dbd35328a775ba7440a536675", "class_name": "RelatedNodeInfo"}}, "text": "Core Java Concepts: Focus on essential topics like variables, data types, operators, control structures (if-else, switch, loops), and input/output. Practice writing simple programs to strengthen your understanding. 4. Master Object-Oriented Programming (OOP): Dive into the pillars of OOP\u2014classes, objects, inheritance, polymorphism, encapsulation, and abstraction. Understand how Java handles these concepts and how to apply them effectively in real projects. 5. Explore Collections and Data Structures: Learn about Java's Collection Framework\u2014ArrayList, HashMap, Set, LinkedList, and more. Understand how to use them and when to choose one over the other. 6. Work with Exception Handling: Understand the importance of error handling in Java using try-catch blocks, finally, throw, and custom exceptions. Learn best practices for writing clean, safe code. 7. Get Comfortable with File I/O: Learn how Java reads from and writes to files using File , FileReader , BufferedReader , FileWriter , and Streams . Practice creating programs that manage and manipulate file data. 8. Understand Multithreading and Concurrency: Grasp the basics of threads, synchronization, and concurrent programming. Learn how Java handles multiple tasks simultaneously using the Thread class and ExecutorService . 9. Learn Java Libraries and APIs: Familiarize yourself with essential APIs like Java Math, Date & Time (java.time), and String manipulation. Explore popular libraries like Apache Commons, Gson, or Jackson for real-world development. 10. Build Real-World Projects: Apply your knowledge by building console apps, file management systems, or basic desktop GUIs using JavaFX or Swing. Gradually move into web development with Java Servlets, JSP, or Spring Boot. Java Program Examples Java Programming Examples Java Exercises \u2013 Basic to Advanced Java Practice Programs Java Coding Practice Problems Java Fundamentals Coding Practice Problems Java Methods Coding Practice Problems Java Arrays Coding Practice Problems Java Strings Coding Practice Problems Java OOPs Coding Practice Problems Java Sorting and Searching Algorithms Coding Practice Problems Java Collections Coding Practice Problems Java Stream & Lambda Expression Coding Practice Problems Java Quizzes and MCQs Java Language MCQs with Answers Important Java Projects Number Guessing Game Simple Banking Application Currency Converter Tic-Tac-Toe Game Snake Game Memory Game Chat Application Face Detection System Social Networking Site Text Editor Career & Jobs in Java 2025 Java opens doors to a wide range of tech careers across industries\u2014from enterprise software to mobile apps and cloud systems. Here\u2019s a list of top career options for professionals with Java expertise, along with their average salary ranges: Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum Java Developer \u20b9400,000 \u2013 \u20b91,200,000 $55,000 \u2013 $100,000 Full Stack Java Developer \u20b9700,000 \u2013 \u20b91,800,000 $75,000 \u2013 $130,000 Backend Engineer (Java) \u20b9800,000 \u2013 \u20b92,000,000 $80,000 \u2013 $140,000 Android Developer (Java/Kotlin) \u20b9500,000 \u2013 \u20b91,500,000 $60,000 \u2013 $110,000 Java Architect \u20b91,500,000 \u2013 \u20b93,000,000 $120,000 \u2013 $170,000 DevOps Engineer (Java projects) \u20b9900,000 \u2013 \u20b92,200,000 $90,000 \u2013 $150,000 Big Data Engineer (Java + Hadoop) \u20b91,000,000 \u2013 \u20b92,500,000 $100,000 \u2013 $160,000 Automation Test Engineer (Java + Selenium) \u20b9600,000 \u2013 \u20b91,400,000 $65,000 \u2013 $110,000 Software Engineer (Java Spring Boot) \u20b9700,000 \u2013 \u20b91,800,000 $75,000 \u2013 $130,000 Java Consultant / Technical Lead \u20b91,200,000 \u2013 \u20b92,800,000 $110,000 \u2013 $160,000 List of Companies Using Java These are some popular companies that use Java in thier workflow: Company Description Google Uses Java for Android development, backend services, and internal tools across products like Gmail and Google Drive. Amazon Java is widely used at Amazon for building scalable backend systems, AWS services, and e-commerce infrastructure. Netflix Java powers many of Netflix's backend microservices, helping deliver content to millions of users with high availability. Spotify Relies on Java for data processing, backend APIs, and scalable microservices that support music streaming. Airbnb Uses Java in its backend systems to handle listings, payments, and user interactions at scale. Uber Employs Java for real-time dispatch systems, geolocation services, and backend microservices. LinkedIn Java is a core language for building LinkedIn\u2019s backend architecture, handling data-intensive workloads and APIs.", "start_char_idx": 0, "end_char_idx": 4471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8d80ac6-4acd-4818-acce-22c7c4c367e7": {"__data__": {"id_": "d8d80ac6-4acd-4818-acce-22c7c4c367e7", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_3.txt", "file_name": "www.geeksforgeeks.org_1_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91e1bfb1-db50-4601-924e-bf96cb6152f9", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_3.txt", "file_name": "www.geeksforgeeks.org_1_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8d2c834426888014902bc9b352940be0be7db6cc3106700fb7fb8c6593a2e508", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "873e785f-2f49-4ec1-a3fb-5ca5ba7d8ebc", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_3.txt", "file_name": "www.geeksforgeeks.org_1_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "56a7c63d68eff6442e844fbfb4c517e2dfde38eb210a82f75371d49a8ac752ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2bad904-9837-4704-8a68-bac9ebb02cac", "node_type": "1", "metadata": {}, "hash": "457fb159e7231137ef48f91db8a36148ff7a55fc99fb9aa7250e53d296ad8375", "class_name": "RelatedNodeInfo"}}, "text": "Amazon Java is widely used at Amazon for building scalable backend systems, AWS services, and e-commerce infrastructure. Netflix Java powers many of Netflix's backend microservices, helping deliver content to millions of users with high availability. Spotify Relies on Java for data processing, backend APIs, and scalable microservices that support music streaming. Airbnb Uses Java in its backend systems to handle listings, payments, and user interactions at scale. Uber Employs Java for real-time dispatch systems, geolocation services, and backend microservices. LinkedIn Java is a core language for building LinkedIn\u2019s backend architecture, handling data-intensive workloads and APIs. eBay Uses Java for high-traffic applications, auction management, and payment services. NASA Implements Java in various projects, including simulations, data analysis tools, and mission-critical software. Intel Uses Java in embedded systems, performance testing tools, and internal applications across chip development Comment More info Campus Training Program Next Article Introduction to Java kartik Follow Improve Article Tags : Java Tutorials Practice Tags : Java Similar Reads Java IO Tutorial Java programming language comes with a variety of APIs that helps the developers to code more efficiently. One of those APIs is Java IO API. Java IO API helps the users to... 15+ min read Java AWT Tutorial Java AWT or Abstract Window Toolkit is an API used for developing GUI(Graphic User Interfaces) or Window-Based Applications in Java. Java AWT is part of the Java Foundatio... 15+ min read Maven Tutorial Maven is a powerful project management and build automation tool, widely used by Java developers. It uses a Project Object Model (POM) to centralize and handle", "start_char_idx": 3782, "end_char_idx": 5539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2bad904-9837-4704-8a68-bac9ebb02cac": {"__data__": {"id_": "e2bad904-9837-4704-8a68-bac9ebb02cac", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_4.txt", "file_name": "www.geeksforgeeks.org_1_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b7e5ac4-244a-4b79-a464-c644755820b3", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_4.txt", "file_name": "www.geeksforgeeks.org_1_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b2938f4a9dd208019bd8244235ad0eeabc7fb41927331874aa5c5c4cad0e96b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8d80ac6-4acd-4818-acce-22c7c4c367e7", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_3.txt", "file_name": "www.geeksforgeeks.org_1_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5dfdcaee0e00d0fb626a3fb02c71937f232f3e890c5acebaf4cc823123841298", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0d98376-9617-460e-9d5e-a67cdcf34349", "node_type": "1", "metadata": {}, "hash": "d80f585bc4c56781c888e69b5d2e5bb041b24f9e66fc5777878e7b14edf8d52d", "class_name": "RelatedNodeInfo"}}, "text": "a project's... 15+ min read Android Tutorial In this Android Tutorial, we cover both basic and advanced concepts. So whether you are a fresher (graduate) or an experienced candidate with several years of Android Deve... 15+ min read Java Variables In Java, variables are containers that store data in memory. Understanding variables plays a very important role as it defines how data is stored, accessed, and manipulate... 15+ min read Java Networking When computing devices such as laptops, desktops, servers, smartphones, and tablets and an eternally-expanding arrangement of IoT gadgets such as cameras, door locks, door... 15+ min read Julia vs. Java What is Java? Java is one of the most popular and widely used programming language and platform. A platform is an environment that helps to develop and run programs writte... 15+ min read Java Operators Java operators are special symbols that perform operations on variables or values. These operators are essential in programming as they allow you to manipulate data effici... 15+ min read Java URL Class URL class in Java is a part of java.net package that makes it easy to work with Uniform Resource Locators (URLs). URL is simply a string of text that identifies all the re... 15+ min read Java Syntax Java is an object-oriented programming language that is known for its simplicity, portability, and robustness. The syntax of Java programming language is very closely alig... 15+ min read Like 295k+ interested Geeks Java Programming Online Course [Complete Beginner to Advanced] Explore 166k+ interested Geeks C Programming Course Online - Learn C with Data Structures Explore 78k+ interested Geeks JavaScript Full Course Online | Learn JavaScript with Certification Explore We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences", "start_char_idx": 0, "end_char_idx": 2534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0d98376-9617-460e-9d5e-a67cdcf34349": {"__data__": {"id_": "f0d98376-9617-460e-9d5e-a67cdcf34349", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_0.txt", "file_name": "www.geeksforgeeks.org_43_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bab1c6b0-0506-419a-8653-3eccbcd317c8", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_0.txt", "file_name": "www.geeksforgeeks.org_43_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "84a5ed32a9d8c791f08e9c3fff4157e38ba31afa5087d1d7410ee0e354d7bce1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2bad904-9837-4704-8a68-bac9ebb02cac", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_4.txt", "file_name": "www.geeksforgeeks.org_1_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b2938f4a9dd208019bd8244235ad0eeabc7fb41927331874aa5c5c4cad0e96b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18067fe7-aeb6-4af2-b673-3ab1602bc3da", "node_type": "1", "metadata": {}, "hash": "530a666b03bef3e247e3fcf18ec6e471f32f94d1f2927be82f414ae702eed6cc", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorial | GeeksforGeeks Java Course Java Arrays Java Strings Java OOPs Java Collection Java 8 Tutorial Java Multithreading Java Exception Handling Java Programs Java Project Java Collections Interview Java Interview Questions Java MCQs Spring Spring MVC Spring Boot Hibernate Sign In \u25b2 Open In App Explore GfG Courses Share Your Experiences Java Tutorial Java Overview Introduction to Java The Complete History of Java Programming Language How to Install Java on Windows, Linux and macOS? Setting up Environment Variables For Java - Complete Guide to Set JAVA_HOME How JVM Works - JVM Architecture JDK in Java Differences Between JDK, JRE and JVM Java Basics Java Syntax Java Hello World Program Java Identifiers Java Keywords Java Data Types Java Variables Scope of Variables in Java Java Operators Java User Input - Scanner Class Java Flow Control Java if statement Java if-else Statement Java if-else-if ladder with Examples Java For Loop For-Each Loop in Java Java while Loop Java Do While Loop Java Break Statement Java Continue Statement Java return Keyword Java Methods Java Methods How to Call a Method in Java? Static Method vs Instance Method in Java Access Modifiers in Java Command Line Arguments in Java Variable Arguments (Varargs) in Java Java Arrays Arrays in Java How to Initialize an Array in Java? Java Multi-Dimensional Arrays Jagged Array in Java Arrays Class in Java Final Arrays in Java Java Strings Java Strings Why Java Strings are Immutable? Java String concat() Method with Examples String Class in Java StringBuffer Class in Java Java StringBuilder Class String vs StringBuilder vs StringBuffer in Java Java OOPs Concepts Java OOP(Object Oriented Programming) Concepts Classes and Objects in Java Java Constructors Object Class in Java Abstraction in Java Encapsulation in Java Inheritance in Java Polymorphism in Java Method Overloading in Java Overriding in Java Java Packages Java Interfaces Java Interface Interfaces and Inheritance in Java Java Class vs Interfaces Java Functional Interfaces Nested Interface in Java Marker Interface in Java Java Comparator Interface Java Collections Collections in Java Collections Class in Java Collection Interface in Java Java List Interface ArrayList in Java Vector Class in Java LinkedList in Java Stack Class in Java Set in Java Java HashSet TreeSet in Java Java LinkedHashSet Queue Interface In Java PriorityQueue in Java Deque Interface in Java Map Interface in Java HashMap in Java Java LinkedHashMap Hashtable in Java Java Dictionary Class SortedSet Interface in Java with Examples Java Comparator Interface Java Comparable Interface Java Comparable vs Comparator Java Iterator Java Exception Handling Java Exception Handling Java Checked vs Unchecked Exceptions Java Try Catch Block Java final, finally and finalize throw and throws in Java User-Defined Custom Exception in Java Chained Exceptions in Java Null Pointer Exception in Java Exception Handling with Method Overriding in Java Java Multithreading Java Multithreading Tutorial Java Threads Java Thread Class Java Runnable Interface Lifecycle and States of a Thread in Java Main thread in Java Java Thread Priority in Multithreading Java Naming a Thread and Fetching Name of Current Thread Java Thread.start() vs Thread.run() Method Java Thread.sleep() Method Java Daemon Thread Java Thread Safety and How to Achieve it? Thread Pools in Java Java File Handling File Handling in Java Java File Class Java Program to Create a New File Java Program to Write into a File Delete a File Using Java Java FileReader Class Java FileWriter Class Java FilePermission Class Java FileDescriptor Class Java Streams and Lambda Expressions Java Lambda Expressions Java Method References Java 8 Stream Tutorial Java 8 Features - Complete Tutorial Java IO Java IO - Input/Output in Java with Examples Java Reader Class Java Writer Class Java FileInputStream Class FileOutputStream in Java Ways to Read Input from Console in Java Java BufferedOutputStream Class Java BufferedReader vs Scanner Class Fast I/O in Java in Competitive Programming Java Synchronization Synchronization in Java Importance of Thread Synchronization in Java Java Method and Block Synchronization Java Atomic vs Volatile vs Synchronized Java Lock Framework vs Thread Synchronization Deadlock in Java Multithreading Deadlock Prevention And Avoidance Difference Between Lock and Monitor in Java Concurrency ReentrantLock in Java Java Regex Regular Expressions in Java Java Pattern pattern() Method Java Matcher pattern() Method java.lang.Character Class Methods | Set 1 Java Quantifiers Java Networking Java Networking TCP/IP Model User Datagram Protocol (UDP) Difference Between IPv4 and IPv6 Difference Between Connection-oriented and Connection-less Services Socket Programming in Java Java ServerSocket Class Java URL Class JDBC JDBC (Java Database Connectivity) JDBC Drivers Establishing JDBC Connection in Java Types of Statements in JDBC Java Memory Allocation Java Memory Management How are Java Objects Stored in Memory? Stack vs Heap Memory Allocation Java Virtual Machine (JVM) Stack Area How Many Types of Memory Areas are Allocated by JVM? Garbage Collection in Java JVM Garbage Collectors Stack vs Heap Memory Allocation Memory leaks in Java Java Interview Questions Java Interview", "start_char_idx": 0, "end_char_idx": 5291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18067fe7-aeb6-4af2-b673-3ab1602bc3da": {"__data__": {"id_": "18067fe7-aeb6-4af2-b673-3ab1602bc3da", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_1.txt", "file_name": "www.geeksforgeeks.org_43_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9430f43a-e0a0-4a62-b268-8930edd07c4c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_1.txt", "file_name": "www.geeksforgeeks.org_43_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "7b980fa70985da0998b5e341342e1247579c3216daad04dc4b859361ff0f701d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0d98376-9617-460e-9d5e-a67cdcf34349", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_0.txt", "file_name": "www.geeksforgeeks.org_43_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "84a5ed32a9d8c791f08e9c3fff4157e38ba31afa5087d1d7410ee0e354d7bce1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "458ed04a-e706-4cbc-8bb1-88f9ea565857", "node_type": "1", "metadata": {}, "hash": "33e94338bd2e26d4f9558180bf4a9ba6ab38ee3e8dee190771939b803adf05dd", "class_name": "RelatedNodeInfo"}}, "text": "Questions and Answers Java Multiple Choice Questions Java Practice Problems Java Programs - Java Programming Examples Java Exercises - Basic to Advanced Java Practice Programs with Solutions Java Quiz | Level Up Your Java Skills Java Projects Top 50 Java Project Ideas For Beginners and Advanced [Update 2025] Number Guessing Game in Java Mini Banking Application in Java Java Program to Convert Currency using AWT Tic-Tac-Toe Game in Java Design Snake Game Memory Game in Java How to Implement a Simple Chat Application Using Sockets in Java? Image Processing in Java - Face Detection Design Media Sharing Social Networking System Java Swing | Create a simple text editor Java Backend Development Course Java Tutorial Last Updated : 19 May, 2025 Comments Improve Suggest changes Like Article Like Report Java is a high-level, object-oriented programming language used to build web apps, mobile applications, and enterprise software systems. It is known for its Write Once, Run Anywhere capability, which means code written in Java can run on any device that supports the Java Virtual Machine (JVM). Java syntax and structure is similar to C-based languages like C++ and C#. Its robustness, platform-independent compatibility, and strong memory management have made it a go-to language for developers worldwide. This Java tutorial is designed for both beginners and experienced professionals and it covers basic to advanced Java topics. Why Learn Java? Java is used to build Android apps, desktop and web apps, enterprise backend systems, and cloud-based software. Java is in high demand with many job opportunities in software development. Java has popular frameworks like Spring and Hibernate which makes Java powerful for enterprise applications. Java supports object-oriented programming for clean and reusable code. It runs on all platforms Windows, Mac, and Linux using the JVM. Top companies like Amazon, Netflix, and LinkedIn use Java. Java Hello World Program Here is a simple Java program that prints \"Hello World\". Java // A Java program to print \"Hello World\" public class Geeks { public static void main ( String args [] ) { System . out . println ( \"Hello World\" ); } } Output Hello World Java Basics Java basics form the foundation of your programming journey, covering essential concepts like syntax, data types, variables, loops, and conditionals. Mastering these fundamentals is key to building strong, error-free Java applications: Introduction Download and Install Java JDK vs JRE vs JVM Identifiers Keywords Quiz : Java Basics and Identifiers Data Types Variables Operators Quiz : Variables , Operator Decision Making (if, if-else, switch, break, continue, jump) Loops Quiz : Control Statements and Loops Java Methods Java methods are reusable blocks of code that perform specific tasks and help organize your program. They improve code readability, reduce repetition, and make debugging easier: Introduction to Methods How to Call Methods? Static Methods vs Instance Methods Access Modifiers Command Line Arguments Variable Arguments (Varargs) Quiz : Methods Java Arrays Java arrays are containers that store multiple values of the same data type in a single variable. They provide an efficient way to manage and access collections of data using index-based positions: Introduction to Arrays Declare and Initialize Arrays Multi-Dimensional Arrays Quiz: Java Arrays Jagged Arrays Arrays Class Final Arrays Java Array Programs Quiz: Array Programs Java Strings Java Strings represent sequences of characters and are widely used in text processing. They are immutable, meaning once created, their values cannot be changed: Introduction of Strings Why Strings are Immutable? Java String Concatenation Quiz : String Basics String Class StringBuffer Class StringBuilder Class Quiz: String Classes Strings vs StringBuffer vs StringBuilder Java String Programs Java OOPs Concepts Java follows the Object-Oriented Programming (OOP) paradigm, which organizes code into classes and objects. Core OOP principles like inheritance, encapsulation, polymorphism, and abstraction make Java modular and scalable: What are OOPs Concepts? Classes and Objects Quiz: Classes and Objects Constructors Quiz : Constructors Object Class Abstraction Encapsulation Inheritance Quiz : Inheritance and Abstraction Polymorphism Compile-Time Polymorphism (Method Overloading) Runtime Polymorphism (Method Overriding) Packages Quiz : Polymorphism and Packages Java Interfaces Java interfaces define a contract that classes must follow, specifying method signatures without implementations. They enable abstraction and support multiple inheritance in Java through a clean, structured approach: Java Interfaces Interfaces and Inheritance Class vs Interface Quiz: Interfaces Functional Interface Nested Interface Marker Interface Comparator Interface Quiz : Interface types and Comparator Java Collections Java Collections provide a framework for storing and manipulating groups of objects efficiently. It includes interfaces like List, Set, and Map, along with classes like ArrayList, HashSet, and HashMap: Java Collection Framework Collections Class Collection Interface Quiz: Collection Framework List Interface Quiz : List Interface ArrayList Class Quiz: ArrayList Vector Class Quiz : Vector LinkedList Class Quiz : LinkedList Stack Class Set Interface HashSet Class Quiz: Set and HashSet TreeSet Class LinkedHashSet Class Queue Interface Priority Queue Class Deque Interface Map", "start_char_idx": 0, "end_char_idx": 5469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "458ed04a-e706-4cbc-8bb1-88f9ea565857": {"__data__": {"id_": "458ed04a-e706-4cbc-8bb1-88f9ea565857", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_2.txt", "file_name": "www.geeksforgeeks.org_43_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1fc5a210-9693-412f-b1a9-19ced93c0de8", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_2.txt", "file_name": "www.geeksforgeeks.org_43_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "37cb4e988acd9b09222bcfa345dbaccde61c11d213a8f4756db28c4a1b12935f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18067fe7-aeb6-4af2-b673-3ab1602bc3da", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_1.txt", "file_name": "www.geeksforgeeks.org_43_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "7b980fa70985da0998b5e341342e1247579c3216daad04dc4b859361ff0f701d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc0c8bac-600d-4e93-b3c4-dc21bcdc3fc3", "node_type": "1", "metadata": {}, "hash": "20e4d2185571b8e788b8b977662a485131254f9bc383dc7c6c73a190b704fbf4", "class_name": "RelatedNodeInfo"}}, "text": "Interface HashMap Class LinkedHashMap Class Quiz: Queue and Map Interface HashTable Class Quiz : Hashtable Dictionary SortedSet Interface Comparator Interface Comparable Interface Comparator vs Comparable Quiz : Comparator vs Comparable Iterator Quiz: Iterators Java Exception Handling ava Exception Handling is a mechanism to handle runtime errors, ensuring the program runs smoothly without crashing. It uses keywords like try, catch, throw, throws, and finally to manage exceptions: Java Exceptions Checked vs Unchecked Exceptions Try Catch Block Quiz: Java Exceptions Final, Finally and Finalize Throw and Throws Customized Exception Handling Chained Exceptions Null Pointer Exceptions Exception Handling with Method Overriding Quiz : Exception Handling Java Multithreading Java Multithreading allows concurrent execution of two or more threads, enabling efficient CPU utilization and faster program performance. It is commonly used for tasks like parallel processing and responsive applications: Introduction to Java Multithreading Threads Thread Class Runnable Interface Quiz: Thread Basics and Lifecycle Lifecycle and States of a Thread Main Thread Thread Priority in Multithreading Naming & Feteching Name of Current Thread Thread.start() vs Thread.run() Method Thread.sleep() Method Daemon Thread Quiz : Thread Methods and Daemon Threads Thread Safety Thread Pools Java File Handling Java File Handling enables programs to create, read, write, and manipulate files stored on the system. It uses classes from the java.io and java.nio packages for efficient file operations: File Handling File Class Create Files Read Files Quiz: File Handling Write on Files Delete File FileReader Class FileWriter Class Quiz: File Writing FilePermission Class FileDescriptor Class Java Streams and Lambda Expressions Java Streams and Lambda Expressions simplify data processing by enabling functional-style operations on collections. Lambdas provide concise syntax for anonymous functions, while Streams allow efficient filtering, mapping, and reduction of data: Lambda Expressions Method References Java Stream - Complete Tutorial Quiz: Lambda Expressions and Streams Java 8 Features - Complete Tutorial Java IO Java IO (Input/Output) provides a set of classes and streams to read and write data from various sources like files, consoles, and network connections. It is part of the java.io package and supports both byte and character streams: Introduction to Java IO Reader Class Writer Class FileInput Stream Quiz : IO Basics FileOutput Stream BufferedReader Input Stream BufferedReader Output stream BufferedReader vs Scanner Fast I/O Quiz : BufferedReader vs Scanner and Fast I/O Java Synchronization Java Synchronization is used to control access to shared resources in multithreaded environments. It ensures that only one thread can access a critical section at a time, preventing data inconsistency: Java Synchronization Importance of Thread Synchronization Method and Block Synchronization Quiz : Synchronization Basics Atomic vs Volatile vs Synchronized Local Frameworks vs Thread Synchronization Deadlock in Multithreading Quiz : Deadlocks and Synchronization Deadlock Prevention and Avoidance Lock vs Monitor in Concurrency Reentrant Lock Quiz : Concurrency Locks and Reentrant Locks Java Regex Java Regex (Regular Expressions) allows pattern matching and text manipulation using the java.util.regex package. It is powerful for validating, searching, and replacing strings based on specific patterns: What is Java Regex? Pattern Class Matcher Class Character Class Quiz : Regex Basics and Pattern Matching Quantifiers Java Networking Java Networking enables communication between devices over a network using classes from the java.net package. It supports protocols like TCP and UDP for building client-server applications and data exchange: Introduction to Java Networking TCP Architecture UDP Architecture IPV4 vs IPV6 Quiz : Networking Basics and Protocols Connection-Oriented vs Connectionless Protocols Socket Programming Server Socket Class Quiz: Sockets and Server Communication URL Class and Methods Java Database Connectivity(JDBC) Introduction to Java JDBC JDBC Driver JDBC Connection Types of Statements in JDBC Quiz : JDBC Java Memory Allocation Java Memory Allocation refers to how memory is assigned to variables, objects, and classes during program execution. It involves stack and heap memory, with the JVM managing allocation and garbage collection automatically: Java Memory Management How Java Objects Stored in Memory? Quiz : Java Memory Allocation Stack vs Heap Memory Allocation Quiz : Heap vs Stack Java Virtual Machine(JVM) Stack Area Types of Memory Areas Allocated by JVM Garbage Collection Quiz: JVM Memory Management and Garbage Collection Types of JVM Garbage Collectors Heap and Stack Memory Allocation Memory Leaks Java Interview Questions Prepare for Java interviews with these commonly asked questions, covering core concepts, OOP, collections, multithreading, exception handling, and frameworks like Spring and Hibernate: 200+ Core Java Interview Questions and Answers Java MCQ Best Approach to Learn Java Here\u2019s the step-by-step approach to learn and master Java efficiently and effectively: 1. Understand Java Fundamentals: Start with the basics: what Java is, how it works (JVM, JRE, JDK), and why it\u2019s platform-independent. Learn about Java\u2019s role in building desktop, web, and mobile applications. 2. Set Up the Java Environment: Install the latest JDK and configure your development environment. Use a beginner-friendly IDE like IntelliJ IDEA, Eclipse, or VS Code for writing and testing your code. 3. Learn", "start_char_idx": 0, "end_char_idx": 5651, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc0c8bac-600d-4e93-b3c4-dc21bcdc3fc3": {"__data__": {"id_": "cc0c8bac-600d-4e93-b3c4-dc21bcdc3fc3", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_3.txt", "file_name": "www.geeksforgeeks.org_43_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b85d16c-db0d-43a6-a9d4-ce16899d04ac", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_3.txt", "file_name": "www.geeksforgeeks.org_43_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "671a7cc0231fafb93e08efb73ccd6505790adc8a7d9a2e65bb3a6335a440c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "458ed04a-e706-4cbc-8bb1-88f9ea565857", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_2.txt", "file_name": "www.geeksforgeeks.org_43_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "37cb4e988acd9b09222bcfa345dbaccde61c11d213a8f4756db28c4a1b12935f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31cfc903-3ba7-493e-9b49-a738d55fbfb7", "node_type": "1", "metadata": {}, "hash": "2a74d0789f841ff8518361b37da3f4471f66132dbd35328a775ba7440a536675", "class_name": "RelatedNodeInfo"}}, "text": "Core Java Concepts: Focus on essential topics like variables, data types, operators, control structures (if-else, switch, loops), and input/output. Practice writing simple programs to strengthen your understanding. 4. Master Object-Oriented Programming (OOP): Dive into the pillars of OOP\u2014classes, objects, inheritance, polymorphism, encapsulation, and abstraction. Understand how Java handles these concepts and how to apply them effectively in real projects. 5. Explore Collections and Data Structures: Learn about Java's Collection Framework\u2014ArrayList, HashMap, Set, LinkedList, and more. Understand how to use them and when to choose one over the other. 6. Work with Exception Handling: Understand the importance of error handling in Java using try-catch blocks, finally, throw, and custom exceptions. Learn best practices for writing clean, safe code. 7. Get Comfortable with File I/O: Learn how Java reads from and writes to files using File , FileReader , BufferedReader , FileWriter , and Streams . Practice creating programs that manage and manipulate file data. 8. Understand Multithreading and Concurrency: Grasp the basics of threads, synchronization, and concurrent programming. Learn how Java handles multiple tasks simultaneously using the Thread class and ExecutorService . 9. Learn Java Libraries and APIs: Familiarize yourself with essential APIs like Java Math, Date & Time (java.time), and String manipulation. Explore popular libraries like Apache Commons, Gson, or Jackson for real-world development. 10. Build Real-World Projects: Apply your knowledge by building console apps, file management systems, or basic desktop GUIs using JavaFX or Swing. Gradually move into web development with Java Servlets, JSP, or Spring Boot. Java Program Examples Java Programming Examples Java Exercises \u2013 Basic to Advanced Java Practice Programs Java Coding Practice Problems Java Fundamentals Coding Practice Problems Java Methods Coding Practice Problems Java Arrays Coding Practice Problems Java Strings Coding Practice Problems Java OOPs Coding Practice Problems Java Sorting and Searching Algorithms Coding Practice Problems Java Collections Coding Practice Problems Java Stream & Lambda Expression Coding Practice Problems Java Quizzes and MCQs Java Language MCQs with Answers Important Java Projects Number Guessing Game Simple Banking Application Currency Converter Tic-Tac-Toe Game Snake Game Memory Game Chat Application Face Detection System Social Networking Site Text Editor Career & Jobs in Java 2025 Java opens doors to a wide range of tech careers across industries\u2014from enterprise software to mobile apps and cloud systems. Here\u2019s a list of top career options for professionals with Java expertise, along with their average salary ranges: Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum Java Developer \u20b9400,000 \u2013 \u20b91,200,000 $55,000 \u2013 $100,000 Full Stack Java Developer \u20b9700,000 \u2013 \u20b91,800,000 $75,000 \u2013 $130,000 Backend Engineer (Java) \u20b9800,000 \u2013 \u20b92,000,000 $80,000 \u2013 $140,000 Android Developer (Java/Kotlin) \u20b9500,000 \u2013 \u20b91,500,000 $60,000 \u2013 $110,000 Java Architect \u20b91,500,000 \u2013 \u20b93,000,000 $120,000 \u2013 $170,000 DevOps Engineer (Java projects) \u20b9900,000 \u2013 \u20b92,200,000 $90,000 \u2013 $150,000 Big Data Engineer (Java + Hadoop) \u20b91,000,000 \u2013 \u20b92,500,000 $100,000 \u2013 $160,000 Automation Test Engineer (Java + Selenium) \u20b9600,000 \u2013 \u20b91,400,000 $65,000 \u2013 $110,000 Software Engineer (Java Spring Boot) \u20b9700,000 \u2013 \u20b91,800,000 $75,000 \u2013 $130,000 Java Consultant / Technical Lead \u20b91,200,000 \u2013 \u20b92,800,000 $110,000 \u2013 $160,000 List of Companies Using Java These are some popular companies that use Java in thier workflow: Company Description Google Uses Java for Android development, backend services, and internal tools across products like Gmail and Google Drive. Amazon Java is widely used at Amazon for building scalable backend systems, AWS services, and e-commerce infrastructure. Netflix Java powers many of Netflix's backend microservices, helping deliver content to millions of users with high availability. Spotify Relies on Java for data processing, backend APIs, and scalable microservices that support music streaming. Airbnb Uses Java in its backend systems to handle listings, payments, and user interactions at scale. Uber Employs Java for real-time dispatch systems, geolocation services, and backend microservices. LinkedIn Java is a core language for building LinkedIn\u2019s backend architecture, handling data-intensive workloads and APIs.", "start_char_idx": 0, "end_char_idx": 4471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31cfc903-3ba7-493e-9b49-a738d55fbfb7": {"__data__": {"id_": "31cfc903-3ba7-493e-9b49-a738d55fbfb7", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_3.txt", "file_name": "www.geeksforgeeks.org_43_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b85d16c-db0d-43a6-a9d4-ce16899d04ac", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_3.txt", "file_name": "www.geeksforgeeks.org_43_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "671a7cc0231fafb93e08efb73ccd6505790adc8a7d9a2e65bb3a6335a440c20c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc0c8bac-600d-4e93-b3c4-dc21bcdc3fc3", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_3.txt", "file_name": "www.geeksforgeeks.org_43_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2f5828fc462754cd076a9ee8a612b85a537f4a2850ce1af7eaaf21948e62e743", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d1ae717-5a78-473c-8505-a0bf92275f7d", "node_type": "1", "metadata": {}, "hash": "457fb159e7231137ef48f91db8a36148ff7a55fc99fb9aa7250e53d296ad8375", "class_name": "RelatedNodeInfo"}}, "text": "Amazon Java is widely used at Amazon for building scalable backend systems, AWS services, and e-commerce infrastructure. Netflix Java powers many of Netflix's backend microservices, helping deliver content to millions of users with high availability. Spotify Relies on Java for data processing, backend APIs, and scalable microservices that support music streaming. Airbnb Uses Java in its backend systems to handle listings, payments, and user interactions at scale. Uber Employs Java for real-time dispatch systems, geolocation services, and backend microservices. LinkedIn Java is a core language for building LinkedIn\u2019s backend architecture, handling data-intensive workloads and APIs. eBay Uses Java for high-traffic applications, auction management, and payment services. NASA Implements Java in various projects, including simulations, data analysis tools, and mission-critical software. Intel Uses Java in embedded systems, performance testing tools, and internal applications across chip development Comment More info Campus Training Program Next Article Introduction to Java kartik Follow Improve Article Tags : Java Tutorials Practice Tags : Java Similar Reads Java IO Tutorial Java programming language comes with a variety of APIs that helps the developers to code more efficiently. One of those APIs is Java IO API. Java IO API helps the users to... 15+ min read Java AWT Tutorial Java AWT or Abstract Window Toolkit is an API used for developing GUI(Graphic User Interfaces) or Window-Based Applications in Java. Java AWT is part of the Java Foundatio... 15+ min read Maven Tutorial Maven is a powerful project management and build automation tool, widely used by Java developers. It uses a Project Object Model (POM) to centralize and handle", "start_char_idx": 3782, "end_char_idx": 5539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d1ae717-5a78-473c-8505-a0bf92275f7d": {"__data__": {"id_": "4d1ae717-5a78-473c-8505-a0bf92275f7d", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_4.txt", "file_name": "www.geeksforgeeks.org_43_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64cba4a5-9304-4010-aa7e-f0f653c6d862", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_4.txt", "file_name": "www.geeksforgeeks.org_43_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "348faf413f1c76f90dd84c39d19fbc99017ad86bc4b70e6cf17d5ed41e8fd71b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "31cfc903-3ba7-493e-9b49-a738d55fbfb7", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_3.txt", "file_name": "www.geeksforgeeks.org_43_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "ca6fadcd406234f40f9f4f16639f7f297613f313dd2cf9dcc58e157299c0011f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65091d16-57ff-4a16-9c47-c3f9c6e31b6f", "node_type": "1", "metadata": {}, "hash": "d80f585bc4c56781c888e69b5d2e5bb041b24f9e66fc5777878e7b14edf8d52d", "class_name": "RelatedNodeInfo"}}, "text": "a project's... 15+ min read Android Tutorial In this Android Tutorial, we cover both basic and advanced concepts. So whether you are a fresher (graduate) or an experienced candidate with several years of Android Deve... 15+ min read Java Variables In Java, variables are containers that store data in memory. Understanding variables plays a very important role as it defines how data is stored, accessed, and manipulate... 15+ min read Java Networking When computing devices such as laptops, desktops, servers, smartphones, and tablets and an eternally-expanding arrangement of IoT gadgets such as cameras, door locks, door... 15+ min read Julia vs. Java What is Java? Java is one of the most popular and widely used programming language and platform. A platform is an environment that helps to develop and run programs writte... 15+ min read Java Operators Java operators are special symbols that perform operations on variables or values. These operators are essential in programming as they allow you to manipulate data effici... 15+ min read Java URL Class URL class in Java is a part of java.net package that makes it easy to work with Uniform Resource Locators (URLs). URL is simply a string of text that identifies all the re... 15+ min read Java Syntax Java is an object-oriented programming language that is known for its simplicity, portability, and robustness. The syntax of Java programming language is very closely alig... 15+ min read Like 295k+ interested Geeks Java Programming Online Course [Complete Beginner to Advanced] Explore 166k+ interested Geeks C Programming Course Online - Learn C with Data Structures Explore 78k+ interested Geeks JavaScript Full Course Online | Learn JavaScript with Certification Explore We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences", "start_char_idx": 0, "end_char_idx": 2534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65091d16-57ff-4a16-9c47-c3f9c6e31b6f": {"__data__": {"id_": "65091d16-57ff-4a16-9c47-c3f9c6e31b6f", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_0.txt", "file_name": "www.geeksforgeeks.org_6_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d8fd11b-99b8-4d37-9a1f-71bce3fdae97", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_0.txt", "file_name": "www.geeksforgeeks.org_6_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "df787ea372b6751071528c4e57ec6f23cd8bc301fe192793503a0243fd83a862", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d1ae717-5a78-473c-8505-a0bf92275f7d", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_4.txt", "file_name": "www.geeksforgeeks.org_43_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "348faf413f1c76f90dd84c39d19fbc99017ad86bc4b70e6cf17d5ed41e8fd71b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b9a7fa6-c566-411b-b821-4e09f6dc3b10", "node_type": "1", "metadata": {}, "hash": "530a666b03bef3e247e3fcf18ec6e471f32f94d1f2927be82f414ae702eed6cc", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorial | GeeksforGeeks Java Course Java Arrays Java Strings Java OOPs Java Collection Java 8 Tutorial Java Multithreading Java Exception Handling Java Programs Java Project Java Collections Interview Java Interview Questions Java MCQs Spring Spring MVC Spring Boot Hibernate Sign In \u25b2 Open In App Explore GfG Courses Share Your Experiences Java Tutorial Java Overview Introduction to Java The Complete History of Java Programming Language How to Install Java on Windows, Linux and macOS? Setting up Environment Variables For Java - Complete Guide to Set JAVA_HOME How JVM Works - JVM Architecture JDK in Java Differences Between JDK, JRE and JVM Java Basics Java Syntax Java Hello World Program Java Identifiers Java Keywords Java Data Types Java Variables Scope of Variables in Java Java Operators Java User Input - Scanner Class Java Flow Control Java if statement Java if-else Statement Java if-else-if ladder with Examples Java For Loop For-Each Loop in Java Java while Loop Java Do While Loop Java Break Statement Java Continue Statement Java return Keyword Java Methods Java Methods How to Call a Method in Java? Static Method vs Instance Method in Java Access Modifiers in Java Command Line Arguments in Java Variable Arguments (Varargs) in Java Java Arrays Arrays in Java How to Initialize an Array in Java? Java Multi-Dimensional Arrays Jagged Array in Java Arrays Class in Java Final Arrays in Java Java Strings Java Strings Why Java Strings are Immutable? Java String concat() Method with Examples String Class in Java StringBuffer Class in Java Java StringBuilder Class String vs StringBuilder vs StringBuffer in Java Java OOPs Concepts Java OOP(Object Oriented Programming) Concepts Classes and Objects in Java Java Constructors Object Class in Java Abstraction in Java Encapsulation in Java Inheritance in Java Polymorphism in Java Method Overloading in Java Overriding in Java Java Packages Java Interfaces Java Interface Interfaces and Inheritance in Java Java Class vs Interfaces Java Functional Interfaces Nested Interface in Java Marker Interface in Java Java Comparator Interface Java Collections Collections in Java Collections Class in Java Collection Interface in Java Java List Interface ArrayList in Java Vector Class in Java LinkedList in Java Stack Class in Java Set in Java Java HashSet TreeSet in Java Java LinkedHashSet Queue Interface In Java PriorityQueue in Java Deque Interface in Java Map Interface in Java HashMap in Java Java LinkedHashMap Hashtable in Java Java Dictionary Class SortedSet Interface in Java with Examples Java Comparator Interface Java Comparable Interface Java Comparable vs Comparator Java Iterator Java Exception Handling Java Exception Handling Java Checked vs Unchecked Exceptions Java Try Catch Block Java final, finally and finalize throw and throws in Java User-Defined Custom Exception in Java Chained Exceptions in Java Null Pointer Exception in Java Exception Handling with Method Overriding in Java Java Multithreading Java Multithreading Tutorial Java Threads Java Thread Class Java Runnable Interface Lifecycle and States of a Thread in Java Main thread in Java Java Thread Priority in Multithreading Java Naming a Thread and Fetching Name of Current Thread Java Thread.start() vs Thread.run() Method Java Thread.sleep() Method Java Daemon Thread Java Thread Safety and How to Achieve it? Thread Pools in Java Java File Handling File Handling in Java Java File Class Java Program to Create a New File Java Program to Write into a File Delete a File Using Java Java FileReader Class Java FileWriter Class Java FilePermission Class Java FileDescriptor Class Java Streams and Lambda Expressions Java Lambda Expressions Java Method References Java 8 Stream Tutorial Java 8 Features - Complete Tutorial Java IO Java IO - Input/Output in Java with Examples Java Reader Class Java Writer Class Java FileInputStream Class FileOutputStream in Java Ways to Read Input from Console in Java Java BufferedOutputStream Class Java BufferedReader vs Scanner Class Fast I/O in Java in Competitive Programming Java Synchronization Synchronization in Java Importance of Thread Synchronization in Java Java Method and Block Synchronization Java Atomic vs Volatile vs Synchronized Java Lock Framework vs Thread Synchronization Deadlock in Java Multithreading Deadlock Prevention And Avoidance Difference Between Lock and Monitor in Java Concurrency ReentrantLock in Java Java Regex Regular Expressions in Java Java Pattern pattern() Method Java Matcher pattern() Method java.lang.Character Class Methods | Set 1 Java Quantifiers Java Networking Java Networking TCP/IP Model User Datagram Protocol (UDP) Difference Between IPv4 and IPv6 Difference Between Connection-oriented and Connection-less Services Socket Programming in Java Java ServerSocket Class Java URL Class JDBC JDBC (Java Database Connectivity) JDBC Drivers Establishing JDBC Connection in Java Types of Statements in JDBC Java Memory Allocation Java Memory Management How are Java Objects Stored in Memory? Stack vs Heap Memory Allocation Java Virtual Machine (JVM) Stack Area How Many Types of Memory Areas are Allocated by JVM? Garbage Collection in Java JVM Garbage Collectors Stack vs Heap Memory Allocation Memory leaks in Java Java Interview Questions Java Interview", "start_char_idx": 0, "end_char_idx": 5291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b9a7fa6-c566-411b-b821-4e09f6dc3b10": {"__data__": {"id_": "1b9a7fa6-c566-411b-b821-4e09f6dc3b10", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_1.txt", "file_name": "www.geeksforgeeks.org_6_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e5c3d456-590f-4330-a5d5-fed57d79ff36", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_1.txt", "file_name": "www.geeksforgeeks.org_6_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f1974f8138f843becd8d3bef6bfd3f07bdac670bc0898e07008545a283da8f11", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65091d16-57ff-4a16-9c47-c3f9c6e31b6f", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_0.txt", "file_name": "www.geeksforgeeks.org_6_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "df787ea372b6751071528c4e57ec6f23cd8bc301fe192793503a0243fd83a862", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7564dfba-b477-4580-94a2-4b63cbc938ad", "node_type": "1", "metadata": {}, "hash": "33e94338bd2e26d4f9558180bf4a9ba6ab38ee3e8dee190771939b803adf05dd", "class_name": "RelatedNodeInfo"}}, "text": "Questions and Answers Java Multiple Choice Questions Java Practice Problems Java Programs - Java Programming Examples Java Exercises - Basic to Advanced Java Practice Programs with Solutions Java Quiz | Level Up Your Java Skills Java Projects Top 50 Java Project Ideas For Beginners and Advanced [Update 2025] Number Guessing Game in Java Mini Banking Application in Java Java Program to Convert Currency using AWT Tic-Tac-Toe Game in Java Design Snake Game Memory Game in Java How to Implement a Simple Chat Application Using Sockets in Java? Image Processing in Java - Face Detection Design Media Sharing Social Networking System Java Swing | Create a simple text editor Java Backend Development Course Java Tutorial Last Updated : 19 May, 2025 Comments Improve Suggest changes Like Article Like Report Java is a high-level, object-oriented programming language used to build web apps, mobile applications, and enterprise software systems. It is known for its Write Once, Run Anywhere capability, which means code written in Java can run on any device that supports the Java Virtual Machine (JVM). Java syntax and structure is similar to C-based languages like C++ and C#. Its robustness, platform-independent compatibility, and strong memory management have made it a go-to language for developers worldwide. This Java tutorial is designed for both beginners and experienced professionals and it covers basic to advanced Java topics. Why Learn Java? Java is used to build Android apps, desktop and web apps, enterprise backend systems, and cloud-based software. Java is in high demand with many job opportunities in software development. Java has popular frameworks like Spring and Hibernate which makes Java powerful for enterprise applications. Java supports object-oriented programming for clean and reusable code. It runs on all platforms Windows, Mac, and Linux using the JVM. Top companies like Amazon, Netflix, and LinkedIn use Java. Java Hello World Program Here is a simple Java program that prints \"Hello World\". Java // A Java program to print \"Hello World\" public class Geeks { public static void main ( String args [] ) { System . out . println ( \"Hello World\" ); } } Output Hello World Java Basics Java basics form the foundation of your programming journey, covering essential concepts like syntax, data types, variables, loops, and conditionals. Mastering these fundamentals is key to building strong, error-free Java applications: Introduction Download and Install Java JDK vs JRE vs JVM Identifiers Keywords Quiz : Java Basics and Identifiers Data Types Variables Operators Quiz : Variables , Operator Decision Making (if, if-else, switch, break, continue, jump) Loops Quiz : Control Statements and Loops Java Methods Java methods are reusable blocks of code that perform specific tasks and help organize your program. They improve code readability, reduce repetition, and make debugging easier: Introduction to Methods How to Call Methods? Static Methods vs Instance Methods Access Modifiers Command Line Arguments Variable Arguments (Varargs) Quiz : Methods Java Arrays Java arrays are containers that store multiple values of the same data type in a single variable. They provide an efficient way to manage and access collections of data using index-based positions: Introduction to Arrays Declare and Initialize Arrays Multi-Dimensional Arrays Quiz: Java Arrays Jagged Arrays Arrays Class Final Arrays Java Array Programs Quiz: Array Programs Java Strings Java Strings represent sequences of characters and are widely used in text processing. They are immutable, meaning once created, their values cannot be changed: Introduction of Strings Why Strings are Immutable? Java String Concatenation Quiz : String Basics String Class StringBuffer Class StringBuilder Class Quiz: String Classes Strings vs StringBuffer vs StringBuilder Java String Programs Java OOPs Concepts Java follows the Object-Oriented Programming (OOP) paradigm, which organizes code into classes and objects. Core OOP principles like inheritance, encapsulation, polymorphism, and abstraction make Java modular and scalable: What are OOPs Concepts? Classes and Objects Quiz: Classes and Objects Constructors Quiz : Constructors Object Class Abstraction Encapsulation Inheritance Quiz : Inheritance and Abstraction Polymorphism Compile-Time Polymorphism (Method Overloading) Runtime Polymorphism (Method Overriding) Packages Quiz : Polymorphism and Packages Java Interfaces Java interfaces define a contract that classes must follow, specifying method signatures without implementations. They enable abstraction and support multiple inheritance in Java through a clean, structured approach: Java Interfaces Interfaces and Inheritance Class vs Interface Quiz: Interfaces Functional Interface Nested Interface Marker Interface Comparator Interface Quiz : Interface types and Comparator Java Collections Java Collections provide a framework for storing and manipulating groups of objects efficiently. It includes interfaces like List, Set, and Map, along with classes like ArrayList, HashSet, and HashMap: Java Collection Framework Collections Class Collection Interface Quiz: Collection Framework List Interface Quiz : List Interface ArrayList Class Quiz: ArrayList Vector Class Quiz : Vector LinkedList Class Quiz : LinkedList Stack Class Set Interface HashSet Class Quiz: Set and HashSet TreeSet Class LinkedHashSet Class Queue Interface Priority Queue Class Deque Interface Map", "start_char_idx": 0, "end_char_idx": 5469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7564dfba-b477-4580-94a2-4b63cbc938ad": {"__data__": {"id_": "7564dfba-b477-4580-94a2-4b63cbc938ad", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_2.txt", "file_name": "www.geeksforgeeks.org_6_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2c2e657-f85d-4e94-9c73-a6e4b96b3021", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_2.txt", "file_name": "www.geeksforgeeks.org_6_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "48e46c7794cf308834b9e076d37f1f809f6ce127b1c6b6063786a80959bd2746", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b9a7fa6-c566-411b-b821-4e09f6dc3b10", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_1.txt", "file_name": "www.geeksforgeeks.org_6_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "f1974f8138f843becd8d3bef6bfd3f07bdac670bc0898e07008545a283da8f11", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4b98639-4778-495a-88d8-a2f4cb0059f1", "node_type": "1", "metadata": {}, "hash": "20e4d2185571b8e788b8b977662a485131254f9bc383dc7c6c73a190b704fbf4", "class_name": "RelatedNodeInfo"}}, "text": "Interface HashMap Class LinkedHashMap Class Quiz: Queue and Map Interface HashTable Class Quiz : Hashtable Dictionary SortedSet Interface Comparator Interface Comparable Interface Comparator vs Comparable Quiz : Comparator vs Comparable Iterator Quiz: Iterators Java Exception Handling ava Exception Handling is a mechanism to handle runtime errors, ensuring the program runs smoothly without crashing. It uses keywords like try, catch, throw, throws, and finally to manage exceptions: Java Exceptions Checked vs Unchecked Exceptions Try Catch Block Quiz: Java Exceptions Final, Finally and Finalize Throw and Throws Customized Exception Handling Chained Exceptions Null Pointer Exceptions Exception Handling with Method Overriding Quiz : Exception Handling Java Multithreading Java Multithreading allows concurrent execution of two or more threads, enabling efficient CPU utilization and faster program performance. It is commonly used for tasks like parallel processing and responsive applications: Introduction to Java Multithreading Threads Thread Class Runnable Interface Quiz: Thread Basics and Lifecycle Lifecycle and States of a Thread Main Thread Thread Priority in Multithreading Naming & Feteching Name of Current Thread Thread.start() vs Thread.run() Method Thread.sleep() Method Daemon Thread Quiz : Thread Methods and Daemon Threads Thread Safety Thread Pools Java File Handling Java File Handling enables programs to create, read, write, and manipulate files stored on the system. It uses classes from the java.io and java.nio packages for efficient file operations: File Handling File Class Create Files Read Files Quiz: File Handling Write on Files Delete File FileReader Class FileWriter Class Quiz: File Writing FilePermission Class FileDescriptor Class Java Streams and Lambda Expressions Java Streams and Lambda Expressions simplify data processing by enabling functional-style operations on collections. Lambdas provide concise syntax for anonymous functions, while Streams allow efficient filtering, mapping, and reduction of data: Lambda Expressions Method References Java Stream - Complete Tutorial Quiz: Lambda Expressions and Streams Java 8 Features - Complete Tutorial Java IO Java IO (Input/Output) provides a set of classes and streams to read and write data from various sources like files, consoles, and network connections. It is part of the java.io package and supports both byte and character streams: Introduction to Java IO Reader Class Writer Class FileInput Stream Quiz : IO Basics FileOutput Stream BufferedReader Input Stream BufferedReader Output stream BufferedReader vs Scanner Fast I/O Quiz : BufferedReader vs Scanner and Fast I/O Java Synchronization Java Synchronization is used to control access to shared resources in multithreaded environments. It ensures that only one thread can access a critical section at a time, preventing data inconsistency: Java Synchronization Importance of Thread Synchronization Method and Block Synchronization Quiz : Synchronization Basics Atomic vs Volatile vs Synchronized Local Frameworks vs Thread Synchronization Deadlock in Multithreading Quiz : Deadlocks and Synchronization Deadlock Prevention and Avoidance Lock vs Monitor in Concurrency Reentrant Lock Quiz : Concurrency Locks and Reentrant Locks Java Regex Java Regex (Regular Expressions) allows pattern matching and text manipulation using the java.util.regex package. It is powerful for validating, searching, and replacing strings based on specific patterns: What is Java Regex? Pattern Class Matcher Class Character Class Quiz : Regex Basics and Pattern Matching Quantifiers Java Networking Java Networking enables communication between devices over a network using classes from the java.net package. It supports protocols like TCP and UDP for building client-server applications and data exchange: Introduction to Java Networking TCP Architecture UDP Architecture IPV4 vs IPV6 Quiz : Networking Basics and Protocols Connection-Oriented vs Connectionless Protocols Socket Programming Server Socket Class Quiz: Sockets and Server Communication URL Class and Methods Java Database Connectivity(JDBC) Introduction to Java JDBC JDBC Driver JDBC Connection Types of Statements in JDBC Quiz : JDBC Java Memory Allocation Java Memory Allocation refers to how memory is assigned to variables, objects, and classes during program execution. It involves stack and heap memory, with the JVM managing allocation and garbage collection automatically: Java Memory Management How Java Objects Stored in Memory? Quiz : Java Memory Allocation Stack vs Heap Memory Allocation Quiz : Heap vs Stack Java Virtual Machine(JVM) Stack Area Types of Memory Areas Allocated by JVM Garbage Collection Quiz: JVM Memory Management and Garbage Collection Types of JVM Garbage Collectors Heap and Stack Memory Allocation Memory Leaks Java Interview Questions Prepare for Java interviews with these commonly asked questions, covering core concepts, OOP, collections, multithreading, exception handling, and frameworks like Spring and Hibernate: 200+ Core Java Interview Questions and Answers Java MCQ Best Approach to Learn Java Here\u2019s the step-by-step approach to learn and master Java efficiently and effectively: 1. Understand Java Fundamentals: Start with the basics: what Java is, how it works (JVM, JRE, JDK), and why it\u2019s platform-independent. Learn about Java\u2019s role in building desktop, web, and mobile applications. 2. Set Up the Java Environment: Install the latest JDK and configure your development environment. Use a beginner-friendly IDE like IntelliJ IDEA, Eclipse, or VS Code for writing and testing your code. 3. Learn", "start_char_idx": 0, "end_char_idx": 5651, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4b98639-4778-495a-88d8-a2f4cb0059f1": {"__data__": {"id_": "b4b98639-4778-495a-88d8-a2f4cb0059f1", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_3.txt", "file_name": "www.geeksforgeeks.org_6_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34f9a327-498d-4879-9a8d-844577a2daa1", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_3.txt", "file_name": "www.geeksforgeeks.org_6_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3a80e9343ea0afd2c48fdc6e029c9a486fd3bfad59723c4dd1a4a2477b8ed1e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7564dfba-b477-4580-94a2-4b63cbc938ad", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_2.txt", "file_name": "www.geeksforgeeks.org_6_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "48e46c7794cf308834b9e076d37f1f809f6ce127b1c6b6063786a80959bd2746", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be63b4c5-3b00-458e-a5e1-830add89965d", "node_type": "1", "metadata": {}, "hash": "2a74d0789f841ff8518361b37da3f4471f66132dbd35328a775ba7440a536675", "class_name": "RelatedNodeInfo"}}, "text": "Core Java Concepts: Focus on essential topics like variables, data types, operators, control structures (if-else, switch, loops), and input/output. Practice writing simple programs to strengthen your understanding. 4. Master Object-Oriented Programming (OOP): Dive into the pillars of OOP\u2014classes, objects, inheritance, polymorphism, encapsulation, and abstraction. Understand how Java handles these concepts and how to apply them effectively in real projects. 5. Explore Collections and Data Structures: Learn about Java's Collection Framework\u2014ArrayList, HashMap, Set, LinkedList, and more. Understand how to use them and when to choose one over the other. 6. Work with Exception Handling: Understand the importance of error handling in Java using try-catch blocks, finally, throw, and custom exceptions. Learn best practices for writing clean, safe code. 7. Get Comfortable with File I/O: Learn how Java reads from and writes to files using File , FileReader , BufferedReader , FileWriter , and Streams . Practice creating programs that manage and manipulate file data. 8. Understand Multithreading and Concurrency: Grasp the basics of threads, synchronization, and concurrent programming. Learn how Java handles multiple tasks simultaneously using the Thread class and ExecutorService . 9. Learn Java Libraries and APIs: Familiarize yourself with essential APIs like Java Math, Date & Time (java.time), and String manipulation. Explore popular libraries like Apache Commons, Gson, or Jackson for real-world development. 10. Build Real-World Projects: Apply your knowledge by building console apps, file management systems, or basic desktop GUIs using JavaFX or Swing. Gradually move into web development with Java Servlets, JSP, or Spring Boot. Java Program Examples Java Programming Examples Java Exercises \u2013 Basic to Advanced Java Practice Programs Java Coding Practice Problems Java Fundamentals Coding Practice Problems Java Methods Coding Practice Problems Java Arrays Coding Practice Problems Java Strings Coding Practice Problems Java OOPs Coding Practice Problems Java Sorting and Searching Algorithms Coding Practice Problems Java Collections Coding Practice Problems Java Stream & Lambda Expression Coding Practice Problems Java Quizzes and MCQs Java Language MCQs with Answers Important Java Projects Number Guessing Game Simple Banking Application Currency Converter Tic-Tac-Toe Game Snake Game Memory Game Chat Application Face Detection System Social Networking Site Text Editor Career & Jobs in Java 2025 Java opens doors to a wide range of tech careers across industries\u2014from enterprise software to mobile apps and cloud systems. Here\u2019s a list of top career options for professionals with Java expertise, along with their average salary ranges: Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum Java Developer \u20b9400,000 \u2013 \u20b91,200,000 $55,000 \u2013 $100,000 Full Stack Java Developer \u20b9700,000 \u2013 \u20b91,800,000 $75,000 \u2013 $130,000 Backend Engineer (Java) \u20b9800,000 \u2013 \u20b92,000,000 $80,000 \u2013 $140,000 Android Developer (Java/Kotlin) \u20b9500,000 \u2013 \u20b91,500,000 $60,000 \u2013 $110,000 Java Architect \u20b91,500,000 \u2013 \u20b93,000,000 $120,000 \u2013 $170,000 DevOps Engineer (Java projects) \u20b9900,000 \u2013 \u20b92,200,000 $90,000 \u2013 $150,000 Big Data Engineer (Java + Hadoop) \u20b91,000,000 \u2013 \u20b92,500,000 $100,000 \u2013 $160,000 Automation Test Engineer (Java + Selenium) \u20b9600,000 \u2013 \u20b91,400,000 $65,000 \u2013 $110,000 Software Engineer (Java Spring Boot) \u20b9700,000 \u2013 \u20b91,800,000 $75,000 \u2013 $130,000 Java Consultant / Technical Lead \u20b91,200,000 \u2013 \u20b92,800,000 $110,000 \u2013 $160,000 List of Companies Using Java These are some popular companies that use Java in thier workflow: Company Description Google Uses Java for Android development, backend services, and internal tools across products like Gmail and Google Drive. Amazon Java is widely used at Amazon for building scalable backend systems, AWS services, and e-commerce infrastructure. Netflix Java powers many of Netflix's backend microservices, helping deliver content to millions of users with high availability. Spotify Relies on Java for data processing, backend APIs, and scalable microservices that support music streaming. Airbnb Uses Java in its backend systems to handle listings, payments, and user interactions at scale. Uber Employs Java for real-time dispatch systems, geolocation services, and backend microservices. LinkedIn Java is a core language for building LinkedIn\u2019s backend architecture, handling data-intensive workloads and APIs.", "start_char_idx": 0, "end_char_idx": 4471, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be63b4c5-3b00-458e-a5e1-830add89965d": {"__data__": {"id_": "be63b4c5-3b00-458e-a5e1-830add89965d", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_3.txt", "file_name": "www.geeksforgeeks.org_6_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34f9a327-498d-4879-9a8d-844577a2daa1", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_3.txt", "file_name": "www.geeksforgeeks.org_6_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3a80e9343ea0afd2c48fdc6e029c9a486fd3bfad59723c4dd1a4a2477b8ed1e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4b98639-4778-495a-88d8-a2f4cb0059f1", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_3.txt", "file_name": "www.geeksforgeeks.org_6_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2930c297318af1e9e18251cf9e795b8b89bcee60e6afbf7912209b28ab52695a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6f08e2d-ccdf-4ec3-924b-035baf1eff67", "node_type": "1", "metadata": {}, "hash": "457fb159e7231137ef48f91db8a36148ff7a55fc99fb9aa7250e53d296ad8375", "class_name": "RelatedNodeInfo"}}, "text": "Amazon Java is widely used at Amazon for building scalable backend systems, AWS services, and e-commerce infrastructure. Netflix Java powers many of Netflix's backend microservices, helping deliver content to millions of users with high availability. Spotify Relies on Java for data processing, backend APIs, and scalable microservices that support music streaming. Airbnb Uses Java in its backend systems to handle listings, payments, and user interactions at scale. Uber Employs Java for real-time dispatch systems, geolocation services, and backend microservices. LinkedIn Java is a core language for building LinkedIn\u2019s backend architecture, handling data-intensive workloads and APIs. eBay Uses Java for high-traffic applications, auction management, and payment services. NASA Implements Java in various projects, including simulations, data analysis tools, and mission-critical software. Intel Uses Java in embedded systems, performance testing tools, and internal applications across chip development Comment More info Campus Training Program Next Article Introduction to Java kartik Follow Improve Article Tags : Java Tutorials Practice Tags : Java Similar Reads Java IO Tutorial Java programming language comes with a variety of APIs that helps the developers to code more efficiently. One of those APIs is Java IO API. Java IO API helps the users to... 15+ min read Java AWT Tutorial Java AWT or Abstract Window Toolkit is an API used for developing GUI(Graphic User Interfaces) or Window-Based Applications in Java. Java AWT is part of the Java Foundatio... 15+ min read Maven Tutorial Maven is a powerful project management and build automation tool, widely used by Java developers. It uses a Project Object Model (POM) to centralize and handle", "start_char_idx": 3782, "end_char_idx": 5539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6f08e2d-ccdf-4ec3-924b-035baf1eff67": {"__data__": {"id_": "a6f08e2d-ccdf-4ec3-924b-035baf1eff67", "embedding": null, "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_4.txt", "file_name": "www.geeksforgeeks.org_6_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f469b83-a3f0-4107-a753-8ec2c8cb31ff", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_4.txt", "file_name": "www.geeksforgeeks.org_6_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6c12bc3d70622fa15107d8f9b8a20cad8108cf885deea3e26f4512c0d5066f7b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be63b4c5-3b00-458e-a5e1-830add89965d", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_3.txt", "file_name": "www.geeksforgeeks.org_6_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b93add06e16a316e03bbb4c6b56dc0bebbec92d131bdf979560af583c63fd2f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48e1e94e-84b4-4a18-8385-d4ccf7f41cc5", "node_type": "1", "metadata": {}, "hash": "4781a5d09fc7e5550df4dbabeff8344ee3d88cbb9e0a0cabb71ce620c425870c", "class_name": "RelatedNodeInfo"}}, "text": "a project's... 15+ min read Android Tutorial In this Android Tutorial, we cover both basic and advanced concepts. So whether you are a fresher (graduate) or an experienced candidate with several years of Android Deve... 15+ min read Java Variables In Java, variables are containers that store data in memory. Understanding variables plays a very important role as it defines how data is stored, accessed, and manipulate... 15+ min read Java Networking When computing devices such as laptops, desktops, servers, smartphones, and tablets and an eternally-expanding arrangement of IoT gadgets such as cameras, door locks, door... 15+ min read Julia vs. Java What is Java? Java is one of the most popular and widely used programming language and platform. A platform is an environment that helps to develop and run programs writte... 15+ min read Java Operators Java operators are special symbols that perform operations on variables or values. These operators are essential in programming as they allow you to manipulate data effici... 15+ min read Java URL Class URL class in Java is a part of java.net package that makes it easy to work with Uniform Resource Locators (URLs). URL is simply a string of text that identifies all the re... 15+ min read Java Syntax Java is an object-oriented programming language that is known for its simplicity, portability, and robustness. The syntax of Java programming language is very closely alig... 15+ min read Like 295k+ interested Geeks Java Programming Online Course [Complete Beginner to Advanced] Explore 166k+ interested Geeks C Programming Course Online - Learn C with Data Structures Explore 78k+ interested Geeks JavaScript Full Course Online | Learn JavaScript with Certification Explore We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It ! Improvement Suggest changes Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all. Suggest Changes min 4 words, max Words Limit:1000 Thank You! Your suggestions are valuable to us. What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences", "start_char_idx": 0, "end_char_idx": 2534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48e1e94e-84b4-4a18-8385-d4ccf7f41cc5": {"__data__": {"id_": "48e1e94e-84b4-4a18-8385-d4ccf7f41cc5", "embedding": null, "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_0.txt", "file_name": "www.java-made-easy.com_30_0.txt", "file_type": "text/plain", "file_size": 4715, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b4ef92c7-211e-43b5-8e6f-a5efaa4f2f82", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_0.txt", "file_name": "www.java-made-easy.com_30_0.txt", "file_type": "text/plain", "file_size": 4715, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8dcb03e5a841d074af06219ee18820557628a4cb9c718a5dc5356805a55fa09c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6f08e2d-ccdf-4ec3-924b-035baf1eff67", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_4.txt", "file_name": "www.geeksforgeeks.org_6_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6c12bc3d70622fa15107d8f9b8a20cad8108cf885deea3e26f4512c0d5066f7b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7959e2e-0fc1-467d-99ea-94c82405e353", "node_type": "1", "metadata": {}, "hash": "7d0fa9f02a177f2bfc73f8f515012d1e2c710803275ceabb92ce749cde723905", "class_name": "RelatedNodeInfo"}}, "text": "Java Programming Made Easy - Learn to Program Today! Teach yourself the Java programming language even if you're an absolute beginner! The Java programming tutorials found on this site are here to help YOU learn how to program quickly and easily. The Java programming language is easy to learn, whether you're totally new at programming, or just want to pick up a new language. It is the perfect computer language for being competitive in today's industries or even to create programs as a hobby. Java is also easy to set up, so advanced computer skills are NOT required . Have you ever tried to learn how to program but found it intimidating or hard to figure out? This site makes sure you have all of our easy to understand guides and tools, all in one place! As a bonus, you can always make a request for additional topics to cover, or request for a topic on the site to be clarified. This is YOUR site, and I'm here to help provide you with what you need to succeed! Don't know anything about Java? Don't know anything about programming a computer? I don't think that should stop anyone from learning. Java can be simple with proper guidance, and I believe programming can be a great asset to anyone. Find out why you should learn the Java programming language today! Want to receive more free content via email? Subscribe to the Fresh Cup of Java Newsletter to receive a monthly dose of free Java tips, more sample programs, answers to your questions, and much much more! Beginner's Tutorials If you're just starting to learn to program, or are just starting to learn Java, then this is the place for you! These beginners Java tutorials start you off from the very beginning by showing you how to get Java working on your computer. If you already know the basics of computer programming, you'll be able to breeze through this section. For everyone else, this is a great starting point! Intermediate Tutorials Ready to learn the specifics about Java? Then the intermediate tutorials section is where you want to be. Learn to think like a programmer and learn the object-oriented way of programming . These tutorials bring your code to the next level by unlocking Java's unique and powerful tools. Advanced Tutorials These advanced Java topics cover object-orientation and other specific topics found in Java. If you want to really step up your game and master the Java programming language than all of the examples and introductions to the tools you'll need are found here! Fresh Cup of Java Newsletter Fresh Cup of Java is a free Java Newsletter full of valuable Java tips and samples! Java Updates - News about Java and Java Made Easy The Java Made Easy blog provides Java updates and news as well as updates and news about the site itself. Readers may make suggestions about Java news by going to the Contact Us link in the sidebar. Java For Beginners These tutorials introduce Java for beginners who want to teach themselves easily. Learn how to install and being coding in Java in no time at all. Intermediate Java Tutorials These Java tutorials assume that you're ready to learn about the more specific aspects of Java, such as object-orientation. Learn what you need to know about Java right here! Java Programming Tutorials - Collections, Inheritance, and Polymorphism These Java programming tutorials will help you learn the advanced object oriented concepts in Java, from polymorphism to inheritance and even an introduction to GUI programming. Java Graphics Tutorials These Java graphics tutorials will teach you how to make windows, buttons, and dialogs in Java with Java Swing! Java Programming Help - Questions and Answers Are you looking for Java programming help? Are you having trouble understanding an aspect of Java? Check out the various question and answer pages on the category you're interested in. Download A Free Java Compiler - Java Compiler Downloads Looking for a free Java Compiler? Here are some of the compilers that I have personally used throughout my Java programming career that you may download by following the links below... What Is Java? What is Java? Java is a high level programming language. It was developed by Sun Microsystems so mobile devices could \u201ctalk\u201d to each other. Why Should You Learn Java? Anyone can learn Java. It allows you to create computer programs to perform tasks for you, learn more sophisticated computer programming languages. About Me and Java Made Easy About me, the author of Java Made Easy Contact Us Have a suggestion or need to contact the author? Contact Java Made Easy using the form below! Home What's New? Java Newsletter Java Updates Core Java Tutorials Beginner Tutorials Intermediate Java Advanced Java Java Graphics Java Program", "start_char_idx": 0, "end_char_idx": 4711, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7959e2e-0fc1-467d-99ea-94c82405e353": {"__data__": {"id_": "a7959e2e-0fc1-467d-99ea-94c82405e353", "embedding": null, "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_1.txt", "file_name": "www.java-made-easy.com_30_1.txt", "file_type": "text/plain", "file_size": 300, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0812187d-e8e0-4a17-a518-e0984dc0f698", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_1.txt", "file_name": "www.java-made-easy.com_30_1.txt", "file_type": "text/plain", "file_size": 300, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "bcb30a2e105987a94ae1e931d5f90c4f451c41da1323372c275a98959c124d3f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48e1e94e-84b4-4a18-8385-d4ccf7f41cc5", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_0.txt", "file_name": "www.java-made-easy.com_30_0.txt", "file_type": "text/plain", "file_size": 4715, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8dcb03e5a841d074af06219ee18820557628a4cb9c718a5dc5356805a55fa09c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd6ece58-bfb4-4e0f-9333-a866e95d0f28", "node_type": "1", "metadata": {}, "hash": "5f3d4cf7d30d8b1e78e2c8dbe3f728540c5cff80e7f28b901aab04cfcc5503c2", "class_name": "RelatedNodeInfo"}}, "text": "Help! Helpful Java Resources Java Compilers What Is Java? Why Learn Java? Personal Info & Site Info About the Author Contact Us [ ? ] Subscribe to Java Made Easy! Custom Search \u00a9 Copyright 2008-2017 java-made-easy.com Java is a trademark of Oracle Corporation\u00ae Click here to read the privacy policy", "start_char_idx": 0, "end_char_idx": 298, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd6ece58-bfb4-4e0f-9333-a866e95d0f28": {"__data__": {"id_": "bd6ece58-bfb4-4e0f-9333-a866e95d0f28", "embedding": null, "metadata": {"file_path": "docs\\java\\www.java67.com_27_0.txt", "file_name": "www.java67.com_27_0.txt", "file_type": "text/plain", "file_size": 4629, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcf79534-96e7-44cc-bf59-dc81cf08e4ab", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.java67.com_27_0.txt", "file_name": "www.java67.com_27_0.txt", "file_type": "text/plain", "file_size": 4629, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5a2001cdf59a86e736d45775981c9b02f5b57713dfb3216ff1780a4545a4b617", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7959e2e-0fc1-467d-99ea-94c82405e353", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_1.txt", "file_name": "www.java-made-easy.com_30_1.txt", "file_type": "text/plain", "file_size": 300, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "bcb30a2e105987a94ae1e931d5f90c4f451c41da1323372c275a98959c124d3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8265aa6-7f4c-479d-9064-453eab10dfc1", "node_type": "1", "metadata": {}, "hash": "61e62b1faeb3e11a6a6b7d9bd9361180bc1f417a212647c4defe093a94269687", "class_name": "RelatedNodeInfo"}}, "text": "Java67 Pages Home core java spring online courses thread java 8 coding sql books oop interview certification free resources best Review \u2014 Is tryExponet.com Good Place for System Design Interview Prep in 2025? Hello guys, its every developer\u2019s dream to get a SDE job on FAANG company. I dreamed it too and having gone through interview on Google, Microsoft and Amazon, I know a thing or two about these interviews. Many developer fail these interview either because of data structures and algorithms or because of System Design. Even for experienced developer cracking a system design interview is not easy. It requires patience, perseverance and dedication to learn the intricacies of system design and acquire knowledge to crack interview. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: course review , system design Top 5 Udemy Courses to Learn Distributed Systems in 2025 Hello guys, Distributed systems are the backbone of modern applications, enabling scalability, fault tolerance, and high availability . Whether you\u2019re building microservices, cloud applications, or real-time systems , understanding distributed systems is crucial. If you want to learn Distributed System in 2025 and looking for resources then you have come to the right place. Earlier, I have shared best System Design Books , System Design Questions and best Places to learn System Design and in this article, I am going to share best Distributed System courses from Udemy, one of my favorite place to learn programming and technical stuff. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , Distributed Systems , Microservices , system design , Udemy Is System Design Interview Inside Guide Vol 1 and 2 Book Worth Reading in 2025? Review Hello guys, if you are preparing for System design interviews or Software Design Interviews, then you must have come across System Design Interview - An Insider's Guide by Alex Xu , one of the most popular book on System Design after Designing Data-Intensive Applications by Martin Kleppmann. I first come across Alex Xu on Twitter when one of his image about how HTTPS works went viral. The image was quite detailed and presentable so I start following Alex and then I come across ByteByteGo , his online System design course and his book System Design Interview - An Insider's Guide . Read more \u00bb Posted by javin paul 1 comment: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: books , course review , system design Top 5 System Design and Coding Interview Substack Newsletters in 2025 Hello guys, if you want to learn System design then there are many ways you can start. For example, you can start with reading a System Design book, or joining an online course, but if you want to keep yourself updated and believe in constant learning then there is no better way then subscribing to a System Design Newsletter . When it comes to System design newsletter you can find many newsletter online, just open your LinkedIn and you will see a post popping here or there but you cannot subscribe to all of them as it doesn't make sense. A better strategy is to subscribe only the best newsletters so that you doesn't get overwhelmed but also keep learning useful concepts and new tech trends. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: best of java67 , system design Top 10 Free Core Spring, Spring MVC, and Spring Boot Courses for Beginners in 2025 - Best of Lot Hello guys, if you want to learn Spring Framework, Spring MVC and Spring Boot then you are at the right place. In this post you will find the best free courses to learn Spring Framework, Spring MVC and Spring Boot in 2025. I have been sharing a lot of resources like books and courses recently and when I published my list of Top 5 courses to learn Spring and Hibernate , many of my readers asked about a similar list of free courses to learn Spring Framework like Core Spring, Spring MVC, Spring Security, and Spring Boot. That request was always back in my mind but I couldn't get time to put together a list, which I can share with you guys, but today is the day. In this list, I have compiled some of the best online free courses to learn Spring Framework from scratch, online at your own pace. Read more \u00bb Posted by javin paul 15 comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , free resources , spring framework , spring mvc", "start_char_idx": 0, "end_char_idx": 4618, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8265aa6-7f4c-479d-9064-453eab10dfc1": {"__data__": {"id_": "e8265aa6-7f4c-479d-9064-453eab10dfc1", "embedding": null, "metadata": {"file_path": "docs\\java\\www.java67.com_27_1.txt", "file_name": "www.java67.com_27_1.txt", "file_type": "text/plain", "file_size": 4550, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1576892e-3143-42d6-b64d-de6da23538f7", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.java67.com_27_1.txt", "file_name": "www.java67.com_27_1.txt", "file_type": "text/plain", "file_size": 4550, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "78097af7115b92426de5cee374c4b15ad8e4f75d85a04791a8098a54e51bed76", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd6ece58-bfb4-4e0f-9333-a866e95d0f28", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.java67.com_27_0.txt", "file_name": "www.java67.com_27_0.txt", "file_type": "text/plain", "file_size": 4629, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "5a2001cdf59a86e736d45775981c9b02f5b57713dfb3216ff1780a4545a4b617", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "268b1086-16fa-428e-83cc-ea32a8d82250", "node_type": "1", "metadata": {}, "hash": "143547c6cbdc9cd14791a9d4947c8e1973f8fa2506e94516df7b4a2d84592815", "class_name": "RelatedNodeInfo"}}, "text": ", Udemy 10 Best System Design Interview Courses for Software Engineers in 2025 Hello guys, if you are preparing for System design interview and looking for best online courses to learn essential System design concepts like load balancing, API Gateway, scalability, Microservices architecture as well as learn how to solve popular System design questions like how to design YouTube , WhatsApp, Parking Lot, Library System as well when to use NoSQL and SQL then you have come to the right place. In the past, I have shared best System Design Books , Free System design courses , System design prep guide , and System Interview Questions and in this article, I am going to share best System Design Courses for beginners and experienced Software Engineer to level up their System Design skills in 2025. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , system design , Udemy 3 ways to Learn Java Programming in 2025? Books, Courses, and Projects Hello guys, if you want to learn Java and wondering what is the best way to learn Java in 2025 then you have come to the right place. In the past, I have shared many useful resources to learn Java programming and development like the 2025 Java Developer RoadMap , best Java courses , best Java books , and this list of best websites to learn Java for FREE , and in this article, I will tell you the best way to learn Java in 2025. Learning Java programming is quite rewarding and I can say that it was my best decision to learn Java 20 years ago. It opens doors to many opportunities in software development and lucrative jobs like Java developers on Investment banks like JP Morgan, UBS, Citibank, Barclays, and more. Read more \u00bb Posted by javin paul 1 comment: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: best of java67 , core java , courses , Udemy Top 10 Online Courses to Learn Python in 2025 - Best of Lot Hello guys, if you want to learn Python programming language in 2025 and are looking for the best Python courses, you have come right. There are a lot of resources to learn Python on the web, including free and paid. In the past, I have also shared a lot of accessible sources like free books , tutorials , courses , specialization , and certifications. Still, many of you asked for more comprehensive and advanced Python courses to master this essential programming skill in 2025. We have selected a few advanced Python online training courses from platforms like Udemy , Coursera , edX , ZTM Academy, and Pluralsight to help you learn Python from the best resources. Read more \u00bb Posted by javin paul 5 comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , programming , Python , Udemy 10 Best Udemy Courses of Stephen Grider to Learn Tech Skills in 2025 Hello guys, if you are looking to learn web development or app development then there is a good chance that you may heard about Stephen Grider , one of the best Udemy instructor when it comes to teaching web development technologies. In the past, I have shared best online courses by Jose Portilla , Maximillian SchwarzMuller , Stephane Maarek and Brad Traversy and in this article, I am going to share best online course by Stephen Grider. But, First things first. before I tell you about the 10 best Udemy courses of Stephen Grider, let me tell you who the man really is. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: best of java67 , courses , Udemy Top 5 Python Courses for Data Science and Machine Learning in 2025 - Best of Lot We all know what Python is, right? It is a high-level, general-purpose programming language with enhanced readability. The syntax is also well-constructed and has an object-oriented approach. This will enable programmers to write clear and logical code for small and large projects. Data Science can be broadly defined as a field that extracts insights from structured and unstructured data using scientific methods and algorithms. These insights can then be applied across various domains and fields. It can be used for increasing sales, optimizing workflow, cash flow, etc. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , data science , Python Top 6 Free Courses to learn PHP and MySQL in 2025 [Updated] - Best of lot If you want to build web applications quickly like overnight", "start_char_idx": 0, "end_char_idx": 4545, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "268b1086-16fa-428e-83cc-ea32a8d82250": {"__data__": {"id_": "268b1086-16fa-428e-83cc-ea32a8d82250", "embedding": null, "metadata": {"file_path": "docs\\java\\www.java67.com_27_2.txt", "file_name": "www.java67.com_27_2.txt", "file_type": "text/plain", "file_size": 4606, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a7414c5-7244-406a-a454-86a587ca7cfd", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.java67.com_27_2.txt", "file_name": "www.java67.com_27_2.txt", "file_type": "text/plain", "file_size": 4606, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a112aa136b118ffe5e63d0e29da94e5c9482a0ca1374a6634efe398cb34c0de4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8265aa6-7f4c-479d-9064-453eab10dfc1", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.java67.com_27_1.txt", "file_name": "www.java67.com_27_1.txt", "file_type": "text/plain", "file_size": 4550, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "78097af7115b92426de5cee374c4b15ad8e4f75d85a04791a8098a54e51bed76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1174708-3ea5-4ebd-a61d-fa64366a62b4", "node_type": "1", "metadata": {}, "hash": "bd9b6d275967d8233b5c2067061abc578dbd4d7ff41b7dcaa78fc386cf2605b9", "class_name": "RelatedNodeInfo"}}, "text": "or over the weekend, then PHP and MySQL are the right choices and because of this power, they are also the best language for freelancing and startups where a quick turnaround time is required. PHP and MySQL are incredibly powerful open source technologies that allow programmers and web developers to create functional websites and apps that go way beyond basic HTML . PHP is specially designed to generate interactive and dynamic websites and is also known as the server-side scripting language, while MySQL is one of the leading relational databases along with Oracle and Microsoft SQL Server . Read more \u00bb Posted by javin paul 4 comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , free resources , MySQL tutorial example , PHP Top 5 Free Courses to Learn C# (C-Sharp) in 2025 - Best of Lot Many people underestimate the power of C# and never think highly of it when they talk about programming languages. Still, the truth is that C# is one of the popular programming languages of today's world, just behind JavaScript , SQL , and Java on StackOverFlow's Developer Survey for the last couple of years. There are a lot of jobs and opportunities available for experienced C# developers. It's one of the critical languages for developers working with Microsoft technologies like Windows and SQL Server . It is also one of the most popular programming languages for developing desktop GUI, surpassing Java Swing entirely in the last couple of years. I have seen many big investment banks switched from Swing to C# for their GUI development work. Read more \u00bb Posted by javin paul 2 comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: C++ , courses , free resources Top 7 Free Selenium Courses for Beginners to Learn Online in 2025 - Best of Lot Testing is an integral part of software development. We have long relied on manual testing by testers and QA professionals to ship quality software and find bugs, but that's not sustainable anymore. There is an increased focus on automation testing nowadays, and Selenium is leading its web drivers. If you don't know Selenium, it's a free automation testing tool for web applications. It can work with different web browsers like Chrome, Firefox, Internet Explorer, and Opera and simulate human-like behavior. Using Selenium, you can programmatically interact with all the other elements on a webpage. You can click on them, input text, extract text, and more. Read more \u00bb Posted by javin paul 1 comment: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , free resources , Selenium , testing Top 10 Free Udemy Courses to Learn Coding and Web Development in 2025 - Best of Lot When I was a little kid, I remember reading somewhere that coding will be the language of the future. I was intrigued. What was this new language that I didn't know about and nobody around me spoke? How was it going to be the language of the future? Before we get to the 10 free Udemy courses that will teach you coding, let me tell you a little more about what coding is. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: coding , courses , free resources , web development Top 5 Free Courses to learn Salesforce in 2025 - Best of Lot Hello there, If you want to learn the Salesforce platform and looking for some free online Salesforce courses, then you have come to the right place. Earlier, I shared the best online practices for Salesforce Developer , Administrator , and App Builder certification. Today, I will share free Salesforce courses beginners can use to learn this handy platform and add an in-demand skill to their resume. The Salesforce platform is a unique platform for custom application design, analytics features, and new features. Read more \u00bb Posted by javin paul 1 comment: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: Cloud Computing , courses , free resources , Salesforce Top 5 Free Courses to Learn Ruby on Rails for Beginners in 2025 - Best of Lot [UPDATED] Hello guys, welcome to this post, here you will find some of the best free courses to learn Ruby programming languag e and Ruby on Rails framework online from Udemy . If you don't know what Ruby is and what is Rails framework is, then let me tell you that it's one of the simplest programming languages with little to no syntax. If you are new to programming or never coded before, then also developing a Ruby application will be much more comfortable than choosing any other", "start_char_idx": 0, "end_char_idx": 4601, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1174708-3ea5-4ebd-a61d-fa64366a62b4": {"__data__": {"id_": "c1174708-3ea5-4ebd-a61d-fa64366a62b4", "embedding": null, "metadata": {"file_path": "docs\\java\\www.java67.com_27_3.txt", "file_name": "www.java67.com_27_3.txt", "file_type": "text/plain", "file_size": 3866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96766a91-b7d3-4959-b347-4fba728da5af", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.java67.com_27_3.txt", "file_name": "www.java67.com_27_3.txt", "file_type": "text/plain", "file_size": 3866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "183e2e55dedbe0985493d3eaafa2fe9c8eddb6c833c4c51c660cacd42a2c5544", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "268b1086-16fa-428e-83cc-ea32a8d82250", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.java67.com_27_2.txt", "file_name": "www.java67.com_27_2.txt", "file_type": "text/plain", "file_size": 4606, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a112aa136b118ffe5e63d0e29da94e5c9482a0ca1374a6634efe398cb34c0de4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecb5a3c6-64f9-4fad-afbc-5ebd3493f903", "node_type": "1", "metadata": {}, "hash": "7eddd3ecc6fcbc31150873d97142c0c5c75dc6340ccf498dfb59f898d56d1a28", "class_name": "RelatedNodeInfo"}}, "text": "programming language like Python or Java . Read more \u00bb Posted by javin paul 3 comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , free resources , Ruby , web development Top 6 Online Course to learn from Java 9 to Java 23 in 2025 - Best of Lot Hello guys, even though Java 15 is available now, many developers are still on Java 8 and not really caught up with changes in Java 9, 10, 11, 12, 13, or Java 14. If you are also in the same boat and want to start with Java 9 features , you have come to the right place. This article will share some of the best online courses to learn changes in Java 9, 10, 11, and later add more classes for Java 12, 13, 14, and 15. These JDK releases are packed with powerful features like modules, API enhancements like factory methods for an immutable list , set, and map, some changes on stream API and optional class, new features on process API, etc. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: core java , courses , free resources 5 Free Courses to Crack GCP Professional Cloud DevOps Engineer Exam in 2025 - Best of Lot If you are preparing for Google Cloud Professional DevOps Engineer certification in 2025 and looking for free online Google cloud DevOps Engineer courses then you have come to the right place. In the past, I have shared the best Google Cloud courses and best DevOps Courses , as well as the best online training courses to pass cloud engineer , data engineer , and cloud architect certifications, but my readers kept asking for free online courses on Google Cloud, particularly for DevOps engineer certification, and today, I am going to share free GCP Cloud DevOps Engineer certification courses for both beginners and experienced cloud professionals. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: cloud certification , Cloud Computing , courses , free resources , Google Cloud Certification , Google Cloud Platform Top 8 Free Courses to Learn Web Design in 2025 - Best of Lot Hello guys, if you want to become a web designer and look for free online courses to learn web design in 2025, you have come to the right place. In the past, I have shared the best free online resources to learn key web development skills like HTML , CSS , JavaScript , Bootstrap , and today, I am going to share the best free resources to learn web design and development. These free courses have been created by expert instructors like Jonas Schmedtmann, and they are from websites like Udemy , Coursera , and edX . You can use these free online courses to learn these valuable skills and become a web designer and developer. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: courses , free resources , web design , web development Top 5 Courses to Learn Angular for Web Development in 2025 - Best of Lot Hello guys, if you want to learn Angular in 2025 and looking for the best Angular courses then you have come to the right place. In the past, I have shared many resources to learn and master Angular like the best Angular books as well as free courses to learn Angular but many of you asked me to share more comprehensive and in-depth Angular courses and here we are with the list of the best Angular online courses to learn in 2025. These are comprehensive, in-depth, and up-to-date Angular courses, curated from popular websites and online courses platforms like Udemy, Pluralsight, Coursera as well as interactive platforms like Educative. Read more \u00bb Posted by javin paul No comments: Email This BlogThis! Share to X Share to Facebook Share to Pinterest Labels: Angular , courses , web development Older Posts Home Subscribe to: Posts (Atom)", "start_char_idx": 0, "end_char_idx": 3861, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecb5a3c6-64f9-4fad-afbc-5ebd3493f903": {"__data__": {"id_": "ecb5a3c6-64f9-4fad-afbc-5ebd3493f903", "embedding": null, "metadata": {"file_path": "docs\\java\\www.javacodegeeks.com_40_0.txt", "file_name": "www.javacodegeeks.com_40_0.txt", "file_type": "text/plain", "file_size": 2990, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2314e47c-be7c-4cdb-98ea-d45ab179fcdc", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.javacodegeeks.com_40_0.txt", "file_name": "www.javacodegeeks.com_40_0.txt", "file_type": "text/plain", "file_size": 2990, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d094439ba392f3a3dee238ec7c2804cb0574bfab7f5e5686217384d9043366f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1174708-3ea5-4ebd-a61d-fa64366a62b4", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.java67.com_27_3.txt", "file_name": "www.java67.com_27_3.txt", "file_type": "text/plain", "file_size": 3866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "183e2e55dedbe0985493d3eaafa2fe9c8eddb6c833c4c51c660cacd42a2c5544", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d6daeb0-8638-4c87-8d90-e51c2e6507a9", "node_type": "1", "metadata": {}, "hash": "6d0e58582db9608324f345bec80e16e67d62a4483e12503b33b2f2d3a25cbbcb", "class_name": "RelatedNodeInfo"}}, "text": "Java Programming, Learn Java Online with the Java Code Geeks - Java developers resource center - Java, Scala, Groovy, Android Do you want to know how to develop your skillset to become a Java Rockstar? Subscribe to our newsletter to start Rocking right now! To get you started we give you our best selling eBooks for FREE! 1. JPA Mini Book 2. JVM Troubleshooting Guide 3. JUnit Tutorial for Unit Testing 4. Java Annotations Tutorial 5. Java Interview Questions and many more .... I agree to the Terms and Privacy Policy Sign up Thank you! We will contact you soon. Angular Eleftheria Drosopoulou May 26th, 2025 0 1 Using Signals in Angular 17: Goodbye NgRx for Simple State? With the release of Angular 17, developers now have access to Signals\u2014a new reactive primitive that promises a cleaner, more\u2026 Read More \u00bb Meta JCG Java Code Geeks May 25th, 2025 0 14 [DEALS] AdGuard Family Plan: Lifetime Subscription (76% off) & Other Deals Up To 98% Off \u2013 Offers End Soon! Hello fellow geeks, Fresh offers await you on our Deals store, please have a look! AdGuard Family Plan: Lifetime Subscription\u2026 Read More \u00bb Meta JCG Java Code Geeks May 24th, 2025 0 59 [FREE EBOOKS] The Embedded Linux Security Handbook, Modern Generative AI with ChatGPT and OpenAI Models & Four More Best Selling Titles Hello fellow geeks, Fresh offers await you on our Information Technology Research Library, please have a look! The Embedded Linux\u2026 Read More \u00bb Enterprise Java Eleftheria Drosopoulou May 23rd, 2025 0 67 Securing GraphQL with Spring Security: A Practical Guide GraphQL provides a flexible and efficient way to query APIs, but with that power comes the need for robust security.\u2026 Read More \u00bb Core Java Yatin Batra May 23rd, 2025 0 78 Getting Started with OSHI OSHI (Operating System and Hardware Information) is a free, open-source Java library used to retrieve system information like CPU, memory,\u2026 Read More \u00bb Core Java Omozegie Aziegbe May 23rd, 2025 0 82 Objenesis Hello World Example In Java, object instantiation typically involves invoking a constructor using the new keyword or reflective instantiation via Constructor.newInstance(). However, these\u2026 Read More \u00bb Core Java Eleftheria Drosopoulou May 23rd, 2025 0 131 Rate Limiting in Java: Implementing Per-User Throttling with Redis Buckets To protect APIs from abuse and ensure fair usage, rate limiting is essential. It prevents users or clients from overwhelming\u2026 Read More \u00bb Java Eleftheria Drosopoulou May 22nd, 2025 0 52 Zero Downtime Deployments with Kubernetes and Argo Rollouts Delivering new features quickly is important, but not at the cost of application stability. In modern DevOps workflows, zero downtime\u2026 Read More \u00bb Enterprise Java Yatin Batra May 22nd, 2025 0 77 Jolokia Spring Boot Integration Example Monitoring and managing Spring Boot applications can be greatly enhanced using tools like Jolokia, which exposes JMX MBeans over HTTP.\u2026 Read More \u00bb 1 2 3 \u00bb 10 20 ... Last Back to top button Close", "start_char_idx": 0, "end_char_idx": 2958, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d6daeb0-8638-4c87-8d90-e51c2e6507a9": {"__data__": {"id_": "0d6daeb0-8638-4c87-8d90-e51c2e6507a9", "embedding": null, "metadata": {"file_path": "docs\\java\\www.javadevjournal.com_23_0.txt", "file_name": "www.javadevjournal.com_23_0.txt", "file_type": "text/plain", "file_size": 1410, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "975645b4-cda9-47f8-a006-1ab65bab843b", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.javadevjournal.com_23_0.txt", "file_name": "www.javadevjournal.com_23_0.txt", "file_type": "text/plain", "file_size": 1410, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "90c50613484b905ea46468fb41646094a381177ce926ecf4fbd657b7d67cbbbe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecb5a3c6-64f9-4fad-afbc-5ebd3493f903", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.javacodegeeks.com_40_0.txt", "file_name": "www.javacodegeeks.com_40_0.txt", "file_type": "text/plain", "file_size": 2990, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d094439ba392f3a3dee238ec7c2804cb0574bfab7f5e5686217384d9043366f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2701327-33a7-4c35-b65e-e813b041d956", "node_type": "1", "metadata": {}, "hash": "a5900a7f860bd192281a4fe0ada7ed575347d299a53e4367f3ec1d413a1f6545", "class_name": "RelatedNodeInfo"}}, "text": "Home | Java Development Journal Skip to content Learn programming and other frameworks for free Start your coding journey from the ground up! With our comprehensive step-by-step tutorials and real-world examples, you\u2019ll be writing code in no time. Whether you\u2019re a beginner or looking to brush up on your skills, our platform provides the guidance and resources you need to succeed. Join our community of learners today and unlock your full coding potential!. View All Tutorials Choose Your Learning Start your journey with us. Lean Java programming and other framework with our beginner friendly tutorials and examples. Try examples with our free online compilers. Java Spring Data Structure Algorithms Spring Framework Rest API View All Tutorials Getting Started With Java for Beginner Learn to code in Java with industry experts. Learn by learning core concepts, writing code and solving challenges using our Java tutorials. Fundamental of Java programming. Learning with real time practice. Free online Java compiler. Step-by-step guide to learn Java. Start For FREE Enhance your coding skills using our online compilers Level up your coding skills! Explore programming languages with our free, user-friendly web and mobile compilers. Java Compiler Run Java Code Python Code Run Python C++ Compiler Run C++ Code PHP Compiler Run PHP Code C Compiler Run C Code Go Compiler Run Go Code View all compilers", "start_char_idx": 0, "end_char_idx": 1406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2701327-33a7-4c35-b65e-e813b041d956": {"__data__": {"id_": "a2701327-33a7-4c35-b65e-e813b041d956", "embedding": null, "metadata": {"file_path": "docs\\java\\www.journaldev.com_10_0.txt", "file_name": "www.journaldev.com_10_0.txt", "file_type": "text/plain", "file_size": 2292, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96664e48-1a32-4bb6-9ce4-feb787ef777e", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.journaldev.com_10_0.txt", "file_name": "www.journaldev.com_10_0.txt", "file_type": "text/plain", "file_size": 2292, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "11bcd6074263e785651d591f239424765305f952b8a1e069d2b7e1c04eda126d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d6daeb0-8638-4c87-8d90-e51c2e6507a9", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.javadevjournal.com_23_0.txt", "file_name": "www.javadevjournal.com_23_0.txt", "file_type": "text/plain", "file_size": 1410, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "90c50613484b905ea46468fb41646094a381177ce926ecf4fbd657b7d67cbbbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0b721fa-9090-451a-bb74-46051c5f7aa7", "node_type": "1", "metadata": {}, "hash": "71946c368e1c95bec58ecbff930d88b1fa61d6026bee5d780d0d29c266db08cc", "class_name": "RelatedNodeInfo"}}, "text": "Tutorials | DigitalOcean All Tutorials Popular Topics AI/ML Apache Databases Docker JavaScript Kubernetes Linux Basics MySQL Python React Security Ubuntu Tutorial series Product tutorials Browse all topic tags Enjoy $200 to try DigitalOcean Click below for $200 of free credit to try DigitalOcean on us for the next 60 days. Thank you for being a part of our community! Join Now Tutorials Follow along with one of our 8,000+ development and sysadmin tutorials. Search our catalog To add a tag to the search, type the tag with [ ] around it. Or, search this query on [ questions and answers ]. Popular Topics Featured Content Conceptual Article SOLID: The First 5 Principles of Object Oriented Design April 23, 2024 Tutorial How To Remove Docker Images, Containers, and Volumes April 7, 2025 Tutorial How to Create a MySQL User and Grant Privileges (Step-by-Step) April 8, 2025 Most Recent Content View more Tutorial Instruction-Based Image Editing with In-Context Edit (ICEdit) May 23, 2025 Conceptual Article How to Manually Optimize ML Parameters for Peak Performance May 23, 2025 Tutorial Multi-Node LLM Training at Scale on DigitalOcean May 23, 2025 Tutorial How to Create and Insert a Table in MySQL: A Beginner\u00e2\u0080\u0099s Guide May 23, 2025 Tutorial Run BAGEL VLM on a DigtialOcean GPU Droplet May 22, 2025 Tutorial How To Add Images in Markdown (Syntax, Examples & Pro Tips) May 22, 2025 Become a contributor for community Get paid to write technical tutorials and select a tech-focused charity to receive a matching donation. Sign Up DigitalOcean Documentation Full documentation for every DigitalOcean product. Learn more Resources for startups and SMBs The Wave has everything you need to know about building a business, from raising funding to marketing your product. Learn more Get our newsletter Stay up to date by signing up for DigitalOcean\u00e2\u0080\u0099s Infrastructure as a Newsletter. New accounts only. By submitting your email you agree to our Privacy Policy The developer cloud Scale up as you grow \u00e2\u0080\u0094 whether you're running one virtual machine or ten thousand. View all products Get started for free Sign up and get $200 in credit for your first 60 days with DigitalOcean.* Get started *This promotional offer applies to new accounts only. \u00c2\u00a9 2025 DigitalOcean, LLC. Sitemap .", "start_char_idx": 0, "end_char_idx": 2281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0b721fa-9090-451a-bb74-46051c5f7aa7": {"__data__": {"id_": "d0b721fa-9090-451a-bb74-46051c5f7aa7", "embedding": null, "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_17_0.txt", "file_name": "www.learnjavaonline.org_17_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00a2c5d2-f72a-4770-bed0-192d6765f10a", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_17_0.txt", "file_name": "www.learnjavaonline.org_17_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3f06a7407be83b792aa50dee46b1fc13ee5cbbc0b6151ec280936f55fe7d55d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2701327-33a7-4c35-b65e-e813b041d956", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.journaldev.com_10_0.txt", "file_name": "www.journaldev.com_10_0.txt", "file_type": "text/plain", "file_size": 2292, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "11bcd6074263e785651d591f239424765305f952b8a1e069d2b7e1c04eda126d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be61388e-52bc-4a49-aae2-06e96dfafa5f", "node_type": "1", "metadata": {}, "hash": "71946c368e1c95bec58ecbff930d88b1fa61d6026bee5d780d0d29c266db08cc", "class_name": "RelatedNodeInfo"}}, "text": "Learn Java - Free Interactive Java Tutorial Welcome Welcome to the LearnJavaOnline.org Interactive Java Tutorial. Whether you are an experienced programmer or not, this website is intended for everyone who wishes to learn the Java programming language. Just click on the chapter you wish to begin from, and follow the instructions. Good luck! Learn the Basics Hello, World! Variables and Types Conditionals Arrays Loops Functions Objects Compiling and Running with Arguments Advanced Topics (Under Construction) Inheritance Try and Catch Abstract Classes Interfaces Using Generics Collections Wrappers and Autoboxing Exceptions Generic Types IO Streams Contributing Tutorials Read more here: Contributing Tutorials Start Exercise Sponsors Chapters Hello, World! Variables and Types Conditionals Arrays Loops Functions Objects Compiling and Running with Arguments Inheritance Try and Catch Abstract Classes Interfaces Using Generics Collections Wrappers and Autoboxing Exceptions Generic Types IO Streams Contributing Tutorials Copyright \u00a9 learnjavaonline.org. Read our Terms of Use and Privacy Policy", "start_char_idx": 0, "end_char_idx": 1100, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be61388e-52bc-4a49-aae2-06e96dfafa5f": {"__data__": {"id_": "be61388e-52bc-4a49-aae2-06e96dfafa5f", "embedding": null, "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_33_0.txt", "file_name": "www.learnjavaonline.org_33_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "35d896db-c7ba-4293-8624-6b0bc52a0672", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_33_0.txt", "file_name": "www.learnjavaonline.org_33_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "783115d5986f98eb8d91cd612779d938d0fb66391b20f23d20aa2645450d5dcc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0b721fa-9090-451a-bb74-46051c5f7aa7", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_17_0.txt", "file_name": "www.learnjavaonline.org_17_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "3f06a7407be83b792aa50dee46b1fc13ee5cbbc0b6151ec280936f55fe7d55d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "928b5667-e4b0-4bd3-88b1-28dba7a633d6", "node_type": "1", "metadata": {}, "hash": "b51221eea2d7557374301643a51d0b882a602d00f5a56c16b54c979b052b8ef9", "class_name": "RelatedNodeInfo"}}, "text": "Learn Java - Free Interactive Java Tutorial Welcome Welcome to the LearnJavaOnline.org Interactive Java Tutorial. Whether you are an experienced programmer or not, this website is intended for everyone who wishes to learn the Java programming language. Just click on the chapter you wish to begin from, and follow the instructions. Good luck! Learn the Basics Hello, World! Variables and Types Conditionals Arrays Loops Functions Objects Compiling and Running with Arguments Advanced Topics (Under Construction) Inheritance Try and Catch Abstract Classes Interfaces Using Generics Collections Wrappers and Autoboxing Exceptions Generic Types IO Streams Contributing Tutorials Read more here: Contributing Tutorials Start Exercise Sponsors Chapters Hello, World! Variables and Types Conditionals Arrays Loops Functions Objects Compiling and Running with Arguments Inheritance Try and Catch Abstract Classes Interfaces Using Generics Collections Wrappers and Autoboxing Exceptions Generic Types IO Streams Contributing Tutorials Copyright \u00a9 learnjavaonline.org. Read our Terms of Use and Privacy Policy", "start_char_idx": 0, "end_char_idx": 1100, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "928b5667-e4b0-4bd3-88b1-28dba7a633d6": {"__data__": {"id_": "928b5667-e4b0-4bd3-88b1-28dba7a633d6", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_0.txt", "file_name": "www.oracle.com_46_0.txt", "file_type": "text/plain", "file_size": 6844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf490124-91f3-4a3d-97c0-927860b1b2e2", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_0.txt", "file_name": "www.oracle.com_46_0.txt", "file_type": "text/plain", "file_size": 6844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1f6fab212a495afbbd1597fe003db3f452f6992de894315396ed24159e9ac42d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be61388e-52bc-4a49-aae2-06e96dfafa5f", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_33_0.txt", "file_name": "www.learnjavaonline.org_33_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "783115d5986f98eb8d91cd612779d938d0fb66391b20f23d20aa2645450d5dcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c81a152-c40b-4527-8124-d49e24034cf3", "node_type": "1", "metadata": {}, "hash": "8c2e11250f0fef41c229ef2475474b332341f69779dee65bdf4108a904624483", "class_name": "RelatedNodeInfo"}}, "text": "Java Downloads | Oracle Skip to content Accessibility Policy Search Country View Accounts Back Cloud Account Sign in to Cloud Sign Up for Free Cloud Tier Oracle Account Sign-In Create an Account Help Sign Out Contact Sales Menu Menu Java Technical Details Java Downloads Looking for other Java downloads? OpenJDK Early Access Builds JRE for Consumers Java 24, Java 21, and earlier versions available now Learn about Java SE Subscription JDK 24 is the latest release of the Java SE Platform. JDK 21 is the latest Long-Term Support (LTS) release of the Java SE Platform. Earlier JDK versions are available below. JDK 24 JDK 21 GraalVM for JDK 24 GraalVM for JDK 21 Java SE Development Kit 24.0.1 downloads JDK 24 binaries are free to use in production and free to redistribute, at no cost, under the Oracle No-Fee Terms and Conditions (NFTC). JDK 24 will receive updates under these terms, until September 2025, when it will be superseded by JDK 25. Linux macOS Windows Product/file description File size Download ARM64 Compressed Archive 229.32 MB https://download.oracle.com/java/24/latest/jdk-24_linux-aarch64_bin.tar.gz ( sha256 ) ARM64 RPM Package 228.92 MB https://download.oracle.com/java/24/latest/jdk-24_linux-aarch64_bin.rpm ( sha256 ) ( OL 8 GPG Key ) x64 Compressed Archive 231.94 MB https://download.oracle.com/java/24/latest/jdk-24_linux-x64_bin.tar.gz ( sha256 ) x64 Debian Package 200.09 MB https://download.oracle.com/java/24/latest/jdk-24_linux-x64_bin.deb ( sha256 ) x64 RPM Package 231.51 MB https://download.oracle.com/java/24/latest/jdk-24_linux-x64_bin.rpm ( sha256 ) ( OL 8 GPG Key ) Product/file description File size Download ARM64 Compressed Archive 225.15 MB https://download.oracle.com/java/24/latest/jdk-24_macos-aarch64_bin.tar.gz ( sha256 ) ARM64 DMG Installer 224.60 MB https://download.oracle.com/java/24/latest/jdk-24_macos-aarch64_bin.dmg ( sha256 ) x64 Compressed Archive 228.12 MB https://download.oracle.com/java/24/latest/jdk-24_macos-x64_bin.tar.gz ( sha256 ) x64 DMG Installer 227.59 MB https://download.oracle.com/java/24/latest/jdk-24_macos-x64_bin.dmg ( sha256 ) Product/file description File size Download x64 Compressed Archive 229.51 MB https://download.oracle.com/java/24/latest/jdk-24_windows-x64_bin.zip ( sha256 ) x64 Installer 205.85 MB https://download.oracle.com/java/24/latest/jdk-24_windows-x64_bin.exe ( sha256 ) x64 MSI Installer 204.60 MB https://download.oracle.com/java/24/latest/jdk-24_windows-x64_bin.msi ( sha256 ) Documentation Download Release information Online Documentation Installation Instructions Release Notes Documentation License JDK 24 Licensing Information User Manual (includes third-party licenses) Certified System Configurations Readme Java Value Engineering Java SE Development Kit 21.0.7 downloads JDK 21 binaries are free to use in production and free to redistribute, at no cost, under the Oracle No-Fee Terms and Conditions (NFTC). JDK 21 will receive updates under the NFTC, until September 2026, a year after the release of the next LTS. Subsequent JDK 21 updates will be licensed under the Java SE OTN License (OTN) and production use beyond the limited free grants of the OTN license will require a fee .", "start_char_idx": 0, "end_char_idx": 3193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c81a152-c40b-4527-8124-d49e24034cf3": {"__data__": {"id_": "6c81a152-c40b-4527-8124-d49e24034cf3", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_0.txt", "file_name": "www.oracle.com_46_0.txt", "file_type": "text/plain", "file_size": 6844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf490124-91f3-4a3d-97c0-927860b1b2e2", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_0.txt", "file_name": "www.oracle.com_46_0.txt", "file_type": "text/plain", "file_size": 6844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1f6fab212a495afbbd1597fe003db3f452f6992de894315396ed24159e9ac42d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "928b5667-e4b0-4bd3-88b1-28dba7a633d6", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_0.txt", "file_name": "www.oracle.com_46_0.txt", "file_type": "text/plain", "file_size": 6844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "146789e09ee2f290867a9a5c51b66a2d640522bcbf67fd73d8b6f9cd494fea58", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ff07176c-b627-4a2a-a54b-45e733ba8659", "node_type": "1", "metadata": {}, "hash": "4896cf9df9fad8564f190ad34594a93768d8f8ecf028014bf453b2ee78f2b1c1", "class_name": "RelatedNodeInfo"}}, "text": "JDK 21 will receive updates under the NFTC, until September 2026, a year after the release of the next LTS. Subsequent JDK 21 updates will be licensed under the Java SE OTN License (OTN) and production use beyond the limited free grants of the OTN license will require a fee . Linux macOS Windows Product/file description File size Download ARM64 Compressed Archive 186.67 MB https://download.oracle.com/java/21/latest/jdk-21_linux-aarch64_bin.tar.gz ( sha256 ) ARM64 RPM Package 186.36 MB https://download.oracle.com/java/21/latest/jdk-21_linux-aarch64_bin.rpm ( sha256 ) ( OL 8 GPG Key ) x64 Compressed Archive 188.52 MB https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.tar.gz ( sha256 ) x64 Debian Package 160.32 MB https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.deb ( sha256 ) x64 RPM Package 188.18 MB https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.rpm ( sha256 ) ( OL 8 GPG Key ) Product/file description File size Download ARM64 Compressed Archive 182.07 MB https://download.oracle.com/java/21/latest/jdk-21_macos-aarch64_bin.tar.gz ( sha256 ) ARM64 DMG Installer 181.37 MB https://download.oracle.com/java/21/latest/jdk-21_macos-aarch64_bin.dmg ( sha256 ) x64 Compressed Archive 184.32 MB https://download.oracle.com/java/21/latest/jdk-21_macos-x64_bin.tar.gz ( sha256 ) x64 DMG Installer 183.65 MB https://download.oracle.com/java/21/latest/jdk-21_macos-x64_bin.dmg ( sha256 ) Product/file description File size Download x64 Compressed Archive 185.97 MB https://download.oracle.com/java/21/latest/jdk-21_windows-x64_bin.zip ( sha256 ) x64 Installer 164.35 MB https://download.oracle.com/java/21/latest/jdk-21_windows-x64_bin.exe ( sha256 ) x64 MSI Installer 163.09 MB https://download.oracle.com/java/21/latest/jdk-21_windows-x64_bin.msi ( sha256 ) Documentation Download Release information Online Documentation Installation Instructions Release Notes Documentation License JDK 21 Licensing Information User Manual (includes third-party licenses) Certified System Configurations Readme Java Value Engineering GraalVM for JDK 24.0.1 downloads GraalVM for JDK 24 binaries are free to use in production and free to redistribute, at no cost, under the GraalVM Free Terms and Conditions (GFTC). GraalVM for JDK 24 will receive updates under these terms, until September 2025, when it will be superseded by GraalVM for JDK 25. Oracle GraalVM uses the Graal just-in-time compiler and includes the Native Image feature as optional early adopter technology. Native Image is extensively tested and supported for use in production, but is not a conformant implementation of the Java Platform. GraalVM for JDK 24 without the Native Image feature included is available for customers at My Oracle Support . Linux macOS Windows Product/file description File size Download ARM64 Compressed Archive 340.25 MB https://download.oracle.com/graalvm/24/latest/graalvm-jdk-24_linux-aarch64_bin.tar.gz ( sha256 ) x64 Compressed Archive 367.06 MB https://download.oracle.com/graalvm/24/latest/graalvm-jdk-24_linux-x64_bin.tar.gz ( sha256 ) Product/file description File size Download ARM64 Compressed Archive 342.24 MB https://download.oracle.com/graalvm/24/latest/graalvm-jdk-24_macos-aarch64_bin.tar.gz ( sha256 ) x64 Compressed Archive 328.48 MB https://download.oracle.com/graalvm/24/latest/graalvm-jdk-24_macos-x64_bin.tar.gz ( sha256 ) Product/file description File size Download x64 Compressed Archive 348.38 MB https://download.oracle.com/graalvm/24/latest/graalvm-jdk-24_windows-x64_bin.zip ( sha256 ) Release information Online Documentation Installation Instructions Release Notes Licensing Information User Manual (includes third-party licenses) Certified System Configurations Java Value Engineering GraalVM for JDK 21.0.7 downloads GraalVM for JDK 21 binaries are free to use in production and free to redistribute, at no cost, under the GraalVM Free Terms and Conditions (GFTC).", "start_char_idx": 2917, "end_char_idx": 6844, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff07176c-b627-4a2a-a54b-45e733ba8659": {"__data__": {"id_": "ff07176c-b627-4a2a-a54b-45e733ba8659", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_1.txt", "file_name": "www.oracle.com_46_1.txt", "file_type": "text/plain", "file_size": 6171, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "356c7340-621d-4bc3-b018-2504dce2f9ae", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_1.txt", "file_name": "www.oracle.com_46_1.txt", "file_type": "text/plain", "file_size": 6171, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "48dccacb89c51005d5c9aa7836d8e2368cbb952a6f019c6324ba30b2b46ff34a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c81a152-c40b-4527-8124-d49e24034cf3", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_0.txt", "file_name": "www.oracle.com_46_0.txt", "file_type": "text/plain", "file_size": 6844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0375dadbd472c21efdd545475fb0e6bbdc2d37d27a03efc3cd5c05e51c2a5c44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80fd1ced-ee9c-451e-adc3-8199e41e3878", "node_type": "1", "metadata": {}, "hash": "ab89d5e237a134845e95bb7637c8f11c0f67e3ac6bb7fcc171519841f9abad67", "class_name": "RelatedNodeInfo"}}, "text": "GraalVM for JDK 21 will receive updates under the GFTC, until September 2026, a year after the release of the next LTS. Subsequent updates of GraalVM for JDK 21 will be licensed under the GraalVM OTN License Including License for Early Adopter Versions (GOTN) and production use beyond the limited free grants of the GraalVM OTN license will require a fee . Oracle GraalVM uses the Graal just-in-time compiler and includes the Native Image feature as optional early adopter technology. Native Image is extensively tested and supported for use in production, but is not a conformant implementation of the Java Platform. GraalVM for JDK 21 without the Native Image feature included is available for customers at My Oracle Support . Linux macOS Windows Product/file description File size Download ARM64 Compressed Archive 308.66 MB https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_linux-aarch64_bin.tar.gz ( sha256 ) x64 Compressed Archive 322.67 MB https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_linux-x64_bin.tar.gz ( sha256 ) Product/file description File size Download ARM64 Compressed Archive 313.03 MB https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_macos-aarch64_bin.tar.gz ( sha256 ) x64 Compressed Archive 301.07 MB https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_macos-x64_bin.tar.gz ( sha256 ) Product/file description File size Download x64 Compressed Archive 310.03 MB https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_windows-x64_bin.zip ( sha256 ) Release information Online Documentation Installation Instructions Release Notes Licensing Information User Manual (includes third-party licenses) Certified System Configurations Java Value Engineering Script-friendly Download URLs The URLs listed above will remain the same for update releases to allow their use in scripts. Learn more about automating these downloads Protect your investment\u2014and more Java SE subscribers get support for JDK 17, receive updates until at least October 2029, are entitled to GraalVM, Java Management Service, and bundled patch releases (BPRs) with fixes not yet available to nonsubscribers, and more. Contact us Java SE subscribers have more choices Also available for development, personal use, and to run other licensed Oracle products. Java 17 GraalVM for JDK 17 Java 11 Java 8 Java 8 Enterprise Performance Pack Java SE Development Kit 17.0.15 downloads The Oracle JDK 17 license changed in October 2024 The Oracle Technology Network License Agreement for Oracle Java SE used for JDK 17 updates 17.0.13 and greater is substantially different from prior Oracle JDK 17 licenses. This license permits certain uses, such as personal use and development use, at no cost -- but other uses authorized under prior Oracle JDK licenses may no longer be available. Please review the terms carefully before downloading and using this product. FAQs are available here . Commercial license and support are available for a low cost with Java SE Universal Subscription .", "start_char_idx": 0, "end_char_idx": 3014, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80fd1ced-ee9c-451e-adc3-8199e41e3878": {"__data__": {"id_": "80fd1ced-ee9c-451e-adc3-8199e41e3878", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_1.txt", "file_name": "www.oracle.com_46_1.txt", "file_type": "text/plain", "file_size": 6171, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "356c7340-621d-4bc3-b018-2504dce2f9ae", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_1.txt", "file_name": "www.oracle.com_46_1.txt", "file_type": "text/plain", "file_size": 6171, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "48dccacb89c51005d5c9aa7836d8e2368cbb952a6f019c6324ba30b2b46ff34a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ff07176c-b627-4a2a-a54b-45e733ba8659", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_1.txt", "file_name": "www.oracle.com_46_1.txt", "file_type": "text/plain", "file_size": 6171, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "fc7c3e3f8b7521907d4315d412db2070befac2c7d7ac7076daa1b7bfb0d614a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30ea4291-7851-4dc0-abca-f740579dee52", "node_type": "1", "metadata": {}, "hash": "1d0d6eafe8b91533c9bfe052925dac04b89ac1b969bbbf494ab6debfe04108c8", "class_name": "RelatedNodeInfo"}}, "text": "Contact us Java SE subscribers have more choices Also available for development, personal use, and to run other licensed Oracle products. Java 17 GraalVM for JDK 17 Java 11 Java 8 Java 8 Enterprise Performance Pack Java SE Development Kit 17.0.15 downloads The Oracle JDK 17 license changed in October 2024 The Oracle Technology Network License Agreement for Oracle Java SE used for JDK 17 updates 17.0.13 and greater is substantially different from prior Oracle JDK 17 licenses. This license permits certain uses, such as personal use and development use, at no cost -- but other uses authorized under prior Oracle JDK licenses may no longer be available. Please review the terms carefully before downloading and using this product. FAQs are available here . Commercial license and support are available for a low cost with Java SE Universal Subscription . JDK 17.0.15 checksums and OL 8 GPG Keys for RPMs Linux macOS Windows Product/file description File size Download ARM64 Compressed Archive 173.03 MB jdk-17.0.15_linux-aarch64_bin.tar.gz ARM64 RPM Package 172.77 MB jdk-17.0.15_linux-aarch64_bin.rpm x64 Compressed Archive 174.71 MB jdk-17.0.15_linux-x64_bin.tar.gz x64 Debian Package 150.18 MB jdk-17.0.15_linux-x64_bin.deb x64 RPM Package 174.43 MB jdk-17.0.15_linux-x64_bin.rpm Product/file description File size Download ARM64 Compressed Archive 168.88 MB jdk-17.0.15_macos-aarch64_bin.tar.gz ARM64 DMG Installer 168.29 MB jdk-17.0.15_macos-aarch64_bin.dmg x64 Compressed Archive 170.93 MB jdk-17.0.15_macos-x64_bin.tar.gz x64 DMG Installer 170.34 MB jdk-17.0.15_macos-x64_bin.dmg Product/file description File size Download x64 Compressed Archive 172.87 MB jdk-17.0.15_windows-x64_bin.zip x64 Installer 154.05 MB jdk-17.0.15_windows-x64_bin.exe x64 MSI Installer 152.80 MB jdk-17.0.15_windows-x64_bin.msi Documentation Download Release information Online Documentation Installation Instructions Release Notes Documentation License JDK 17 Licensing Information User Manual (includes third-party licenses) Certified System Configurations Readme Java Value Engineering GraalVM for JDK 17.0.15 downloads The Oracle GraaalVM for JDK 17 license changed in October 2024 GraalVM OTN License Including License for Early Adopter Versions (GOTN) used for JDK 17 updates 17.0.13 and greater is substantially different from prior Oracle GraaalVM for JDK 17 licenses. This license permits certain uses, such as personal use and development use, at no cost -- but other uses authorized under prior Oracle GraaalVM for JDK licenses may no longer be available. Please review the terms carefully before downloading and using this product. FAQs are available here . Commercial license and support are available for a low cost with Java SE Universal Subscription . Oracle GraalVM uses the Graal just-in-time compiler and includes the Native Image feature as optional early adopter technology. Native Image is extensively tested and supported for use in production, but is not a conformant implementation of the Java Platform. GraalVM for JDK 17 without the Native Image feature included is available for customers at My Oracle Support . GraaalVM for JDK 17.0.15 checksums and OL 8 GPG Keys for RPMs Linux macOS Windows Product/file description File size Download ARM64 Compressed Archive 297.73 MB graalvm-jdk-17.0.15_linux-aarch64_bin.tar.gz x64 Compressed Archive 316.76 MB graalvm-jdk-17.0.15_linux-x64_bin.tar.gz Product/file description File size Download ARM64 Compressed Archive 349.87 MB graalvm-jdk-17.0.15_macos-aarch64_bin.tar.gz x64 Compressed Archive 299.14 MB graalvm-jdk-17.0.15_macos-x64_bin.tar.gz Product/file description File size Download x64 Compressed Archive 304.89 MB graalvm-jdk-17.0.15_windows-x64_bin.zip Release information Online Documentation Installation Instructions Release Notes Licensing Information User Manual (includes third-party licenses) Certified System Configurations Java Value Engineering Java SE Development Kit 11.0.27 Java SE subscribers will receive JDK 11 updates until at", "start_char_idx": 2157, "end_char_idx": 6169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30ea4291-7851-4dc0-abca-f740579dee52": {"__data__": {"id_": "30ea4291-7851-4dc0-abca-f740579dee52", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ebc47b0-9314-40b5-8523-af7cf8afbb3c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "647c206d7b06ab5991b364b60096267e7760051f66ec7bf9852f80c03a58623f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80fd1ced-ee9c-451e-adc3-8199e41e3878", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_1.txt", "file_name": "www.oracle.com_46_1.txt", "file_type": "text/plain", "file_size": 6171, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b225705362edd195ce63311d5663a4568e97ad64d14ecee4520f34a6245e39b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc907492-56b1-4cd7-9452-96f95e4a903a", "node_type": "1", "metadata": {}, "hash": "daf69f3c921675e26f74abd012b8db7ddedc9fe5dada5b22f2d1fda4469604d3", "class_name": "RelatedNodeInfo"}}, "text": "least January 2032 . These downloads can be used for development, personal use, or to run Oracle licensed products. Use for other purposes, including production or commercial use, requires a Java SE Universal Subscription or another Oracle license. Commercial license and support are available for a low cost with Java SE Universal Subscription . JDK 11 software is licensed under the Oracle Technology Network License Agreement for Oracle Java SE . JDK 11.0.27 checksums and OL 8 GPG Keys for RPMs Linux macOS Solaris Windows Product/file description File size Download ARM64 RPM Package 159.72 MB jdk-11.0.27_linux-aarch64_bin.rpm ARM64 Compressed Archive 159.85 MB jdk-11.0.27_linux-aarch64_bin.tar.gz x64 Debian Package 138.84 MB jdk-11.0.27_linux-x64_bin.deb x64 RPM Package 161.14 MB jdk-11.0.27_linux-x64_bin.rpm x64 Compressed Archive 161.28 MB jdk-11.0.27_linux-x64_bin.tar.gz Product/file description File size Download ARM64 Compressed Archive 154.71 MB jdk-11.0.27_macos-aarch64_bin.tar.gz ARM64 DMG Installer 154.27 MB jdk-11.0.27_macos-aarch64_bin.dmg x64 Compressed Archive 156.63 MB jdk-11.0.27_macos-x64_bin.tar.gz x64 DMG Installer 156.18 MB jdk-11.0.27_macos-x64_bin.dmg Product/file description File size Download SPARC Compressed Archive 185.33 MB jdk-11.0.27_solaris-sparcv9_bin.tar.gz Product/file description File size Download x64 Installer 141.81 MB jdk-11.0.27_windows-x64_bin.exe x64 Compressed Archive 159.56 MB jdk-11.0.27_windows-x64_bin.zip Documentation Download Release information Online Documentation Installation instructions Release Notes Documentation license Java SE 11 Licensing Information User Manual (includes 3rd party licenses) Certified System Configurations Readme Java Value Engineering Java SE Development Kit 8u451 Java SE subscribers will receive JDK 8 updates until at least December 2030 . The Oracle JDK 8 license changed in April 2019 The Oracle Technology Network License Agreement for Oracle Java SE is substantially different from prior Oracle JDK 8 licenses. This license permits certain uses, such as personal use and development use, at no cost -- but other uses authorized under prior Oracle JDK licenses may no longer be available. Please review the terms carefully before downloading and using this product. FAQs are available here . Commercial license and support are available for a low cost with Java SE Universal Subscription . JDK 8 software is licensed under the Oracle Technology Network License Agreement for Oracle Java SE .", "start_char_idx": 0, "end_char_idx": 2498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc907492-56b1-4cd7-9452-96f95e4a903a": {"__data__": {"id_": "bc907492-56b1-4cd7-9452-96f95e4a903a", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ebc47b0-9314-40b5-8523-af7cf8afbb3c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "647c206d7b06ab5991b364b60096267e7760051f66ec7bf9852f80c03a58623f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30ea4291-7851-4dc0-abca-f740579dee52", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a61ddaa028d40a8264bdef5d029dabea109528491477c1492309fefcef7b5857", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "180c9790-9860-495a-8979-ac5b6b2ff9a9", "node_type": "1", "metadata": {}, "hash": "6953dcbc6b6532228a12db2b1aed5860c7775d8356c2cfede7241fd0d7decae4", "class_name": "RelatedNodeInfo"}}, "text": "The Oracle JDK 8 license changed in April 2019 The Oracle Technology Network License Agreement for Oracle Java SE is substantially different from prior Oracle JDK 8 licenses. This license permits certain uses, such as personal use and development use, at no cost -- but other uses authorized under prior Oracle JDK licenses may no longer be available. Please review the terms carefully before downloading and using this product. FAQs are available here . Commercial license and support are available for a low cost with Java SE Universal Subscription . JDK 8 software is licensed under the Oracle Technology Network License Agreement for Oracle Java SE . Java SE 8u451 checksums and OL 8 GPG Keys for RPMs Linux macOS Solaris Windows Product/file description File size Download ARM64 RPM Package 71.79 MB jdk-8u451-linux-aarch64.rpm ARM64 Compressed Archive 71.97 MB jdk-8u451-linux-aarch64.tar.gz x86 RPM Package 81.58 MB jdk-8u451-linux-i586.rpm x86 Compressed Archive 78.57 MB jdk-8u451-linux-i586.tar.gz x64 RPM Package 78.71 MB jdk-8u451-linux-x64.rpm x64 Compressed Archive 75.60 MB jdk-8u451-linux-x64.tar.gz Product/file description File size Download ARM64 Compressed Archive 74.79 MB jdk-8u451-macosx-aarch64.tar.gz ARM64 DMG Installer 118.19 MB jdk-8u451-macosx-aarch64.dmg x64 Compressed Archive 75.29 MB jdk-8u451-macosx-x64.tar.gz x64 DMG Installer 119.52 MB jdk-8u451-macosx-x64.dmg Product/file description File size Download SPARC 64-bit (SVR4 package) 118.45 MB jdk-8u451-solaris-sparcv9.tar.Z SPARC 64-bit Compressed Archive 84.40 MB jdk-8u451-solaris-sparcv9.tar.gz x64 (SVR4 package) 119.44 MB jdk-8u451-solaris-x64.tar.Z x64 Compressed Archive 82.33 MB jdk-8u451-solaris-x64.tar.gz Product/file description File size Download x86 Compressed Archive 80.07 MB jdk-8u451-windows-i586.zip x86 Installer 86.98 MB jdk-8u451-windows-i586.exe x64 Compressed Archive 79.80 MB jdk-8u451-windows-x64.zip x64 Installer 89.15 MB jdk-8u451-windows-x64.exe Documentation Download JRE 8 Java SE Runtime Environment 8u451 JRE 8 software is licensed under the Oracle Technology Network License Agreement for Oracle Java SE .", "start_char_idx": 1844, "end_char_idx": 3972, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "180c9790-9860-495a-8979-ac5b6b2ff9a9": {"__data__": {"id_": "180c9790-9860-495a-8979-ac5b6b2ff9a9", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ebc47b0-9314-40b5-8523-af7cf8afbb3c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "647c206d7b06ab5991b364b60096267e7760051f66ec7bf9852f80c03a58623f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc907492-56b1-4cd7-9452-96f95e4a903a", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "18b19b8ba536107adf69247f237b1201435fac71059f764235470f77ce327dce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be19498c-230e-484c-ad28-02850c920819", "node_type": "1", "metadata": {}, "hash": "cc87faed2681507ae05dce0fdde1e23f30edf6bc7d62d82e8a9d5ffa21d71629", "class_name": "RelatedNodeInfo"}}, "text": "Linux macOS Solaris Windows Product/file description File size Download x86 RPM Package 51.07 MB jre-8u451-linux-i586.rpm x86 Compressed Archive 48.03 MB jre-8u451-linux-i586.tar.gz x64 RPM Package 48.19 MB jre-8u451-linux-x64.rpm x64 Compressed Archive 45.04 MB jre-8u451-linux-x64.tar.gz Product/file description File size Download x64 DMG Installer 46.89 MB jre-8u451-macosx-x64.dmg x64 Compressed Archive 40.25 MB jre-8u451-macosx-x64.tar.gz ARM64 DMG Installer 46.04 MB jre-8u451-macosx-aarch64.dmg ARM64 Compressed Archive 39.47 MB jre-8u451-macosx-aarch64.tar.gz Product/file description File size Download SPARC 64-bit Compressed Archive 53.32 MB jre-8u451-solaris-sparcv9.tar.gz x64 Compressed Archive 51.25 MB jre-8u451-solaris-x64.tar.gz Product/file description File size Download x86 Compressed Archive 44.05 MB jre-8u451-windows-i586.zip x86 Online Installer 2.26 MB jre-8u451-windows-i586-iftw.exe x86 Offline Installer 35.95 MB jre-8u451-windows-i586.exe x64 Compressed Archive 46.09 MB jre-8u451-windows-x64.zip x64 Installer 38.41 MB jre-8u451-windows-x64.exe Server JRE 8 Server JRE (Java SE Runtime Environment) 8u451 Server JRE 8 software is licensed under the Oracle Technology Network License Agreement for Oracle Java SE Linux Solaris Windows Product/file description File size Download x64 Compressed Archive 52.97 MB server-jre-8u451-linux-x64.tar.gz Product/file description File size Download SPARC 64-bit 65.16 MB server-jre-8u451-solaris-sparcv9.tar.gz x64 Compressed Archive 63.08 MB server-jre-8u451-solaris-x64.tar.gz Product/file description File size Download x64 Compressed Archive 52.64 MB server-jre-8u451-windows-x64.zip Software developers: Java SE Development Kit (JDK) For Java developers. Includes a complete JRE plus tools for developing, debugging, and monitoring Java applications. Running headless Linux workloads at or near your systems' CPU or memory limits Enterprise Performance Pack brings significant memory and performance improvements including modern garbage collection algorithms, reduced memory usage and many other optimizations. Learn more Administrators running applications on a server Server Java Runtime Environment (Server JRE). For deploying Java applications on servers. Includes tools for JVM monitoring and tools commonly required for server applications, but does not include browser integration (Java plug-in), auto-update, or an installer. Learn more End user running Java on a desktop: Java Runtime Environment (JRE) Covers most end-users", "start_char_idx": 3973, "end_char_idx": 6484, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "be19498c-230e-484c-ad28-02850c920819": {"__data__": {"id_": "be19498c-230e-484c-ad28-02850c920819", "embedding": null, "metadata": {"file_path": "docs\\java\\www.oracle.com_46_3.txt", "file_name": "www.oracle.com_46_3.txt", "file_type": "text/plain", "file_size": 1288, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "17aa85d7-68b4-4c16-afdb-cb1dd9056ba9", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_3.txt", "file_name": "www.oracle.com_46_3.txt", "file_type": "text/plain", "file_size": 1288, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b950d513af45aa7a69ff45b39515f8265fbe605a2a6bf088713a970e0a0d91c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "180c9790-9860-495a-8979-ac5b6b2ff9a9", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "2ef4b67fc6bca8b4829675da34f02a38f2f442c2b7c3c1c9787a99b9ebeddf79", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a7a4db25-63ce-431d-ac62-a36072e4dbe7", "node_type": "1", "metadata": {}, "hash": "be64177df1920b9ba4e3a6c28ed32b17873b7dcc04948791ad17c74903975590", "class_name": "RelatedNodeInfo"}}, "text": "needs. Contains everything required to run Java applications on your system. Release information Online Documentation Installation Instructions Release Notes Java SE Licensing Information User Manual (includes third-party licenses) Certified System Configurations JDK ReadMe JRE ReadMe Demos and Samples Archive Java Value Engineering Java 8 Enterprise Performance Pack These downloads can be used for development, personal use, or within Oracle Cloud. Use for other purposes, including production or commercial use, requires a Java SE subscription product. Commercial license and support are available for a low cost with Java SE Universal Subscription . Java 8 Enterprise Performance Pack is licensed under the Oracle Technology Network License Agreement for Oracle Java SE . Java SE 8u451 checksums Linux Product/file description File size Download ARM64 RPM Package 53.09 MB jdk-8u451-perf-linux-aarch64.rpm ARM64 Compressed Archive 53.20 MB jdk-8u451-perf-linux-aarch64.tar.gz x64 RPM Package 55.37 MB jdk-8u451-perf-linux-x64.rpm x64 Compressed Archive 57.57 MB jdk-8u451-perf-linux-x64.tar.gz Release information Online Documentation Installation Instructions Release Notes Java SE Licensing Information User Manual (includes third-party licenses) JDK ReadMe Java Value Engineering", "start_char_idx": 0, "end_char_idx": 1288, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7a4db25-63ce-431d-ac62-a36072e4dbe7": {"__data__": {"id_": "a7a4db25-63ce-431d-ac62-a36072e4dbe7", "embedding": null, "metadata": {"file_path": "docs\\java\\www.programiz.com_11_0.txt", "file_name": "www.programiz.com_11_0.txt", "file_type": "text/plain", "file_size": 5514, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f263589a-3642-4dca-98e7-386bebefcbac", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.programiz.com_11_0.txt", "file_name": "www.programiz.com_11_0.txt", "file_type": "text/plain", "file_size": 5514, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cba307cc553b57e77ff4c58cc02240e964dd00320f32ba28bdd16de61a12f9ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be19498c-230e-484c-ad28-02850c920819", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.oracle.com_46_3.txt", "file_name": "www.oracle.com_46_3.txt", "file_type": "text/plain", "file_size": 1288, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b950d513af45aa7a69ff45b39515f8265fbe605a2a6bf088713a970e0a0d91c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8a36c8c-a59f-48ba-814a-a39735201c2b", "node_type": "1", "metadata": {}, "hash": "07cc60b4725299d5422aaf62d3551ad385d6b473e402596eedd20b635b45390c", "class_name": "RelatedNodeInfo"}}, "text": "Learn Java Programming Tutorials Courses Python JavaScript TypeScript SQL HTML CSS C C++ Java R RUST Golang Kotlin Swift C# DSA Ruby Become a certified Java programmer. ENROLL Popular Tutorials Java \"Hello World\" Program Java for Loop Arrays in Java Interfaces in Java Java ArrayList Start Learning Java Popular Examples Check prime number Print the Fibonacci series Print Pyramids and Patterns Multiply two matrices Find the standard deviation Explore Java Examples Reference Materials String ArrayList HashMap Math View all Created with over a decade of experience. Learn Practice Compete Learn Python Learn HTML Learn JavaScript Learn SQL Learn DSA Learn C Learn C++ Learn Java View all Courses on Python Basics Python Intermediate C++ Basics C++ Intermediate C++ OOP C Programming Java Basics Java Intermediate Java OOP View all Courses on Python Challenges JavaScript Challenges Java Challenges C++ Challenges C Challenges View all Challenges on Learn Practice Compete Certification Courses Created with over a decade of experience and thousands of feedback. Learn Python Learn HTML Learn JavaScript Learn SQL Learn DSA View all Courses on Learn C Learn C++ Learn Java Python JavaScript TypeScript SQL HTML CSS C C++ Java More languages Become a certified Java programmer. Try Programiz PRO! Popular Tutorials Java \"Hello World\" Program Java for Loop Arrays in Java Interfaces in Java Java ArrayList Start Learning Java All Java Tutorials Reference Materials String ArrayList HashMap Math View all Python JavaScript C C++ Java R Kotlin Become a certified Java programmer. Try Programiz PRO! Popular Examples Check prime number Print the Fibonacci series Print Pyramids and Patterns Multiply two matrices Find the standard deviation All Java Examples Learn Java Programming Tutorials Courses Examples References Compiler Recommended Course: Master Java Programming Perfect for beginners serious about building a career in Java. Created by the Programiz team with over a decade of experience. Try Now Enrollment: 101k Practice Problems: 292+ Projects: 6+ Certifications Java is a platform-independent language that runs on 3 billion devices worldwide. It is widely used in enterprise applications, android development, big data, and legacy software, where reliability and security are crucial. You can often find universities teaching Java as a part of the curriculum as it focuses on writing clean and structured code from the beginning. With a competitive base salary, Java is in high demand, especially for large enterprise systems. In this guide, we will cover: Beginner's Guide to Java Is Java for you? Best Way to Learn Java How to Run Java? If you are simply looking to learn Java step-by-step, you can follow our free tutorials in the next section. Beginner's Guide to Java These tutorials will provide you with a solid foundation in Java and prepare you for the next steps in your career. Java Introduction Get Started With Java Your First Java Program Java Comments Java Fundamentals Java Variables and Literals Java Data Types (Primitive) Java Operators Java Basic Input and Output Java Expressions, Statements and Blocks Java Flow Control Java if...else Statement Java Ternary Operator Java for Loop Java for-each Loop Java while and do...while Loop Java break Statement Java continue Statement Java switch Statement Java Arrays Java Arrays Java Multidimensional Arrays Java Copy Arrays Java OOP(I) Java Class and Objects Java Methods Java Method Overloading Java Constructors Java Static Keyword Java Strings Java Access Modifiers Java this Keyword Java final keyword Java Recursion Java instanceof Operator Java OOP(II) Java Inheritance Java Method Overriding Java super Java Abstract Class and Abstract Methods Java Interface Java Polymorphism Java Encapsulation Java OOP (III) Java Nested and Inner Class Java Nested Static Class Java Anonymous Class Java Singleton Class Java enums Java enum Constructor Java enum Strings Java Reflection Java Package Java Exception Handling Java Exceptions Java Exception Handling Java try...catch Java throw and throws Java catch Multiple Exceptions Java try-with-resources Java Annotations Java Annotation Types Java Logging Java Assertions Java List Java Collections Framework Java Collection Interface Java List Java ArrayList Java Vector Java Stack Class Java Queue Java Queue Interface Java PriorityQueue Java Deque Interface Java LinkedList Java ArrayDeque Java BlockingQueue Java ArrayBlockingQueue Java LinkedBlockingQueue Java Map Java Map Interface Java HashMap Java LinkedHashMap Java WeakHashMap Java EnumMap Java SortedMap Interface Java NavigableMap Interface Java TreeMap Java ConcurrentMap Interface Java ConcurrentHashMap Java Set Java Set Interface Java HashSet Class Java EnumSet Java LinkedHashSet Java SortedSet Interface Java NavigableSet Interface Java TreeSet Java Algorithms Java Iterator Interface Java ListIterator Interface Java I/o Streams Java I/O Streams Java InputStream Class Java OutputStream Class Java FileInputStream Class Java FileOutputStream Class Java ByteArrayInputStream Class Java ByteArrayOutputStream Class Java ObjectInputStream Class Java ObjectOutputStream Class Java BufferedInputStream Class Java BufferedOutputStream Class Java PrintStream Class Java Reader/Writer Java File Class Java Reader Class Java Writer Class Java InputStreamReader Class Java OutputStreamWriter Class Java FileReader Class Java FileWriter Class Java BufferedReader Java BufferedWriter Class Java StringReader Class Java StringWriter", "start_char_idx": 0, "end_char_idx": 5514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8a36c8c-a59f-48ba-814a-a39735201c2b": {"__data__": {"id_": "d8a36c8c-a59f-48ba-814a-a39735201c2b", "embedding": null, "metadata": {"file_path": "docs\\java\\www.programiz.com_11_1.txt", "file_name": "www.programiz.com_11_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01647296-4f7d-4bd9-a7f4-29f3d9ef953f", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.programiz.com_11_1.txt", "file_name": "www.programiz.com_11_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a0d581666c8895f1ccf734a7165fd133870c1cfc7f5f25d60d284b24f76a464d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a7a4db25-63ce-431d-ac62-a36072e4dbe7", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.programiz.com_11_0.txt", "file_name": "www.programiz.com_11_0.txt", "file_type": "text/plain", "file_size": 5514, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "cba307cc553b57e77ff4c58cc02240e964dd00320f32ba28bdd16de61a12f9ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "063e5c85-1b18-4fc5-9972-8d9941053ef5", "node_type": "1", "metadata": {}, "hash": "e30de08bd2667b6ad8e71b689635816984fd8084053b40ed930ffe519ad08ce4", "class_name": "RelatedNodeInfo"}}, "text": "Class Java PrintWriter Class Additional Topics Java Keywords and Identifiers Java Operator Precedence Java Bitwise and Shift Operators Java Scanner Class Java Type Casting Java Wrapper Class Java autoboxing and unboxing Java Lambda Expressions Java Generics Java File Class Nested Loop in Java Java Command-Line Arguments Is Java for you? Choosing whether to learn Java depends on your interests in programming and your career goals. Java from a Learning Perspective If you're aiming to learn a flexible programming language, Java might be the right choice for you. Let's see an example: main.java public class Main { public static void main(String[] args) { Calculator calc = new Calculator(); System.out.println(calc.add(5, 10)); } } class Calculator { public int add(int x, int y) { return x + y; } } Don't worry if you don't understand this code yet. As you can see, Java follows a modular structure encouraging you to write flexible and scalable code right from the beginning of your programming journey. Universities often use Java to introduce fundamental software engineering concepts, data structures and algorithms to students. Additionally, Java has one of the best documentation from Oracle, which simplifies the learning process for beginners. Java as Career Choice Java is a versatile programming language that supports many modern software technologies. It is commonly used in: Enterprise Software Development Android App Development Web Server Applications Game Development Big Data Technologies Learning Java opens up a wide range of career opportunities for you. However, there are certain areas where choosing Java may not be your best choice. For example, if you are interested in web development, low-level system programming, or data analytics and machine learning, then Java is not the ideal option. In these cases, alternatives such as JavaScript for web development, Python for Data Analysis and Machine Learning, and C or C++ for low-level system programming may be more suitable. Ultimately, your career choice can guide you in selecting which programming language to learn. Best Way to Learn Java There is no right or wrong to learn Java. It all depends on your learning style and pace. In this section, we have included the best Java learning resources tailored to your learning preferences, be it text-based, video-based, or interactive courses. Text-based Tutorial Best: if you are committed to learning Java but do not want to spend on it If you want to learn Java for free with a well-organized, step-by-step tutorial, you can use our free Java tutorials . Our tutorials will guide you through Java one step at a time, using practical examples to strengthen your foundation. Interactive Course Best: if you want hands-on learning, get your progress tracked, and maintain a learning streak Learning to code is tough. It requires dedication and consistency, you need to write tons of code yourself. While videos and tutorials provide you with a step-by-step guide, they lack hands-on experience and structure. Recognizing all these challenges, Programiz offers a premium Learn Java Course that allows you to gain hands-on learning experience by solving challenges, building real-world projects, and tracking your progress. There is no easy shortcut to learning coding! Online Video Best: if you are an audio-visual learner and learn by watching others code and following along If you're more of a visual learner, there's a Java full course by Programming with Mosh that will guide you on your journey to Java programming. Mobile App Best: if you are a casual and hobby learner who wants to just get to know Java While it's possible to learn Java from mobile apps, it's not the ideal way because writing code can be challenging. Additionally, it's difficult to build real-world projects with multiple files on mobile devices. Nevertheless, you can use these apps to try things out. Learn Java Sololearn Important: You cannot learn to code without developing the habit of writing code yourself. Therefore, whatever method you choose, always write code. While writing code, you will encounter errors. Don't worry about them, try to understand them and find solutions. Remember, programming is all about solving problems, and errors are part of the process. How to Run Java? 1. Run Java in your browser. We have created an online editor to run Java directly on your browser. You don't have to go through a tedious installation process. You just can start coding directly. Run Java Online 2. Install Java on Your computer. Once you start writing complex programs and creating projects, you should definitely install Java on your computer. It's needed especially when you are creating projects with multiple files and folders. To install Java on your device, you can use this guide. Getting Started with Java Learn how you can install and use Java on your own computer. Learn more", "start_char_idx": 0, "end_char_idx": 4905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "063e5c85-1b18-4fc5-9972-8d9941053ef5": {"__data__": {"id_": "063e5c85-1b18-4fc5-9972-8d9941053ef5", "embedding": null, "metadata": {"file_path": "docs\\java\\www.sitepoint.com_18_0.txt", "file_name": "www.sitepoint.com_18_0.txt", "file_type": "text/plain", "file_size": 2866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19a59804-9e6b-4b81-b9ef-adfda128916c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.sitepoint.com_18_0.txt", "file_name": "www.sitepoint.com_18_0.txt", "file_type": "text/plain", "file_size": 2866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "306fd5d6177cf3ae299d3d3dbd66435150e7223b5d1bed2cb0c4407b6ddc1595", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8a36c8c-a59f-48ba-814a-a39735201c2b", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.programiz.com_11_1.txt", "file_name": "www.programiz.com_11_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "a0d581666c8895f1ccf734a7165fd133870c1cfc7f5f25d60d284b24f76a464d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f36007f-1d8a-478b-9f10-a038793e218a", "node_type": "1", "metadata": {}, "hash": "bbd7e6c0f2748398c8b58978b77df6dc0c3bd9f50658a08d965cf91790c9051c", "class_name": "RelatedNodeInfo"}}, "text": "Java: Learn Java, Swing, Servlets & More - SitePoint MongoDB Atlas is built for every app. Start Building MongoDB Atlas is built for every app. Start Building Keep up to date on current trends and technologies Java Collections in Java SitePoint Team How to Inject OSGi Dependencies in Custom Portlets in Liferay 7 Shaik Ismail Building a Lean Modular Monolith with OSGi Christian Schneider Using Java Bean Validation for Method Parameters and Return Values Alejandro Gervasio Building your Front End with Maven: Simple Resources Graham Cox Top 5 PaaS Solutions for Developing Java Applications Ipseeta Priyadarshini Top 5 IaaS Solutions for Hosting Java Applications Ipseeta Priyadarshini How to Run Multiple Versions of All Your Dev Tools with Jenv Graham Cox Lessons in Abstraction: What FP Can Teach OOP Pierre-Yves Saumont Java\u00e2\u0080\u0099s While and Do-While Loops in Five Minutes Indrek Ots Three Design Patterns That Use Inversion of Control Alejandro Gervasio Validate Object Graphs with Java Bean Validation\u00e2\u0080\u0099s @Valid Annotation Alejandro Gervasio Six Ways to Functional FizzBuzz with Vavr Gregor Trefs Java Bean Validation\u00e2\u0080\u0099s validateProperty() and validateValue() in Three Minutes Alejandro Gervasio Which Java Logging Framework Has the Best Performance? Stephen Connolly 10 Things You Didn\u00e2\u0080\u0099t Know About Java Lukas Eder How to Select POJOs with a CriteriaQuery Thorben Janssen Why Maven Cannot Generate Your Module Declaration Robert Scholte Java\u00e2\u0080\u0099s Binary Search API in Five Minutes Jackie Ng Fundamentals of Java Enum Types Valdio Veliu Java\u00e2\u0080\u0099s Ternary Operator in Three Minutes Indrek Ots Implementing a Spring Websocket Server and Client Jay Sridhar How Project Amber Will Revolutionize Java Nicolai Parlog What Is Referential Transparency? Pierre-Yves Saumont Is An Agile Java Standard Possible? Simon Ritter Java Else If Statement in Five Minutes Indrek Ots Deep Dive into Java 9\u00e2\u0080\u0099s Stack-Walking API Arnaud Roger Understanding Java\u00e2\u0080\u0099s Reflection API in Five Minutes Nicolai Parlog PHP-Style JSON Parsing in Java with Jsoniter Tao Wen Java\u00e2\u0080\u0099s Synchronized Keyword in Three Minutes Ivan Mushketyk Lazy Computations in Java with a Lazy Type Pierre-Yves Saumont The Dangers of Race Conditions in Five Minutes Ivan Mushketyk Showing 32 of 97 SitePoint Stuff we do Premium Newsletters Learning paths Library Forums Contact Contact us FAQ Publish your book with us Write an article with us Advertise About Our story Corporate memberships Start free trial Login Connect RSS Facebook Instagram Twitter (X) SitePoint Subscribe to our newsletter Get the freshest news and resources for developers, designers and digital creators in your inbox each week \u00c2\u00a9 2000 \u00e2\u0080\u0093 2025 SitePoint Pty. Ltd. Back to top This site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply. Privacy Policy Terms of Service", "start_char_idx": 0, "end_char_idx": 2834, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f36007f-1d8a-478b-9f10-a038793e218a": {"__data__": {"id_": "1f36007f-1d8a-478b-9f10-a038793e218a", "embedding": null, "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_0.txt", "file_name": "www.stackoverflow.com_41_0.txt", "file_type": "text/plain", "file_size": 5118, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00dd30a4-e18f-41c2-8188-b5e6f5923f89", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_0.txt", "file_name": "www.stackoverflow.com_41_0.txt", "file_type": "text/plain", "file_size": 5118, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1f5f70d8d4b3ece40f5c745808eee531293054d776155356988cf80ac4678fda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "063e5c85-1b18-4fc5-9972-8d9941053ef5", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.sitepoint.com_18_0.txt", "file_name": "www.sitepoint.com_18_0.txt", "file_type": "text/plain", "file_size": 2866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "306fd5d6177cf3ae299d3d3dbd66435150e7223b5d1bed2cb0c4407b6ddc1595", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8d5ba2e6-ec9c-4989-907b-0a767714462d", "node_type": "1", "metadata": {}, "hash": "f7e9ccc723fd92eac40f153361d0a719589335c73af1387aa8f55a880f108d1e", "class_name": "RelatedNodeInfo"}}, "text": "Newest 'java' Questions - Stack Overflow Collectives\u2122 on Stack Overflow Find centralized, trusted content and collaborate around the technologies you use most. Learn more about Collectives Teams Q&A for work Connect and share knowledge within a single location that is structured and easy to search. Learn more about Teams 1,919,706 questions Newest Active Bountied 2 Unanswered More Bountied 2 Unanswered Frequent Score Trending Week Month Unanswered (my tags) Filter 0 votes 0 answers 15 views Writing large report with a template to byte array using SXSSF Currently I have a working excel report writer with the following function using JXLS 2.14.0: public byte[] generateReport(String template, Map<String, Object> data) throws Exception { try (... java apache-poi jxls Aldibe 1,347 asked 35 mins ago -3 votes 0 answers 26 views Are there drawbacks of using class methods vs Mapper classes for Entity-DTO conversion? [closed] Spring Boot application. I need to convert between entities and DTO objects. I've been using a dedicated Mapper class for these conversions, but I recently discovered that my company uses static ... java dto class-method single-responsibility-principle Ryley38 357 asked 52 mins ago 0 votes 0 answers 25 views How to use libjpeg in Java I want to use libjpeg in Spring Boot, but I cannot find an available dependency package, so could you help me? My attempt: Use ome.turbojpeg, I download the jar, and it has a .dylib file, but I can't ... java spring-boot libjpeg libjpeg-turbo shihui wei 1 asked 2 hours ago 0 votes 1 answer 41 views Spring Boot project not recognizing Application.java on classpath \u2013 \"Unsupported operation\" after trying to add source path I'm working on a Spring Boot project and trying to run/debug the main class Application.java, but the IDE (VS Code) keeps showing the following error: The file Application.java isn't on the classpath,... java spring-boot SAUL ALVES 11 asked 5 hours ago 0 votes 0 answers 27 views Query Regarding ML-KEM Support with Bouncy Castle 1.80 in Maven Spring Boot Application I have a query regarding the use of the Bouncy Castle library for post-quantum cryptography (PQC) in my Spring Boot application. I am using Java version 21, Bouncy Castle version 1.80, which supports ... java maven ssl bouncycastle post-quantum-cryptography harish balaji 31 asked 5 hours ago 0 votes 0 answers 24 views How can I use TeaVM to convert Java code into WebAssembly (Wasm) for use in web pages? Java code example package com.lson; import org.teavm.jso.JSExport; public class JsTest { private static JsTest instance = new JsTest(); public static void main(String[] args) { // ... javascript java teavm Lson 307 asked 5 hours ago -1 votes 0 answers 23 views OpenGL Shadowmap doesn't render correctly when object moves Right now I'm attempting to implement point shadows in a LWJGL 3 engine, however I'm noticing that the shadowmap starts having issues once the position or rotation vectors are non-zero. Test room when ... java opengl glsl lwjgl shadow brianna stafford 1 asked 9 hours ago -3 votes 0 answers 50 views How to properly validate fields in a Java factory class before creating an object? [closed] package za.co.admatech.factory; /** * CustomerFactory.java * CustomerFactory Factory class * * Author: Rorisang Makgana (xxxxxxxxx) */ import za.co.admatech.domain.*; import za.co.admatech.util.... java Franco Lukhele 1 asked 11 hours ago 0 votes 0 answers 24 views Interactive Markdown rendering with LaTeX and copy button I'm working on an AI code assistant plugin (think Cursor-lite) and I've hit a roadblock that's driving me crazy. Hoping someone here has dealt with something similar. One of the features I'm working ... java kotlin intellij-idea jetbrains-ide jetbrains-plugin Hamza Gbada 16 asked 11 hours ago 0 votes 1 answer 33 views Handling optional search parameters in Criteria API Imagine I have optional search parameters that can be null. Is there a more concise alternative for checking each of them explicitly before adding a jakarta.persistence.criteria.Predicate to some ... java hibernate jpa spring-data criteria Sergey Zolotarev 1,925 asked 13 hours ago 0 votes 1 answer 34 views How do you force a Flux to pull or implement backpressure limits?", "start_char_idx": 0, "end_char_idx": 4248, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8d5ba2e6-ec9c-4989-907b-0a767714462d": {"__data__": {"id_": "8d5ba2e6-ec9c-4989-907b-0a767714462d", "embedding": null, "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_0.txt", "file_name": "www.stackoverflow.com_41_0.txt", "file_type": "text/plain", "file_size": 5118, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00dd30a4-e18f-41c2-8188-b5e6f5923f89", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_0.txt", "file_name": "www.stackoverflow.com_41_0.txt", "file_type": "text/plain", "file_size": 5118, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1f5f70d8d4b3ece40f5c745808eee531293054d776155356988cf80ac4678fda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f36007f-1d8a-478b-9f10-a038793e218a", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_0.txt", "file_name": "www.stackoverflow.com_41_0.txt", "file_type": "text/plain", "file_size": 5118, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e6c80c8b9eaacc9e0d125e2e4501112f77284542a6e03dbdaa1166b58dfcb4d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f02a0b14-51fd-43af-9cd7-b8e209a29fde", "node_type": "1", "metadata": {}, "hash": "1ad981b1b876683049f9489c7a0f0e16ed78c966f33c0acbb2859ad44f3e2649", "class_name": "RelatedNodeInfo"}}, "text": "Hoping someone here has dealt with something similar. One of the features I'm working ... java kotlin intellij-idea jetbrains-ide jetbrains-plugin Hamza Gbada 16 asked 11 hours ago 0 votes 1 answer 33 views Handling optional search parameters in Criteria API Imagine I have optional search parameters that can be null. Is there a more concise alternative for checking each of them explicitly before adding a jakarta.persistence.criteria.Predicate to some ... java hibernate jpa spring-data criteria Sergey Zolotarev 1,925 asked 13 hours ago 0 votes 1 answer 34 views How do you force a Flux to pull or implement backpressure limits? I'm attempting to open a file and reading lines through a Flux. I would then like X number of workers to process lines concurrently. Those workers may be slow and so I would like to prevent the ENTIRE ... java project-reactor flux CoryO 533 asked 18 hours ago 0 votes 0 answers 16 views org.graalvm.polyglot.PolygletException: TypeError: invokeMember (updateRequest) on java file `FEATUREfile YAML file Payloadtemplate While i was executing karate TestRunner.java getting error as org.graalvm.polyglot.PolygletException: TypeError: invokeMember (updateRequest) on utils.... java casting typeerror karate invokemember sai kiran 1 asked 19 hours ago 1 vote 1 answer 66 views Dockerized Spring Boot application not responding to requests, while non-Dockerized version works Problem: I have Dockerized a Spring Boot application, but when I run the container, it doesn't", "start_char_idx": 3616, "end_char_idx": 5114, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f02a0b14-51fd-43af-9cd7-b8e209a29fde": {"__data__": {"id_": "f02a0b14-51fd-43af-9cd7-b8e209a29fde", "embedding": null, "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_1.txt", "file_name": "www.stackoverflow.com_41_1.txt", "file_type": "text/plain", "file_size": 3347, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e3697d59-355d-4095-b8b6-86a6eba6b1bc", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_1.txt", "file_name": "www.stackoverflow.com_41_1.txt", "file_type": "text/plain", "file_size": 3347, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "40f2ecfbb1c8970239235123b7e2be389614f45d1b0b5f97ea336c62da037156", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d5ba2e6-ec9c-4989-907b-0a767714462d", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_0.txt", "file_name": "www.stackoverflow.com_41_0.txt", "file_type": "text/plain", "file_size": 5118, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1a4e987f1a328fd1e4ceb8c38afde1ae73c3d62e5f5c213d235899698a0c3455", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2525e28-d628-4082-bc0c-fb74737a83fa", "node_type": "1", "metadata": {}, "hash": "db064c0079df335a4ffb8cecf0249006e4ad95f6eff9319bdbfed36156fd5f4a", "class_name": "RelatedNodeInfo"}}, "text": "respond to any HTTP requests. The non-Dockerized version works fine. How should this issue be handled? ... java spring-boot docker rest dockerfile Gehan 696 asked 21 hours ago 0 votes 0 answers 30 views How to use tf.withControlDependencies in tensorflow Java API? I want to put two tensors into a map, and then get one tensor from the map. To ensure tf.tensorMapInsert is executed, I use tf.withControlDependencies - but it does not work. Here is my code: Operand&... java tensorflow control-flow Mingxi 1 asked yesterday -3 votes 0 answers 42 views These client/server functions aren't working on WAN while working on LAN (I'm sure there are no problems with the firewall or portforwarding) [closed] Server: serverSocket = new ServerSocket(); serverSocket.setReuseAddress(true); serverSocket.bind(new InetSocketAddress(port)); serverSocket.setSoTimeout(TIME_OUT); LOGGER.info(\"Waiting for ... java sockets network-programming tcp wan Jes\u00fas Mar\u00eda Rey Sen\u00edn 1 asked yesterday 15 30 50 per page 1 2 3 4 5 \u2026 127981 Next The Overflow Blog Can a dev environment spark joy? The Android team thinks so. WBIT #8: Typescript for gut biomes Featured on Meta Two New Chat Rooms Experiment Geared Towards New Users How Can We Bring More Fun to the Stack Ecosystem? Community Ideas Welcome! How can I revert the style/layout changes to comments? Policy: Generative AI (e.g., ChatGPT) is banned 2025 Moderator Election Q&A \u2013 Question Collection Related Tags android \u00d7 282014 spring \u00d7 130961 swing \u00d7 79919 spring-boot \u00d7 79256 eclipse \u00d7 59583 hibernate \u00d7 59510 arrays \u00d7 52454 maven \u00d7 49093 multithreading \u00d7 39605 json \u00d7 39354 xml \u00d7 36568 string \u00d7 32757 spring-mvc \u00d7 32302 jpa \u00d7 31950 mysql \u00d7 30676 jsp \u00d7 27200 arraylist \u00d7 26477 javafx \u00d7 25194 tomcat \u00d7 23733 regex \u00d7 23567 android-studio \u00d7 23210 servlets \u00d7 23123 jdbc \u00d7 22734 selenium \u00d7 21819 javascript \u00d7 21262 more related tags Hot Network Questions 'Norm' or 'norm induced by an inner product'? Can I stay in China long-term on Q2 visa The Longest Achievable Run of Square Totals on an n \u00d7 n Grid Brutal Strike and multiple sources of Advantage Why don't the House and Senate work together to draft laws? Could Faraday-Lenz law be understood from forces rather than from flux? A pawn up on the queenside, why do I want pawns on the same file on the kingside in this rook-and-pawn endgame? What does SEC. 70302 of the \"Big Beautiful Bill\" actually do? Why does Consolas have different vertical alignment on Linux? Paris Visite Offers for 2025 Trying to extrude cylinder to get outer ring, but does not get inner edge Draw a hex grid of a given size Is my summary of Kant's notion of the categories correct? Why does this audio amplifier NOT clip? What presocratic philosopher got rich, disproving his detractors who thought philosophy didn't have practical applications? Would a dual layer FFC with a ground plane have better signal integrity? Global Entry Credential Sam Loyd's broken chessboard Pre-1982 Russian movie where the protagonist awakens from a dream to a black cat and themes related to the dead The size of the digits when using the overbrace command Integral vs. vector representations of symmetric group Why does Talbot's inversion method diverge at M=90? Filling sectors of an ellipse Identify PCB of external drive more hot questions Newest java questions feed", "start_char_idx": 0, "end_char_idx": 3314, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2525e28-d628-4082-bc0c-fb74737a83fa": {"__data__": {"id_": "b2525e28-d628-4082-bc0c-fb74737a83fa", "embedding": null, "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_0.txt", "file_name": "www.tutorialspoint.com_7_0.txt", "file_type": "text/plain", "file_size": 4657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6ce98732-2941-4f4a-8704-065dc10bf364", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_0.txt", "file_name": "www.tutorialspoint.com_7_0.txt", "file_type": "text/plain", "file_size": 4657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b7baee95363d89b9649856417a139209a7793b61643ca57a3c5e44eeefff1fee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f02a0b14-51fd-43af-9cd7-b8e209a29fde", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_1.txt", "file_name": "www.stackoverflow.com_41_1.txt", "file_type": "text/plain", "file_size": 3347, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "40f2ecfbb1c8970239235123b7e2be389614f45d1b0b5f97ea336c62da037156", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d63c565c-7888-42d2-8277-50b526811fda", "node_type": "1", "metadata": {}, "hash": "368fe9001287e0aebe235d166ab77cabad61c4a74be72ec4637d647714eecf0b", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorial Java - Home Java - Overview Java - History Java - Features Java Vs. C++ JVM - Java Virtual Machine Java - JDK vs JRE vs JVM Java - Environment Setup Java - Hello World Program Java - Comments Java - Basic Syntax Java - Variables Java - Data Types Java - Type Casting Java - Unicode System Java - User Input Java - Date & Time Java Operators Java - Operators Java - Arithmetic Operators Java - Assignment Operators Java - Relational Operators Java - Logical Operators Java - Bitwise Operators Java Operator Precedence & Associativity Java Control Statements Java - Decision Making Java - If Else Statement Java - Switch Statement Java - Loop Control Java - For Loop Java - For-Each Loop Java - While Loop Java - Do While Loop Java - Break Statement Java - Continue Statement Object Oriented Programming Java - OOPs Concepts Java - Object & Classes Java - Class Attributes Java - Class Methods Java - Methods Java - Variables Scope Java - Constructors Java - Access Modifiers Java - Inheritance Java - Aggregation Java - Polymorphism Java - Overriding Java - Method Overloading Java - Dynamic Binding Java - Static Binding Java - Instance Initializer Block Java - Abstraction Java - Encapsulation Java - Interfaces Java - Packages Java - Inner Classes Java - Static Class Java - Anonymous Class Java - Singleton Class Java - Wrapper Classes Java - Enums Java - Enum Constructor Java - Enum Strings Java Built-in Classes Java - Number Java - Boolean Java - Characters Java - Arrays Java - Math Class Java File Handling Java - Files Java - Create a File Java - Write to File Java - Read Files Java - Delete Files Java - Directories Java - I/O Streams Java Error & Exceptions Java - Exceptions Java - try-catch Block Java - try-with-resources Java - Multi-catch Block Java - Nested try Block Java - Finally Block Java - throw Exception Java - Exception Propagation Java - Built-in Exceptions Java - Custom Exception Java Multithreading Java - Multithreading Java - Thread Life Cycle Java - Creating a Thread Java - Starting a Thread Java - Joining Threads Java - Naming Thread Java - Thread Scheduler Java - Thread Pools Java - Main Thread Java - Thread Priority Java - Daemon Threads Java - Thread Group Java - Shutdown Hook Java Synchronization Java - Synchronization Java - Block Synchronization Java - Static Synchronization Java - Inter-thread Communication Java - Thread Deadlock Java - Interrupting a Thread Java - Thread Control Java - Reentrant Monitor Java Networking Java - Networking Java - Socket Programming Java - URL Processing Java - URL Class Java - URLConnection Class Java - HttpURLConnection Class Java - Socket Class Java - Generics Java Collections Java - Collections Java - Collection Interface Java Interfaces Java - List Interface Java - Queue Interface Java - Map Interface Java - SortedMap Interface Java - Set Interface Java - SortedSet Interface Java Data Structures Java - Data Structures Java - Enumeration Java Collections Algorithms Java - Iterators Java - Comparators Java - Comparable Interface in Java Advanced Java Java - Command-Line Arguments Java - Lambda Expressions Java - Sending Email Java - Applet Basics Java - Javadoc Comments Java - Autoboxing and Unboxing Java - File Mismatch Method Java - REPL (JShell) Java - Multi-Release Jar Files Java - Private Interface Methods Java - Inner Class Diamond Operator Java - Multiresolution Image API Java - Collection Factory Methods Java - Module System Java - Nashorn JavaScript Java - Optional Class Java - Method References Java - Functional Interfaces Java - Default Methods Java - Base64 Encode Decode Java - Switch Expressions Java - Teeing Collectors Java - Microbenchmark Java - Text Blocks Java - Dynamic CDS archive Java - Z Garbage Collector (ZGC) Java - Null Pointer Exception Java - Packaging Tools Java - Sealed Classes Java - Record Classes Java - Hidden Classes Java - Pattern Matching Java - Compact Number Formatting Java - Garbage Collection Java - JIT Compiler Java Miscellaneous Java - Recursion Java - Regular Expressions Java - Serialization Java - Strings Java - Process API Improvements Java - Stream API Improvements Java - Enhanced @Deprecated Annotation Java - CompletableFuture API Improvements Java - Streams Java - Datetime Api Java 8 - New Features Java 9 - New Features Java 10 - New Features Java 11 - New Features Java 12 - New Features Java 13 - New Features Java 14 - New Features Java 15 - New Features Java 16 - New Features Java APIs & Frameworks JDBC Tutorial SWING Tutorial AWT Tutorial Servlets Tutorial JSP Tutorial Java Class References Java - Scanner Java - Arrays Java - Strings Java - Date Java - ArrayList Java", "start_char_idx": 0, "end_char_idx": 4657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d63c565c-7888-42d2-8277-50b526811fda": {"__data__": {"id_": "d63c565c-7888-42d2-8277-50b526811fda", "embedding": null, "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_1.txt", "file_name": "www.tutorialspoint.com_7_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "741d8f7f-0813-4fa2-bb2f-97b837056729", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_1.txt", "file_name": "www.tutorialspoint.com_7_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6d8a903b8d37aff5c1ff965776fd627e41fd046395c0f01d75b0e5a75e8d3262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2525e28-d628-4082-bc0c-fb74737a83fa", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_0.txt", "file_name": "www.tutorialspoint.com_7_0.txt", "file_type": "text/plain", "file_size": 4657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "b7baee95363d89b9649856417a139209a7793b61643ca57a3c5e44eeefff1fee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf37967b-9f21-4425-827f-df61ecde1ae3", "node_type": "1", "metadata": {}, "hash": "239195b0baa84246b30a640990fb9cae2c7174f6054b2859d8a12bdc40919638", "class_name": "RelatedNodeInfo"}}, "text": "- Vector Java - Stack Java - PriorityQueue Java - LinkedList Java - ArrayDeque Java - HashMap Java - LinkedHashMap Java - WeakHashMap Java - EnumMap Java - TreeMap Java - IdentityHashMap Java - HashSet Java - EnumSet Java - LinkedHashSet Java - TreeSet Java - BitSet Java - Dictionary Java - Hashtable Java - Properties Java - Collection Java - Array Java Useful Resources Java - Cheatsheet Java - Questions and Answers Java 8 - Questions and Answers Java - Quick Guide Java - Useful Resources Java - Discussion Java - Online Compiler Java - Examples Selected Reading UPSC IAS Exams Notes Developer's Best Practices Questions and Answers Effective Resume Writing AI Based Resume Builder Personal AI Study Assistant Generate Coding Logic HR Interview Questions Computer Glossary Who is Who Java Tutorial This Java tutorial has been written for beginners to advanced programmers who are striving to learn Java programming. We have provided numerous practical examples to explain the concepts in simple and easy steps. This tutorial has been prepared and reviewed by experienced Java programmers at Tutorials Point, and the best effort has been put into making it useful for the students and Java developers. After completing this tutorial, you will find yourself at a moderate level of expertise in Java programming, from where you can elevate yourself to the next levels. What is Java? Java is a popular high-level, object-oriented programming language that was originally developed by Sun Microsystems and released in 1995. Currently, Java is owned by Oracle, and more than 3 billion devices run Java. Java runs on a variety of platforms, such as Windows , Mac OS, and the various versions ofUNIX. Today Java is being used to develop numerous types of software applications, including desktop apps, mobile apps, web apps, games, and much more. Java is a general-purpose programming language intended to let programmers Write Once, Run Anywhere (WORA) . This means that compiled Java code can run on all platforms that support Java without the need to recompile. In this tutorial, you will learn everything about Java, starting from basics to advanced concepts such as overview, history, installations, basic input/output, conditional & control statements, arrays, classes, inheritances, method overloading & overriding, exception handling, and many more. Java First Example The first example in Java is to print \"Hello, World!\" on the screen. Let's have a quick look at the first examples in Java programming: public class MyFirstJavaProgram { /* This is my first java program. * This will print 'Hello, World!' as the output */ public static void main(String []args) { System.out.println(\"Hello, World!\"); // prints Hello, World! } } Getting Started with Java Explore the following chapters to get started learning Java programming: Java - Home Java - Overview Java - History Java - Features Java Vs. C++ JVM - Java Virtual Machine Java - JDK vs JRE vs JVM Java - Hello World Program Java - Environment Setup Java - Basic Syntax Java Basics Explore the basic topics such as data types, operators, user input, etc.: Java - Variable Types Java - Data Types Java - Type Casting Java - Unicode System Java - Basic Operators Java - Comments Java - User Input Java - Date & Time Java Conditional Statements Furthermore, in Java, explore the conditional statements to implement the logic and to make decisions based on the conditions: Java - Decision Making Java - If-else Java - Switch Java Loops and Control Statements Explore the loops and control statements to learn how to control the execution of the programming logics: Java - Loop Control Java - For Loops Java - For-Each Loops Java - While Loops Java - do-while Loops Java - Break Java - Continue Java String and Arrays Explore the following strings and array-related chapters: Java Strings and String Class Java - Strings Java OOPs Explore the following chapters to learn the object-oriented programming approach in Java: Java - OOPs Concepts Java - Object & Classes Java - Class Attributes Java - Class Methods Java - Methods Java - Variables Scope Java - Constructors Java - Access Modifiers Java - Inheritance Java - Aggregation Java - Polymorphism Java - Overriding Java - Method Overloading Java - Dynamic Binding Java - Static Binding Java - Instance Initializer Block Java - Abstraction Java - Encapsulation Java Collections and Interfaces Explore Java interfaces and collections-related chapters: Java - Interfaces Java - List Interface Java - Queue Interface Java - Map Interface Java - SortedMap Interface Java - Set Interface Java - SortedSet Interface Java - Iterators Java - Comparators Java - Comparable Interface in Java Java - Collections Java - Collection Interface Java Exceptional Handling Explore the file handling chapters to learn how to create, write, read, and manipulate the files and directories: Java - Files Java - Create a", "start_char_idx": 0, "end_char_idx": 4905, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf37967b-9f21-4425-827f-df61ecde1ae3": {"__data__": {"id_": "cf37967b-9f21-4425-827f-df61ecde1ae3", "embedding": null, "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_2.txt", "file_name": "www.tutorialspoint.com_7_2.txt", "file_type": "text/plain", "file_size": 5014, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "989f8002-d415-4ac0-95af-b3625648eb89", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_2.txt", "file_name": "www.tutorialspoint.com_7_2.txt", "file_type": "text/plain", "file_size": 5014, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0b6afe454b1e58cc25fc71cd4ae0179be65aa4fb0f76661e895ac91d215bc1f4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d63c565c-7888-42d2-8277-50b526811fda", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_1.txt", "file_name": "www.tutorialspoint.com_7_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "6d8a903b8d37aff5c1ff965776fd627e41fd046395c0f01d75b0e5a75e8d3262", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24fa86b2-00d7-48b5-99cb-509ed7dc5328", "node_type": "1", "metadata": {}, "hash": "5a7d630409086fe67ee14f802143226ee2592a532ee0584d8856a252917e5665", "class_name": "RelatedNodeInfo"}}, "text": "File Java - Write to File Java - Read Files Java - Delete Files Java - Directories Java - I/O Streams Java Multithreading Explore the threading-related chapters to learn to manage multiple threads in Java: Java - Multithreading Java - Thread Life Cycle Java - Creating a Thread Java - Starting a Thread Java - Joining Threads Java - Naming Thread Java - Thread Scheduler Java - Thread Pools Java - Main Thread Java - Thread Priority Java - Daemon Threads Java - Thread Group Java - Shutdown Hook Java Practices Java Quick Guide Java Interview Questions Java 8 Interview Questions Java Online Test Java Mock Test Java References Here, you can find the package, class, and method references \u2212 Java Scanner Class Java Arrays Class Java Strings Class Java Date Class Java ArrayList Class Java Vector Class Java Stack Class Java PriorityQueue Class Java LinkedList Class Java ArrayDeque Class Java HashMap Class Java LinkedHashMap Class Java WeakHashMap Class Java EnumMap Class Java TreeMap Class Java IdentityHashMap Class Java HashSet Class Java EnumSet Class Java LinkedHashSet Class Java TreeSet Class Java BitSet Class Java Dictionary Class Java Hashtable Class Java Properties Class Java Collection Class Java Array Class Online Java Compiler Our Java programming tutorial provides various examples to explain the concepts. To compile and execute the given Java programming examples in your browser itself, we have provided Online Java Compiler . You can edit and run almost all the examples directly from your browser without the need to set up your development environment. Try to click the icon to run the following Java code to print conventional \"Hello, World!\" using Java Programming. Below code box allows you to change the value of the code. So, please try to change the value inside println() and run it again to verify the result. public class MyFirstJavaProgram { /* This is my first java program. * This will print 'Hello, World!' as the output */ public static void main(String []args) { System.out.println(\"Hello, World!\"); // prints Hello, World! } } Java Features Java is a feature-rich language. Java is evolving continuously with every update, and updates are coming every six months. Following are some of the main features of the Java language: Object Oriented : Java is a pure object-oriented language, and everything in Java is an object. Java supports OOPS principles like Inheritance , Encapsulation , Polymorphism , Classes , and so on. Java itself can be extended as well, being based on an object model. Platform Independent : Java code is platform independent. A Java code is not compiled into machine-specific code; it is compiled into a platform-neutral byte code. This byte code is executed by JVM which runs the code on the underlying platform. This capability makes Java a Write Once Run Anywhere language. Easy To Learn : Java inherits features from C and C++, and developers can easily learn Java if they know any of the C or C++ languages. Even for someone new to computer languages, Java is very easy to learn from scratch. Secure : Java is secure by architecture. A developer is not required to directly interact with the underlying memory or operating system. Java provides automatic garbage collection, so developers are not required to worry about memory leaks, management, etc. Architectural-Neutral : Java byte code can be executed on any kind of processor. JRE automatically handles the code execution on different types of processors. Portable : A Java code written on a Windows machine can be executed without any code change on MacOS and vice versa. There is no need to make any operating system-specific code changes. Robust : Java is a very robust language with very strong compile-time error checks, strict type checking, and runtime exception handling. Multithreading : Java provides inbuilt support for multiprocessing and multithreading. Java provides thread handling, monitors, deadlock handling, racing conditions, etc. High Performance : Java, although being interpreted, is still very performant. The JIT(Just In Time) compiler helps in improving performance. Distributed : Java is designed for distributed systems and is the most popular language for developing internet-based applications as the internet is a distributed environment. Java Applications Since Java supports object-oriented features and is platform-independent, it is extensively used in various fields. Listed below are a few areas where Java is used - Enterprise solutions Game development Secured web development Embedded systems Mobile application development Big Data Applications, and many more. Java Platforms (Editions) Platforms of Java are divided into four Java editions, which are \u2212 Java SE (Java Standard Edition) : It is a standard edition that is used to develop and deploy portable code for desktop and server environments. Java EE (Java Enterprise Edition) : It is an enterprise edition that is used to develop web applications. Java ME (Java Micro Edition) : J2ME is", "start_char_idx": 0, "end_char_idx": 5010, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24fa86b2-00d7-48b5-99cb-509ed7dc5328": {"__data__": {"id_": "24fa86b2-00d7-48b5-99cb-509ed7dc5328", "embedding": null, "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_3.txt", "file_name": "www.tutorialspoint.com_7_3.txt", "file_type": "text/plain", "file_size": 4930, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94afbd2d-bc34-4eb8-ac60-f09f9c237e3c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_3.txt", "file_name": "www.tutorialspoint.com_7_3.txt", "file_type": "text/plain", "file_size": 4930, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d21424d7d9823d852c3bdb371d60e2d0bfcd93b32958197641d74fa6504d338c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf37967b-9f21-4425-827f-df61ecde1ae3", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_2.txt", "file_name": "www.tutorialspoint.com_7_2.txt", "file_type": "text/plain", "file_size": 5014, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "0b6afe454b1e58cc25fc71cd4ae0179be65aa4fb0f76661e895ac91d215bc1f4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ea6d8e9-49a8-4687-9a7d-103d838e6a46", "node_type": "1", "metadata": {}, "hash": "76208a75b6ee51ba5b574e7e8f931eda093f0ff563b85b203b8090d578cef758", "class_name": "RelatedNodeInfo"}}, "text": "used to develop mobile applications; it is a micro edition of Java. JavaFx: It is used to develop lightweight user interfaces for rich internet applications. Java Jobs & Opportunities Java is very in demand, and all the major companies are recruiting Java programmers to develop their desktop, web, and mobile applications. Today, a Java programmer with 3-5 years of experience is asking for around $120,000 in an in an annual package, and this is the most demanding programming language in America. Though it can vary depending on the location of the job. Following are the great companies that are using Java and they need good Java programmers: Google Microsoft Facebook IBM Amazon Netflix Pinterest Uber JetBrains Many more... So, you could be the next potential employee for any of these major companies. We have developed great learning material for Java that will help you prepare for the technical interviews and certification exams based on Java. So, start learning Java using this simple and effective tutorial from anywhere and anytime, absolutely at your pace. Why to Learn Java? Java is a MUST to learn programming language for students and working professionals to become a great software engineer, especially when they are working in the software development domain. If you will conduct a survey about the best programming language around, Java is sure to come up. Java is a fairly easy programming language to learn, so if you are starting to learn any programming language, then Java could be your great choice. There's also plenty of Java tools that make it easy for developers and beginners to use. There are many other good reasons that make Java the first choice of any programmer: Java is open source, which means it's available free of cost. Java is simple and so easy to learn. Java is much in demand and ensures a high salary. Java has a large, vibrant community. Java has powerful development tools. Java is platform-independent. Who should Learn Java This Java tutorial will help both students as well as working professionals who want to develop applications using Java technologies like banking systems, support systems, information systems, websites, mobile apps, personal blogs, etc. We recommend reading this tutorial in the sequence listed in the left-side menu. Today, Java is one of the most demanding programming languages, and so it has become an essential language to learn for anyone involved in the software application development process, including software developers, software designers, project managers, etc. Prerequisites to Learn Java Though we have tried our best to present the Core Java concepts in a simple and easy way, still, before you start learning Java, it is assumed that the readers have a reasonable exposure to any programming environment and knowledge of basic concepts such as variables, commands, syntax, etc. Learn Java by Examples This tutorial provides a set of Java examples. Practice these examples to learn the Java concepts better: Java Examples Java Online Quizzes This Java tutorial helps you prepare for technical interviews and certification exams. We have provided various quizzes and assignments to check your learning level. Given quizzes have multiple-choice types of questions and their answers with short explanations. Following is a sample quiz; try to attempt any of the given answers: Show Answer Q 1 - The Java programming language was developed by which of the following : A - Google in 1990s B - Micorsoft in 1980s C - Sun Microsystems in 1995 D - None of the Above Answer : C Explanation Java was developed by James Gosling at Sun Microsystems and it was released in May 1995 as a core component of Sun Microsystems' Java platform. Start your online quiz Start Java Quiz . Download Java Java's latest version can be downloaded from Oracle's official website: Java Downloads Java Certification Get certified in Java to boost your skills and career Get certified Frequently Asked Questions about Java Tutorial There are some important frequently asked questions (FAQs) about Java Programming tutorial, this section lists them down along with their answers briefly - \u2212 1. What are the 4 important concepts in Java? Java supports abstraction, encapsulation, polymorphism, and inheritance. These are 4 major theoretical principles of object-oriented programming. But Java also works with three further OOP concepts: association, aggregation, and composition. 2. What are the benefits of Java? Java is free and open source Java is community driven and has expert leadership Java is fast and high-performance Java is easy to learn Java is statically typed Java is object-oriented Java supports functional programming 3. How much time will it take to learn Java? Learning style and dedication to the amount of time you can spend each day affect a lot. However, on average, it takes around 6 to 12 months to learn Java programming. 4. Why is Java a", "start_char_idx": 0, "end_char_idx": 4928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ea6d8e9-49a8-4687-9a7d-103d838e6a46": {"__data__": {"id_": "2ea6d8e9-49a8-4687-9a7d-103d838e6a46", "embedding": null, "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_4.txt", "file_name": "www.tutorialspoint.com_7_4.txt", "file_type": "text/plain", "file_size": 1731, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c50bcb5-fb19-449e-96b7-c3275233ea0b", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_4.txt", "file_name": "www.tutorialspoint.com_7_4.txt", "file_type": "text/plain", "file_size": 1731, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "dda24e806e9909270fc71aa6f4e570ee3fc7c2f6c8a8dfa01e1a7dec6898d2de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24fa86b2-00d7-48b5-99cb-509ed7dc5328", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_3.txt", "file_name": "www.tutorialspoint.com_7_3.txt", "file_type": "text/plain", "file_size": 4930, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "d21424d7d9823d852c3bdb371d60e2d0bfcd93b32958197641d74fa6504d338c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c2f4902-becc-4115-8a09-20dd5d3b00fb", "node_type": "1", "metadata": {}, "hash": "b6c368ebbc8b124fcd0dd349c6e142e6f0d2849c74b48f9ba506023bf76771b5", "class_name": "RelatedNodeInfo"}}, "text": "so popular programming language? The Java language is easily extensible because it is based on an object model. Platform-dependent. Unlike many other programming languages, Java is compiled, not into a platform-dependent machine but into platform-independent byte code. 5. What are the advantages of Java over Python? Python and Java are two of the most popular programming languages among software programmers. Java is generally faster and more efficient than Python because it is a compiled language, whereas Python is an interpreted language and has simpler, more concise syntax than Java. 6. How do I start learning Java? Here is the summarized list of tips that you can follow to start learning Java: First and most important is to make your mind to learn Java. Install Java Virtual Machine and Java Compilers on your computer system. Follow our tutorial step by step, starting from the very beginning. Read more articles, watch online courses, or buy a book on Java to enhance your knowledge in Java. Try to develop small software using Java and other technologies like MySQL if you want to make use of a database. 7. What are Java Technologies for Web Applications? Java provides the following technologies to help web development: Java Servlet API. JavaServer Pages Standard Tag Library. JavaServer Faces Technology. Java Message Service API. JDBC API. Java Persistence API. Java Naming and Directory Interface. NetBeans IDE. 8. Which is the best place to learn Java? You can use our simple and the best Java tutorial to learn Java and Advanced Java. We have removed all the unnecessary complexity while teaching you Java concepts. You can start learning it now Start Learning Java . Print Page Previous Next Advertisements", "start_char_idx": 0, "end_char_idx": 1731, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c2f4902-becc-4115-8a09-20dd5d3b00fb": {"__data__": {"id_": "4c2f4902-becc-4115-8a09-20dd5d3b00fb", "embedding": null, "metadata": {"file_path": "docs\\java\\www.vogella.com_29_0.txt", "file_name": "www.vogella.com_29_0.txt", "file_type": "text/plain", "file_size": 1854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e4c2966-6794-4159-8155-8be9797ab81c", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.vogella.com_29_0.txt", "file_name": "www.vogella.com_29_0.txt", "file_type": "text/plain", "file_size": 1854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "fcef089c663d83a41043050c7df14a2389dadd6817827ba58263eddb3369fe9c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ea6d8e9-49a8-4687-9a7d-103d838e6a46", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_4.txt", "file_name": "www.tutorialspoint.com_7_4.txt", "file_type": "text/plain", "file_size": 1731, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "dda24e806e9909270fc71aa6f4e570ee3fc7c2f6c8a8dfa01e1a7dec6898d2de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bbd9235-645f-41f8-83b4-d6a5a3311874", "node_type": "1", "metadata": {}, "hash": "482d862caf8850afb5f371bf714ca6b7ae596e16eb9c5525e8ca0863372364d4", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorials Java Tutorials. Includes introduction, JUnit testing, XML handling, the Java Persistence API (JPA), the Spring framework and more. Java introduction Introduction to Java programming Defining and using Java libraries via JAR files Using the Java core libraries Java Map and HashMap usage Reading and writing files in Java (Input/Output) Java Regex Java HttpClient Java Logging API Java Preferences API Java Annotations and Java Reflection Java Date and Time API in Java 8 Java object serialization Java Timer and TimerTask to schedule tasks Java Collections XML Java and XML RSS feeds with Java JAXB Testing and Code Quality Tools Unit Testing with JUnit 5 Guide to JUnit5 extensions Testing REST API with JUnit Unit tests with Mockito Using Hamcrest for testing Testing with AssertJ assertions Using Checkstyle to improve your code quality Testing with EasyMock Unit Testing with JUnit 4 Using Jacoco to report unit test code coverage Useful Java libraries and tools RxJava 2.0 - Tutorial Using the OkHttp library for HTTP requests Google Gson for converting Java objects to JSON and JSON to Java with Creating PDF with Java and iText Excel and Java - Read and Write Excel with Java JFreeChart JPA 2.0 with EclipseLink MySQL and Java JDBC Using FreeMarker templates (FTL) Using the jsoup HTML parser GlazedLists - Special list implementation, which provides events and list transformations Spring Spring Spring Boot Dependency Injection with the Spring Framework The Spring Jdbc Template for database access Performance and concurrency Java Microbenchmarking Java concurrency (multi-threading) Java Performance - Memory and Runtime Analysis vogella company Customers FAQ Donate for free tutorials Legal Privacy Policy Change consent Contact us Contact form sales@vogella.com +49 40 7880 4360 Training IT Inhouse Training OT Online training", "start_char_idx": 0, "end_char_idx": 1854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6bbd9235-645f-41f8-83b4-d6a5a3311874": {"__data__": {"id_": "6bbd9235-645f-41f8-83b4-d6a5a3311874", "embedding": null, "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c7d98cf-f8bc-4563-bc79-8d22d30a1004", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1aacec6cde567251dca6b319639f83d3b64720735fd6c0ba104d4b66335df466", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c2f4902-becc-4115-8a09-20dd5d3b00fb", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.vogella.com_29_0.txt", "file_name": "www.vogella.com_29_0.txt", "file_type": "text/plain", "file_size": 1854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "fcef089c663d83a41043050c7df14a2389dadd6817827ba58263eddb3369fe9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f531710b-a17c-4893-99a2-f0dfa7c0d5b6", "node_type": "1", "metadata": {}, "hash": "4b8bb3b880e0e05dd466d02fc8826f60e7cec8ed5b4a85f4b4b0103e26100c51", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorial Menu Search field \u00d7 \ue80b Sign In \u2605 +1 Get Certified For Teachers Spaces Plus Get Certified For Teachers Spaces Plus \u276e \u276f HTML CSS JAVASCRIPT SQL PYTHON JAVA PHP HOW TO W3.CSS C C++ C# BOOTSTRAP REACT MYSQL JQUERY EXCEL XML DJANGO NUMPY PANDAS NODEJS DSA TYPESCRIPT ANGULAR GIT POSTGRESQL MONGODB ASP AI R GO KOTLIN SASS VUE GEN AI SCIPY CYBERSECURITY DATA SCIENCE INTRO TO PROGRAMMING BASH RUST Java Tutorial Java HOME Java Intro Java Get Started Java Syntax Java Output Print Text Print Numbers Java Comments Java Variables Variables Print Variables Multiple Variables Identifiers Real-Life Examples Java Data Types Data Types Numbers Booleans Characters Real-Life Example Non-primitive Types Java Type Casting Java Operators Java Strings Strings Concatenation Numbers and Strings Special Characters Java Math Java Booleans Java If.Else if else else if Short Hand If.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f531710b-a17c-4893-99a2-f0dfa7c0d5b6": {"__data__": {"id_": "f531710b-a17c-4893-99a2-f0dfa7c0d5b6", "embedding": null, "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c7d98cf-f8bc-4563-bc79-8d22d30a1004", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1aacec6cde567251dca6b319639f83d3b64720735fd6c0ba104d4b66335df466", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bbd9235-645f-41f8-83b4-d6a5a3311874", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "e2a0e3550fc14293fcf813e002c7fa76d1a6265d02d60fb43944491edd2a9444", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18fdf0e6-4a92-496a-918b-68a0bae88b71", "node_type": "1", "metadata": {}, "hash": "9bbd7a6250a5cfd1f16bcea4dc99604c486ee6b03cf0ff36026020cc87490cd0", "class_name": "RelatedNodeInfo"}}, "text": "Java Tutorial Menu Search field \u00d7 \ue80b Sign In \u2605 +1 Get Certified For Teachers Spaces Plus Get Certified For Teachers Spaces Plus \u276e \u276f HTML CSS JAVASCRIPT SQL PYTHON JAVA PHP HOW TO W3.CSS C C++ C# BOOTSTRAP REACT MYSQL JQUERY EXCEL XML DJANGO NUMPY PANDAS NODEJS DSA TYPESCRIPT ANGULAR GIT POSTGRESQL MONGODB ASP AI R GO KOTLIN SASS VUE GEN AI SCIPY CYBERSECURITY DATA SCIENCE INTRO TO PROGRAMMING BASH RUST Java Tutorial Java HOME Java Intro Java Get Started Java Syntax Java Output Print Text Print Numbers Java Comments Java Variables Variables Print Variables Multiple Variables Identifiers Real-Life Examples Java Data Types Data Types Numbers Booleans Characters Real-Life Example Non-primitive Types Java Type Casting Java Operators Java Strings Strings Concatenation Numbers and Strings Special Characters Java Math Java Booleans Java If.Else if else else if Short Hand If.Else Real-Life Examples Java Switch Java While Loop While Loop Do/While Loop Real-Life Examples Java For Loop For Loop Nested Loops For-Each Loop Real-Life Examples Java Break/Continue Java Arrays Arrays Loop Through an Array Real-Life Examples Multidimensional Arrays Java Methods Java Methods Java Method Parameters Parameters Return Values Java Method Overloading Java Scope Java Recursion Java Classes Java OOP Java Classes/Objects Java Class Attributes Java Class Methods Java Constructors Java Modifiers Java Encapsulation Java Packages / API Java Inheritance Java Polymorphism Java Inner Classes Java Abstraction Java Interface Java Enums Java User Input Java Date Java Data Structures Java Data Structures Java ArrayList Java LinkedList Java List Sorting Java HashMap Java HashSet Java Iterator Java Wrapper Classes Java Advanced Java Exceptions Java RegEx Java Threads Java Lambda Java Advanced Sorting Java File Handling Java Files Java Create/Write Files Java Read Files Java Delete Files Java How To's Add Two Numbers Count Words Reverse a String Sum of Array Elements Convert String to Array Sort an Array Find Array Average Find Smallest Element ArrayList Loop HashMap Loop Loop Through an Enum Area of Rectangle Even or Odd Number Positive or Negative Square Root Random Number Java Reference Java Reference Java Keywords assert abstract boolean break byte case catch char class continue default do double else enum exports extends final finally float for if implements import instanceof int interface long module native new package private protected public return requires short static super switch synchronized this throw throws transient try var void volatile while Java String Methods charAt() codePointAt() codePointBefore() codePointCount() compareTo() compareToIgnoreCase() concat() contains() contentEquals() copyValueOf() endsWith() equals() equalsIgnoreCase() format() getBytes() getChars() hashCode() indexOf() isEmpty() join() lastIndexOf() length() matches() offsetByCodePoints() regionMatches() replace() replaceAll() replaceFirst() split() startsWith() subSequence() substring() toCharArray() toLowerCase() toString() toUpperCase() trim() valueOf() Java Math Methods abs() acos() addExact() asin() atan() atan2() cbrt() ceil() copySign() cos() cosh() decrementExact() exp() expm1() floor() floorDiv() floorMod() getExponent() hypot() IEEEremainder() incrementExact() log() log10() log1p() max() min() multiplyExact() negateExact() nextAfter() nextDown() nextUp() pow() random() rint() round() scalb() signum() sin() sinh() sqrt() subtractExact() tan() tanh() toDegrees() toIntExact() toRadians() ulp() Java Output Methods print() printf() println() Java Arrays Methods compare() equals() sort() fill() length Java ArrayList Methods add() addAll() clear() clone() contains ensureCapacity() forEach() get() indexOf() isEmpty() iterator() lastIndexOf() listIterator() remove() removeAll() removeIf() replaceAll() retainAll() set() size() sort() spliterator() subList() toArray() trimToSize() Java LinkedList Methods add() addAll() clear() clone() contains forEach() get() getFirst() getLast() indexOf() isEmpty() iterator() lastIndexOf() listIterator() remove() removeAll() removeFirst() removeIf() removeLast() replaceAll() retainAll() set() size() sort() spliterator() subList() toArray() Java HashMap Methods clear() clone() compute() computeIfAbsent() computeIfPresent() containsKey() containsValue() entrySet() forEach() get() getOrDefault() isEmpty() keySet() merge() put() putAll() putIfAbsent() remove() replace() replaceAll() size() values() Java Scanner Methods close() delimiter() findInLine() findWithinHorizon() hasNext() hasNextBoolean() hasNextByte() hasNextDouble() hasNextFloat() hasNextInt() hasNextLine() hasNextLong() hasNextShort() locale() next() nextBoolean() nextByte() nextDouble() nextFloat() nextInt() nextLine() nextLong() nextShort() radix() reset() useDelimiter() useLocale() useRadix() Java Iterator Methods Java Errors & Exceptions Java Examples Java Examples Java Compiler Java Exercises Java Quiz Java Server Java Syllabus Java Study Plan Java Certificate Java Tutorial \u276e Home Next \u276f Learn Java Java is a popular programming language.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18fdf0e6-4a92-496a-918b-68a0bae88b71": {"__data__": {"id_": "18fdf0e6-4a92-496a-918b-68a0bae88b71", "embedding": null, "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c7d98cf-f8bc-4563-bc79-8d22d30a1004", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "1aacec6cde567251dca6b319639f83d3b64720735fd6c0ba104d4b66335df466", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f531710b-a17c-4893-99a2-f0dfa7c0d5b6", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "27dc7455483e3015e80208938e18337b67ebc6e0cd31d3fd8c3314735bb34382", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7db85c03-c714-49c7-868e-e843bea0b1f1", "node_type": "1", "metadata": {}, "hash": "c70d9fd722c0e9bf79738aa4af4f1b8abd8164f5ce73f8cd6b3ce52e31766b62", "class_name": "RelatedNodeInfo"}}, "text": "Java is used to develop mobile apps, web apps, desktop apps, games and much more. Start learning Java now \u00bb Examples in Each Chapter Our \"Try it Yourself\" editor makes it easy to learn Java. You can edit Java code and view the result in your browser. Example public class Main { public static void main(String[] args) { System.out.println(\"Hello World\"); } } Try it Yourself \u00bb Click on the \"Run example\" button to see how it works. We recommend reading this tutorial, in the sequence listed in the left menu. Java is an object oriented language and some concepts may be new. Take breaks when needed, and go over the examples as many times as needed. Java Exercises Many chapters in this tutorial end with an exercise where you can check your level of knowledge. See all Java Exercises Java Quiz Test your Java skills with a quiz. Start Java Quiz", "start_char_idx": 5078, "end_char_idx": 5923, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7db85c03-c714-49c7-868e-e843bea0b1f1": {"__data__": {"id_": "7db85c03-c714-49c7-868e-e843bea0b1f1", "embedding": null, "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_1.txt", "file_name": "www.w3schools.com_19_1.txt", "file_type": "text/plain", "file_size": 2746, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c949edd-6175-47d0-ae94-a13d50bbd7d9", "node_type": "4", "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_1.txt", "file_name": "www.w3schools.com_19_1.txt", "file_type": "text/plain", "file_size": 2746, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "195b1ce2681156c63c5343ca08ffc071a83874915fcd03910a4206e12bd54e68", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18fdf0e6-4a92-496a-918b-68a0bae88b71", "node_type": "1", "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}, "hash": "8aa9eb36310d38fe5b8dc997634cc4f4d1fc2ba6aa363e5ea0c6738782ebcf7a", "class_name": "RelatedNodeInfo"}}, "text": "Learn by Examples Learn by examples! This tutorial supplements all explanations with clarifying examples. See All Java Examples Track Your Progress Create a free W3Schools account and get access to more features and learning materials: View your completed tutorials, exercises, and quizzes Keep an eye on your progress and daily streaks Set goals and create learning paths Create your own personal website Sign Up for Free Note: This is an optional feature. You can study at W3Schools without creating an account. Java Reference You will also find complete keyword and method references: Java Keywords Java String Methods Java Math Methods Java Output Methods Java Arrays Methods Java ArrayList Methods Java LinkedList Methods Java HashMap Methods Java Scanner Methods Java Iterator Methods Java Errors and Exception Types Download Java Download Java from the official Java web site: https://www.oracle.com Kickstart your career Get certified by completing the course Get certified w 3 s c h o o l s C E R T I F I E D . 2 0 2 5 \u276e Home Next \u276f \u2605 +1 Track your progress - it's free! Log in Sign Up COLOR PICKER PLUS SPACES GET CERTIFIED FOR TEACHERS FOR BUSINESS CONTACT US \u00d7 Contact Sales If you want to use W3Schools services as an educational institution, team or enterprise, send us an e-mail: sales@w3schools.com Report Error If you want to report an error, or if you want to make a suggestion, send us an e-mail: help@w3schools.com Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial Java Tutorial C++ Tutorial jQuery Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors Java Reference Angular Reference jQuery Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples Java Examples XML Examples jQuery Examples Get Certified HTML Certificate CSS Certificate JavaScript Certificate Front End Certificate SQL Certificate Python Certificate PHP Certificate jQuery Certificate Java Certificate C++ Certificate C# Certificate XML Certificate \uf30c \ue807 \ue806 \uf16d FORUM ABOUT ACADEMY W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using W3Schools, you agree to have read and accepted our terms of use , cookie and privacy policy . Copyright 1999-2025 by Refsnes Data. All Rights Reserved. W3Schools is Powered by W3.CSS .", "start_char_idx": 0, "end_char_idx": 2731, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"d86e17be-5537-4f39-9afd-43ded0c54b86": {"node_ids": ["990ab1b4-0ee4-497c-a7c2-a9b16ed130e6"], "metadata": {"file_path": "docs\\java\\docs.oracle.com_0_0.txt", "file_name": "docs.oracle.com_0_0.txt", "file_type": "text/plain", "file_size": 2146, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "5e3cb524-0e8d-4bb2-9054-a5c6a8548bcf": {"node_ids": ["1fe61e41-da00-4f68-8743-a1b3495e26a6"], "metadata": {"file_path": "docs\\java\\docs.oracle.com_1_0.txt", "file_name": "docs.oracle.com_1_0.txt", "file_type": "text/plain", "file_size": 4795, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "4eb35ebf-fb31-4736-af73-d2c81416eabd": {"node_ids": ["6e6a5b1c-ab1b-4a1e-a02b-69410f397c83"], "metadata": {"file_path": "docs\\java\\docs.spring.io_31_0.txt", "file_name": "docs.spring.io_31_0.txt", "file_type": "text/plain", "file_size": 14, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "07fa0591-859f-42d5-9017-dd306ba7c2ba": {"node_ids": ["c42f98e2-0efd-4fee-acb1-12379f74e5ad", "b28afe4c-220f-47b8-9d75-c9865d47b3ad", "fa0143dd-2b6b-41e8-85b4-225835be74e1", "7793d6d7-a8f5-4c8c-b75b-318e4df3f517", "4f2c6fd8-c226-45bb-9e69-48c917930c4c", "c843af3b-e4ef-4dd7-a36c-3a96104955ab", "b0e036f1-bdc2-4551-8fb8-51fe5cd2d7a1", "5a28cc58-71b6-466a-95fa-aa7e92dd5980", "7b353d57-4fb6-4800-b9a8-1157b757f606", "ff7693c8-c845-490d-b7a5-d0991f211b48", "e62ba5ff-a3ee-4cab-92df-3631710a60e6"], "metadata": {"file_path": "docs\\java\\docs.spring.io_36_0.txt", "file_name": "docs.spring.io_36_0.txt", "file_type": "text/plain", "file_size": 34015, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "79654719-cfdf-4272-9cfd-f828592c7f0c": {"node_ids": ["d7d661c8-1dd1-45f0-8e7f-72ba965e9440", "67819d27-50d6-470b-848e-64be3a9bb952", "9c4ad4df-af22-4942-b087-43da0c2e4d9c", "a4a97f98-4c2d-4465-8508-afeeffa10ec0", "d5d33378-1d4a-4bff-909d-2294fb807abd", "c6d2db28-2218-433a-b5ac-235cfbc37e9d", "86ade1b9-7255-4eb0-9728-2922a450f990", "d3f08c44-53be-4a0f-871a-310cac17ee9c", "b6c0262a-8584-41cc-8666-e955795ed3ec", "79697e99-a3c6-437f-bc4e-bac1d8460589", "71e3d86c-ec24-4951-962b-8f3741353a45"], "metadata": {"file_path": "docs\\java\\docs.spring.io_36_1.txt", "file_name": "docs.spring.io_36_1.txt", "file_type": "text/plain", "file_size": 35087, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "082c3c85-88d9-4e53-a971-c502bef628d5": {"node_ids": ["ccec08ec-9858-456d-ab40-6e91e517ebe2", "fb6fafe5-9daf-4a24-bfb7-5cb6efec9e22", "e4719def-a2e9-4127-aaa3-984d4192ccc0", "4cdd91ea-e22b-40ec-96e8-43f6d188e8d4", "0886f63e-bb60-44b1-a245-9847f44392be", "5811ffb3-ef32-47af-a763-bdec942184a5", "b11c9006-a41e-4799-81c9-ec249fac783b", "97b88c33-cec4-41e2-8cc8-3ef2a008ce1c", "e19fb3f4-44e3-4ea4-b297-1581e6e51a50", "cc6045a4-2e5f-4c73-a145-f45f44fd75b5"], "metadata": {"file_path": "docs\\java\\docs.spring.io_36_2.txt", "file_name": "docs.spring.io_36_2.txt", "file_type": "text/plain", "file_size": 31354, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "8a9cbeaa-63ca-4ba3-9968-a32359775ff2": {"node_ids": ["35c544f8-cd8d-47bd-b9b1-bd7b49737eda", "1b0c8924-859c-4c1d-b7f2-c72fa1ac291f"], "metadata": {"file_path": "docs\\java\\dzone.com_24_0.txt", "file_name": "dzone.com_24_0.txt", "file_type": "text/plain", "file_size": 6194, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "aa4e1152-4b67-47a4-9e26-ba70ff26868f": {"node_ids": ["dcb2b2dc-3dad-4483-bb15-6710179a1d40", "31361112-7dc3-4845-8fa4-03b50970be21"], "metadata": {"file_path": "docs\\java\\dzone.com_24_1.txt", "file_name": "dzone.com_24_1.txt", "file_type": "text/plain", "file_size": 5760, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "3b77ad6e-113f-48c3-95dd-2f7969f95cc0": {"node_ids": ["d4ed01be-f859-4090-a32e-ce637f0923a7", "5b1155f7-acab-47cf-b391-7aad342a7761"], "metadata": {"file_path": "docs\\java\\dzone.com_24_10.txt", "file_name": "dzone.com_24_10.txt", "file_type": "text/plain", "file_size": 5585, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "54a42ba5-8909-421d-a428-d5b1494b2313": {"node_ids": ["b697e8be-9157-41a9-8eb3-bd2258d05475", "fc56ccf9-3a1d-4a36-a32d-8f5bea840955"], "metadata": {"file_path": "docs\\java\\dzone.com_24_11.txt", "file_name": "dzone.com_24_11.txt", "file_type": "text/plain", "file_size": 6639, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "73132eb3-9df5-4263-9889-45ef72523ca3": {"node_ids": ["a17f064b-e135-4228-b126-f0152aa27d01", "435be80c-76df-4617-b2f3-b5f8202588ed"], "metadata": {"file_path": "docs\\java\\dzone.com_24_12.txt", "file_name": "dzone.com_24_12.txt", "file_type": "text/plain", "file_size": 5225, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "ae2c5cb3-4fc3-41dd-b44a-7d16e454a79d": {"node_ids": ["93de86e4-212e-414d-a83a-552d2f01774b", "3b6f81e4-8672-4c28-bebe-8107fb85ce7e"], "metadata": {"file_path": "docs\\java\\dzone.com_24_13.txt", "file_name": "dzone.com_24_13.txt", "file_type": "text/plain", "file_size": 5205, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "7a5e84e1-6d5d-4050-a1b6-39dbc0e0f174": {"node_ids": ["1445678c-5e23-44a2-bd70-a507b4196273", "cc3dddd3-26a9-4aca-a28e-ad64465a9b50"], "metadata": {"file_path": "docs\\java\\dzone.com_24_14.txt", "file_name": "dzone.com_24_14.txt", "file_type": "text/plain", "file_size": 5083, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "11eac1ec-1076-415e-87b6-0546941b12b0": {"node_ids": ["04777407-0ff5-45f3-a5ef-46eb6b2357e0"], "metadata": {"file_path": "docs\\java\\dzone.com_24_15.txt", "file_name": "dzone.com_24_15.txt", "file_type": "text/plain", "file_size": 5169, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "5ca87fd6-89ac-4531-83e5-40d7fb69b0f0": {"node_ids": ["f6948ffe-feb9-4b7d-92af-e137479c665b", "04a66de3-217a-4c65-b4a2-938b454cca27"], "metadata": {"file_path": "docs\\java\\dzone.com_24_16.txt", "file_name": "dzone.com_24_16.txt", "file_type": "text/plain", "file_size": 4946, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "a9b8401e-d2d0-45ed-9fef-9946f385fa08": {"node_ids": ["c9dc3faf-34b0-48a1-ad38-d65f4d74035d", "3e5f31cd-d37c-4d13-a095-4aac168372be"], "metadata": {"file_path": "docs\\java\\dzone.com_24_17.txt", "file_name": "dzone.com_24_17.txt", "file_type": "text/plain", "file_size": 5481, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "2f663381-6d8b-48ce-b876-2929bfa69a47": {"node_ids": ["d8675365-3f1e-4e38-9029-83cf172f06f2", "f0d3af4a-8121-4d20-824c-df5092245519"], "metadata": {"file_path": "docs\\java\\dzone.com_24_18.txt", "file_name": "dzone.com_24_18.txt", "file_type": "text/plain", "file_size": 6212, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "c9155214-a95c-40e9-b545-def6f18f052f": {"node_ids": ["581fb0f2-10b2-4b8a-846e-e0c2b13b44e5", "fb538e94-94d1-49d7-b438-39a0e2f18c8f"], "metadata": {"file_path": "docs\\java\\dzone.com_24_19.txt", "file_name": "dzone.com_24_19.txt", "file_type": "text/plain", "file_size": 6267, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "56385e2f-29c9-4523-b37a-126b07425f30": {"node_ids": ["e585b66d-7776-4a86-99d0-9811d614dbed", "711e76e4-cb5f-4c79-ba5d-032e461e9c6b"], "metadata": {"file_path": "docs\\java\\dzone.com_24_2.txt", "file_name": "dzone.com_24_2.txt", "file_type": "text/plain", "file_size": 5452, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0d9f63ce-b3fe-4143-a123-541a4ae4ee41": {"node_ids": ["d90de296-4d02-4d54-be5b-3ca9baf673c8", "7f933de6-294c-4122-9479-0f39c095b363"], "metadata": {"file_path": "docs\\java\\dzone.com_24_20.txt", "file_name": "dzone.com_24_20.txt", "file_type": "text/plain", "file_size": 4963, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "4bd1f52c-2ef5-43bb-9d91-02ef941b92ca": {"node_ids": ["8d3057d9-c79a-4c03-b508-6cb7d80015cf"], "metadata": {"file_path": "docs\\java\\dzone.com_24_21.txt", "file_name": "dzone.com_24_21.txt", "file_type": "text/plain", "file_size": 2207, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "6f11cb1b-3782-473e-8d71-4fa7c5874d97": {"node_ids": ["9286d345-9b8d-48c3-92c7-25bd4902526c", "1c908230-3025-4418-af0a-9029c537633a"], "metadata": {"file_path": "docs\\java\\dzone.com_24_3.txt", "file_name": "dzone.com_24_3.txt", "file_type": "text/plain", "file_size": 5776, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "d3821836-f01c-45ba-b611-dc0dbfc162a6": {"node_ids": ["09e8bb78-5ad9-48a7-a502-9f0551779e5e", "ba9f1b35-8232-4be9-a904-5282fd9d43e2"], "metadata": {"file_path": "docs\\java\\dzone.com_24_4.txt", "file_name": "dzone.com_24_4.txt", "file_type": "text/plain", "file_size": 5729, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "1f4e748a-4ef4-4cbd-9c14-5ddaa8c0be25": {"node_ids": ["2fd3f7e8-27db-4c5e-b284-1f31c314e904", "e46f5efc-bc0a-491e-90b8-3874b77b917f"], "metadata": {"file_path": "docs\\java\\dzone.com_24_5.txt", "file_name": "dzone.com_24_5.txt", "file_type": "text/plain", "file_size": 5226, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "a9755943-2b43-4ad3-a460-615be8b52c8d": {"node_ids": ["0e940331-dab0-4d9f-89ef-af0a8996885a", "09dae8e4-7619-4e4b-97c7-afdc738485b3"], "metadata": {"file_path": "docs\\java\\dzone.com_24_6.txt", "file_name": "dzone.com_24_6.txt", "file_type": "text/plain", "file_size": 6815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "86b439de-cfcb-42c8-a9f6-9a1d360e367f": {"node_ids": ["121ff403-12af-407f-b3d6-beb29d116091", "d2e98ad9-4448-4f23-80d8-dc7a2b1235f6"], "metadata": {"file_path": "docs\\java\\dzone.com_24_7.txt", "file_name": "dzone.com_24_7.txt", "file_type": "text/plain", "file_size": 5735, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "8384bb94-754f-4426-9094-89222ddef646": {"node_ids": ["d0d23cd9-1916-43c6-9419-721d17a0de51", "1c83051f-43be-4c7e-8ba8-78250f180747"], "metadata": {"file_path": "docs\\java\\dzone.com_24_8.txt", "file_name": "dzone.com_24_8.txt", "file_type": "text/plain", "file_size": 6149, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "26903785-fc9a-4ff0-a4d4-9a7ab8ead96a": {"node_ids": ["bdb1f6de-26bd-413d-84be-a51e2eebac44", "bac4a512-bbb3-4b64-a810-074624a3053e"], "metadata": {"file_path": "docs\\java\\dzone.com_24_9.txt", "file_name": "dzone.com_24_9.txt", "file_type": "text/plain", "file_size": 5389, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "8e95e58e-1bb2-4b53-85d4-07221c1a0a95": {"node_ids": ["7227ccac-1209-49c1-93f9-f39e4c904b9d"], "metadata": {"file_path": "docs\\java\\github.com_16_0.txt", "file_name": "github.com_16_0.txt", "file_type": "text/plain", "file_size": 4437, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "e21b2b4e-af2c-46db-bdd2-ddf070c19567": {"node_ids": ["41e229de-dc2f-4a2b-b9ae-25d2530980ac", "a26eea65-fbd9-4659-aea9-3a12ce9e276a"], "metadata": {"file_path": "docs\\java\\github.com_21_0.txt", "file_name": "github.com_21_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "08fc8367-5fa9-4fc7-81cc-3364c7a3d6a4": {"node_ids": ["c8f5f685-8ef7-4563-abc3-efa56e0c4894", "130fa4fc-19b7-4974-88a5-f82713be5c29", "02564ca1-fbac-4e43-b595-e75c6d6dff7f"], "metadata": {"file_path": "docs\\java\\github.com_21_1.txt", "file_name": "github.com_21_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "7b3aa042-a9ad-4717-b4e0-8a0b0b4039ac": {"node_ids": ["fbf93781-d500-48b4-93c1-bf4ebe4424d9"], "metadata": {"file_path": "docs\\java\\github.com_21_2.txt", "file_name": "github.com_21_2.txt", "file_type": "text/plain", "file_size": 2375, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "eb914b4b-1f61-42f8-bd2e-b4b1d56965ec": {"node_ids": ["c5fd7803-774c-4aa1-94d0-a235fe305e93", "a221466b-1b32-45bb-a1a9-07169edb8b0f"], "metadata": {"file_path": "docs\\java\\github.com_35_0.txt", "file_name": "github.com_35_0.txt", "file_type": "text/plain", "file_size": 6864, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "be18d9ed-376d-4ae5-959e-8a2eb46ce7d5": {"node_ids": ["a8ecf7c1-2b27-469f-9930-24d85b4ff990", "d9a9a7ab-9fd0-4beb-9d9b-2b282a94bdf6", "5c793cb5-f938-4467-87c4-1baeebf0c56b"], "metadata": {"file_path": "docs\\java\\github.com_35_1.txt", "file_name": "github.com_35_1.txt", "file_type": "text/plain", "file_size": 5315, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "641b7bea-e30f-40f2-bf15-fe10de32bc24": {"node_ids": ["56a6c303-2ec0-432e-acd4-790d7f5946b0"], "metadata": {"file_path": "docs\\java\\github.com_35_2.txt", "file_name": "github.com_35_2.txt", "file_type": "text/plain", "file_size": 2442, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "81e34460-1af6-4d5a-9004-edaa58c56d7b": {"node_ids": ["6bfc28ff-aaf5-4eae-8abe-10d99b52b15c"], "metadata": {"file_path": "docs\\java\\github.com_3_0.txt", "file_name": "github.com_3_0.txt", "file_type": "text/plain", "file_size": 2123, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "23e1c9c2-c9a8-4a1d-bf1c-1683774a7b59": {"node_ids": ["4a87dbc3-f64d-42e2-bbe3-b28eebe8a8b4", "16b4a3f9-ef31-4167-9d18-fbab3c07142e"], "metadata": {"file_path": "docs\\java\\github.com_44_0.txt", "file_name": "github.com_44_0.txt", "file_type": "text/plain", "file_size": 4151, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "8b4ff668-f6e8-4590-aa89-0365a441d113": {"node_ids": ["19124f06-21ad-4002-a295-5604698876b6", "c393ae62-786d-4fbb-a886-a9fe1f7eaed0"], "metadata": {"file_path": "docs\\java\\github.com_48_0.txt", "file_name": "github.com_48_0.txt", "file_type": "text/plain", "file_size": 5976, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "be0df209-e10d-428b-a774-09798cfec168": {"node_ids": ["e0f6a0e2-0a05-4e87-9bfc-e52220861e23", "4d430096-a3c4-4dba-9c52-ace0e480fe71"], "metadata": {"file_path": "docs\\java\\github.com_49_0.txt", "file_name": "github.com_49_0.txt", "file_type": "text/plain", "file_size": 5854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "efe25d72-303a-44c9-af0c-b14c834c1102": {"node_ids": ["9d527d2e-c92e-4f45-8dd6-ac0954956e1b"], "metadata": {"file_path": "docs\\java\\github.com_49_1.txt", "file_name": "github.com_49_1.txt", "file_type": "text/plain", "file_size": 2938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "b0ddc902-9eee-4607-8eb0-91618fc6b1fc": {"node_ids": ["94e80161-ee2a-4933-bea8-dba51b2b1523"], "metadata": {"file_path": "docs\\java\\java_1_chunk_1.txt", "file_name": "java_1_chunk_1.txt", "file_type": "text/plain", "file_size": 886, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "97d2a85f-a0c8-4601-b4c5-c4e50afa78f2": {"node_ids": ["a0363992-611a-4f7c-b93a-56be493f7b4d"], "metadata": {"file_path": "docs\\java\\java_1_chunk_2.txt", "file_name": "java_1_chunk_2.txt", "file_type": "text/plain", "file_size": 1005, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "a4cbac0d-8847-4e9a-90bc-2a27a35d4eeb": {"node_ids": ["1e2d2eed-f7cd-4637-8c26-b2415bb74a05"], "metadata": {"file_path": "docs\\java\\java_1_chunk_3.txt", "file_name": "java_1_chunk_3.txt", "file_type": "text/plain", "file_size": 1010, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "5957df19-5436-46bb-9370-ebba5efdbd70": {"node_ids": ["65dc647c-e1a4-4ace-87f9-9a9235e11006"], "metadata": {"file_path": "docs\\java\\java_1_chunk_4.txt", "file_name": "java_1_chunk_4.txt", "file_type": "text/plain", "file_size": 951, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "03f8fe6d-2d91-4c3e-bc84-3bce48ba8d8c": {"node_ids": ["9fe9ca16-90f6-4445-8adf-1ab8e5e4b83a"], "metadata": {"file_path": "docs\\java\\java_1_chunk_5.txt", "file_name": "java_1_chunk_5.txt", "file_type": "text/plain", "file_size": 145, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "3aecbbfd-1337-4b21-a2bc-c44d8e057d1a": {"node_ids": ["db799b0a-4ce5-45d5-8a58-041cd29c73ae"], "metadata": {"file_path": "docs\\java\\java_2_chunk_1.txt", "file_name": "java_2_chunk_1.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "348c2210-5bb7-4574-ae61-2a5b9d9d616e": {"node_ids": ["ad7b96be-7da1-4a62-bc4c-ff70b78ff484"], "metadata": {"file_path": "docs\\java\\java_2_chunk_10.txt", "file_name": "java_2_chunk_10.txt", "file_type": "text/plain", "file_size": 974, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "811e152e-e305-44ba-b1e8-487fedee66ee": {"node_ids": ["81692e57-9aa1-4403-a628-5fde1fd832d5"], "metadata": {"file_path": "docs\\java\\java_2_chunk_11.txt", "file_name": "java_2_chunk_11.txt", "file_type": "text/plain", "file_size": 998, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "4ba8d192-5cd5-4b44-9f87-1de303463df5": {"node_ids": ["c70b2c36-1a4c-4177-ba71-95d4a0ec0024"], "metadata": {"file_path": "docs\\java\\java_2_chunk_12.txt", "file_name": "java_2_chunk_12.txt", "file_type": "text/plain", "file_size": 815, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "95f15700-0a2a-4c49-942f-3865b62f498f": {"node_ids": ["d4a07fb5-ddaf-4f58-9fc3-19a3b30f39bd"], "metadata": {"file_path": "docs\\java\\java_2_chunk_13.txt", "file_name": "java_2_chunk_13.txt", "file_type": "text/plain", "file_size": 805, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "a63d75f2-3e08-4d2e-b037-e668313fb247": {"node_ids": ["83dd77c0-6aec-4afc-aec3-75a60d6e411a"], "metadata": {"file_path": "docs\\java\\java_2_chunk_14.txt", "file_name": "java_2_chunk_14.txt", "file_type": "text/plain", "file_size": 655, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "09e24700-2aca-4b58-8dc3-c56b3024edda": {"node_ids": ["6c2c2f9f-8200-4fe5-b6f1-ebce248d2da2"], "metadata": {"file_path": "docs\\java\\java_2_chunk_15.txt", "file_name": "java_2_chunk_15.txt", "file_type": "text/plain", "file_size": 406, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "d57b095c-b7a1-4112-bd9d-1369aea1f48f": {"node_ids": ["b508e208-e720-4192-8fc0-ba5113a28d41"], "metadata": {"file_path": "docs\\java\\java_2_chunk_16.txt", "file_name": "java_2_chunk_16.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "9f82e593-757c-4226-a86d-826c33d1e966": {"node_ids": ["323b43ee-a321-4fa1-8055-a2b18e39cfb8"], "metadata": {"file_path": "docs\\java\\java_2_chunk_17.txt", "file_name": "java_2_chunk_17.txt", "file_type": "text/plain", "file_size": 995, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "4027aefd-1980-44f2-9d38-24e44221c1b2": {"node_ids": ["2da8f2a7-1cd1-4975-93f6-ead637db9ebd"], "metadata": {"file_path": "docs\\java\\java_2_chunk_18.txt", "file_name": "java_2_chunk_18.txt", "file_type": "text/plain", "file_size": 695, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "58d23fb4-090b-4775-8604-8c6553be3bb6": {"node_ids": ["ed248ed8-df79-4d76-a6f8-df562abf4010"], "metadata": {"file_path": "docs\\java\\java_2_chunk_19.txt", "file_name": "java_2_chunk_19.txt", "file_type": "text/plain", "file_size": 870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "735b2788-3eed-4b1d-a388-3a1708218b64": {"node_ids": ["37407ece-921e-4d91-b526-6fd844e02323"], "metadata": {"file_path": "docs\\java\\java_2_chunk_2.txt", "file_name": "java_2_chunk_2.txt", "file_type": "text/plain", "file_size": 999, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "49819983-bd32-4aef-8203-7e915d377780": {"node_ids": ["c443b9b1-1949-466f-9e5f-cae6afe94fa6"], "metadata": {"file_path": "docs\\java\\java_2_chunk_20.txt", "file_name": "java_2_chunk_20.txt", "file_type": "text/plain", "file_size": 954, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "6a98f1b8-1123-41d5-ab89-c4969435656c": {"node_ids": ["7427ead6-29ee-4a01-b889-325358aa4932"], "metadata": {"file_path": "docs\\java\\java_2_chunk_21.txt", "file_name": "java_2_chunk_21.txt", "file_type": "text/plain", "file_size": 634, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "3800d5bf-1bd3-4437-bf19-399c0bf25b3e": {"node_ids": ["0d8eba28-088e-4444-94d9-2c6b8b109e5f"], "metadata": {"file_path": "docs\\java\\java_2_chunk_22.txt", "file_name": "java_2_chunk_22.txt", "file_type": "text/plain", "file_size": 983, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "48e5f5ce-a954-4388-bb20-f2e59d04b53d": {"node_ids": ["6dd5e468-905e-4e8b-b578-9325ded40dc1"], "metadata": {"file_path": "docs\\java\\java_2_chunk_23.txt", "file_name": "java_2_chunk_23.txt", "file_type": "text/plain", "file_size": 944, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "5081bf69-3232-452a-bca1-4e2de2ae19ce": {"node_ids": ["ef43f369-f887-49bb-aecb-2089553f321e"], "metadata": {"file_path": "docs\\java\\java_2_chunk_24.txt", "file_name": "java_2_chunk_24.txt", "file_type": "text/plain", "file_size": 917, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "754258cd-0953-45ec-8343-41cfc53ce7ec": {"node_ids": ["41ced6e0-b6e0-4619-bead-216b5a98a6b0"], "metadata": {"file_path": "docs\\java\\java_2_chunk_25.txt", "file_name": "java_2_chunk_25.txt", "file_type": "text/plain", "file_size": 219, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "641afc94-c01d-4cff-ad09-4ed8177620de": {"node_ids": ["8bda9546-c97a-478f-a64a-4456d6c5182c"], "metadata": {"file_path": "docs\\java\\java_2_chunk_26.txt", "file_name": "java_2_chunk_26.txt", "file_type": "text/plain", "file_size": 904, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "298b40d8-852b-4e32-b493-c21ca2888ec7": {"node_ids": ["3218aa24-c299-4dc1-aa0d-8d760c665d4a"], "metadata": {"file_path": "docs\\java\\java_2_chunk_27.txt", "file_name": "java_2_chunk_27.txt", "file_type": "text/plain", "file_size": 1001, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "403bb27c-4db0-4dd8-afc1-2200d4240e35": {"node_ids": ["b921abb6-c936-4baf-a32d-b4cbd22c0de7"], "metadata": {"file_path": "docs\\java\\java_2_chunk_28.txt", "file_name": "java_2_chunk_28.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "919de205-9105-4709-a691-669b10f94571": {"node_ids": ["e8dff125-c275-4286-970b-140ae5c820b7"], "metadata": {"file_path": "docs\\java\\java_2_chunk_29.txt", "file_name": "java_2_chunk_29.txt", "file_type": "text/plain", "file_size": 227, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "cdfd995c-4015-40e8-8191-0572d5f6bad9": {"node_ids": ["db559fe4-0f04-4838-a1b6-07868e92e04b"], "metadata": {"file_path": "docs\\java\\java_2_chunk_3.txt", "file_name": "java_2_chunk_3.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "40eb348d-b6d9-43eb-ab3c-eefe00567789": {"node_ids": ["6c00e5b1-d08f-4f03-80ee-410d3e49a937"], "metadata": {"file_path": "docs\\java\\java_2_chunk_4.txt", "file_name": "java_2_chunk_4.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0943d2a7-75b6-4057-b8e2-60d039e39fd8": {"node_ids": ["fc1d6b64-dd47-478a-b17b-33300ac8e0e9"], "metadata": {"file_path": "docs\\java\\java_2_chunk_5.txt", "file_name": "java_2_chunk_5.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "d18ddba6-a70f-4716-9456-3cab3b4a1302": {"node_ids": ["066a9c4b-854c-4f85-b0e6-a84d89cd6f89"], "metadata": {"file_path": "docs\\java\\java_2_chunk_6.txt", "file_name": "java_2_chunk_6.txt", "file_type": "text/plain", "file_size": 356, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "46ce1934-2ac7-4722-95f7-e517b0627c6f": {"node_ids": ["bfe3f780-a670-469c-bee8-29f35fcbd475"], "metadata": {"file_path": "docs\\java\\java_2_chunk_7.txt", "file_name": "java_2_chunk_7.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "f055d703-23a1-420f-9c01-1788556ab374": {"node_ids": ["20dd2f21-844a-4f9b-8271-9447088700ba"], "metadata": {"file_path": "docs\\java\\java_2_chunk_8.txt", "file_name": "java_2_chunk_8.txt", "file_type": "text/plain", "file_size": 246, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "ccc9d01c-00b7-47c8-b2b1-386a05dc5740": {"node_ids": ["43872589-5160-41d3-995e-62447b9f0304"], "metadata": {"file_path": "docs\\java\\java_2_chunk_9.txt", "file_name": "java_2_chunk_9.txt", "file_type": "text/plain", "file_size": 1000, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "9fad2a54-8df5-4fd4-b4a7-fcafc2032d3d": {"node_ids": ["e05bcfbe-b7f4-49ab-9acb-8e27e5914151"], "metadata": {"file_path": "docs\\java\\javabrains.io_42_0.txt", "file_name": "javabrains.io_42_0.txt", "file_type": "text/plain", "file_size": 3710, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "06dca54d-7f84-4a52-908b-33c4063aa480": {"node_ids": ["e4822573-38ff-4d5a-a419-863fe749c8b9"], "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_0.txt", "file_name": "javarevisited.blogspot.com_28_0.txt", "file_type": "text/plain", "file_size": 4587, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "ae969e3a-1e27-491e-9a0b-86b25777661a": {"node_ids": ["b3f8cb34-ce29-43ca-8668-29fca633e3c2"], "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_1.txt", "file_name": "javarevisited.blogspot.com_28_1.txt", "file_type": "text/plain", "file_size": 4670, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "41dbe945-48f3-45c3-b7a6-a7b6642f131f": {"node_ids": ["c40d0d8b-bfc0-4ed3-a30c-fa3ad5a69e5a"], "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_2.txt", "file_name": "javarevisited.blogspot.com_28_2.txt", "file_type": "text/plain", "file_size": 4483, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "d427b32c-885f-42a5-834b-a3ae4bec4fde": {"node_ids": ["b9dae3d2-bd00-4059-bbfe-e24c1afa845d", "bcaa1cd5-c008-4591-a191-9aecd08b2bbb"], "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_3.txt", "file_name": "javarevisited.blogspot.com_28_3.txt", "file_type": "text/plain", "file_size": 4913, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "484a24ce-7a69-46d6-b488-d96e6c9301ae": {"node_ids": ["5e98941f-7c54-4596-9fd0-e97d2571a9a9", "e6fb0571-4e0b-4831-a85f-a65fc90e074d"], "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_4.txt", "file_name": "javarevisited.blogspot.com_28_4.txt", "file_type": "text/plain", "file_size": 4666, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "39b4744e-1b20-4ec5-80ff-a1920ed4350e": {"node_ids": ["36e1e56e-af5b-4fd3-83fb-6eed394817f7"], "metadata": {"file_path": "docs\\java\\javarevisited.blogspot.com_28_5.txt", "file_name": "javarevisited.blogspot.com_28_5.txt", "file_type": "text/plain", "file_size": 721, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "60dc5051-fe7e-4362-9056-72a8645418ab": {"node_ids": ["a8cc18e0-1ba0-4292-8507-b31109161c74"], "metadata": {"file_path": "docs\\java\\medium.com_37_0.txt", "file_name": "medium.com_37_0.txt", "file_type": "text/plain", "file_size": 2870, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "41542e1d-81df-456d-a0bb-7c8a9c4ec335": {"node_ids": ["94be6548-705c-4a68-995a-ddd6c80b530f"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_0.txt", "file_name": "www.baeldung.com_14_0.txt", "file_type": "text/plain", "file_size": 5069, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "f9b4481c-7138-4c72-8177-be02e68efbf5": {"node_ids": ["95d82e12-4c77-4e90-8357-787f9e07bc56", "a5eb95ff-3f1c-40dc-badb-e2644e04dedb"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_1.txt", "file_name": "www.baeldung.com_14_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "46a4e7ba-994f-4db8-b32d-a9baf73fd5ef": {"node_ids": ["17bd514f-85aa-4524-90c8-c22784d13e76", "4417db60-b581-4649-b83c-1af3b24265b1"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_2.txt", "file_name": "www.baeldung.com_14_2.txt", "file_type": "text/plain", "file_size": 5643, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "254ead42-0db8-4735-8290-db16f4dddd6e": {"node_ids": ["511d2c90-3e22-436b-953e-437b8333a8cc", "a5d18c41-fa28-4ac5-8dab-3e094e7c8edb"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_3.txt", "file_name": "www.baeldung.com_14_3.txt", "file_type": "text/plain", "file_size": 5009, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0e04493a-736a-426a-96c5-c4b80c409b77": {"node_ids": ["2ea3dbfc-ce8e-46df-b6c6-a5a5da68ed65", "224d0e89-dbbb-44f9-b776-8a9dc5032daf"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_4.txt", "file_name": "www.baeldung.com_14_4.txt", "file_type": "text/plain", "file_size": 5687, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "6728b914-6bae-4d42-a8c8-acec4267ebf8": {"node_ids": ["edca4391-6142-449f-bd2f-d0b0b226cd9b", "2fe585d4-e52b-4cae-b07b-ba92af62a4c0"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_5.txt", "file_name": "www.baeldung.com_14_5.txt", "file_type": "text/plain", "file_size": 5084, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "24ddc37a-b7d2-49a5-a3d0-e9f31067e5b2": {"node_ids": ["05f7c954-ed6b-43cf-8c58-0dac48956a4e", "fa5cd7b0-7f53-4bbb-96ea-253300b14c9c"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_6.txt", "file_name": "www.baeldung.com_14_6.txt", "file_type": "text/plain", "file_size": 4895, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "e8d494a8-fa45-4598-a554-c4da471c61db": {"node_ids": ["07a95ace-742f-47d4-9cf7-0d15ce78bbfd"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_14_7.txt", "file_name": "www.baeldung.com_14_7.txt", "file_type": "text/plain", "file_size": 339, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0f19b229-380d-4dcb-8663-6be644a555ff": {"node_ids": ["0f06620e-3c59-4f66-967c-e223a1b5bd8c"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_0.txt", "file_name": "www.baeldung.com_45_0.txt", "file_type": "text/plain", "file_size": 5078, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "10bc0395-32dc-4b8d-8483-25f55939c297": {"node_ids": ["794ce92f-25b5-4988-acf1-4f54f9eaa362", "78303da7-ef4d-45e9-88d7-0d311352c674"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_1.txt", "file_name": "www.baeldung.com_45_1.txt", "file_type": "text/plain", "file_size": 4844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "cf25075a-e48a-4748-b127-e8767de9d36f": {"node_ids": ["489693f9-1f88-4ac9-b1f3-9c538d377958"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_2.txt", "file_name": "www.baeldung.com_45_2.txt", "file_type": "text/plain", "file_size": 5297, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0a512118-983b-4b78-b1e1-f619705422ee": {"node_ids": ["63bf8dca-8fff-44b5-8b82-9e1dd943a51e"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_45_3.txt", "file_name": "www.baeldung.com_45_3.txt", "file_type": "text/plain", "file_size": 1791, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "32f2dea0-7eb4-45e5-b795-b0db4b37c2e9": {"node_ids": ["37ed85f6-5447-4571-82b9-fd56dabb28e3"], "metadata": {"file_path": "docs\\java\\www.baeldung.com_4_0.txt", "file_name": "www.baeldung.com_4_0.txt", "file_type": "text/plain", "file_size": 1238, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "bb0f6b83-87e0-404d-ae11-f06d61560c42": {"node_ids": ["8b836fad-88c3-4d66-be82-db6f308c7ad1"], "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_0.txt", "file_name": "www.codecademy.com_38_0.txt", "file_type": "text/plain", "file_size": 5011, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "eeee697d-2a7e-4ec2-8599-c42a1cce3320": {"node_ids": ["69949008-1056-490c-baf9-261234053238"], "metadata": {"file_path": "docs\\java\\www.codecademy.com_38_1.txt", "file_name": "www.codecademy.com_38_1.txt", "file_type": "text/plain", "file_size": 3306, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "c12f1715-4cac-4ea7-82a7-50ed580ca8fa": {"node_ids": ["f94a4021-715d-4f31-ae00-da383ae9bbfa"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_0.txt", "file_name": "www.geeksforgeeks.org_1_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "9d3427ba-a10b-4bdd-99e3-7e74f155085c": {"node_ids": ["2ad3c1c4-2f4a-41e0-9075-4c8adb7b1997"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_1.txt", "file_name": "www.geeksforgeeks.org_1_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "c8126d58-ecb7-4dd4-8101-9d65551b561f": {"node_ids": ["1eade4dd-901e-4ac0-98a8-e6d90272c13c"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_2.txt", "file_name": "www.geeksforgeeks.org_1_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "91e1bfb1-db50-4601-924e-bf96cb6152f9": {"node_ids": ["873e785f-2f49-4ec1-a3fb-5ca5ba7d8ebc", "d8d80ac6-4acd-4818-acce-22c7c4c367e7"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_3.txt", "file_name": "www.geeksforgeeks.org_1_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0b7e5ac4-244a-4b79-a464-c644755820b3": {"node_ids": ["e2bad904-9837-4704-8a68-bac9ebb02cac"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_1_4.txt", "file_name": "www.geeksforgeeks.org_1_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "bab1c6b0-0506-419a-8653-3eccbcd317c8": {"node_ids": ["f0d98376-9617-460e-9d5e-a67cdcf34349"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_0.txt", "file_name": "www.geeksforgeeks.org_43_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "9430f43a-e0a0-4a62-b268-8930edd07c4c": {"node_ids": ["18067fe7-aeb6-4af2-b673-3ab1602bc3da"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_1.txt", "file_name": "www.geeksforgeeks.org_43_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "1fc5a210-9693-412f-b1a9-19ced93c0de8": {"node_ids": ["458ed04a-e706-4cbc-8bb1-88f9ea565857"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_2.txt", "file_name": "www.geeksforgeeks.org_43_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0b85d16c-db0d-43a6-a9d4-ce16899d04ac": {"node_ids": ["cc0c8bac-600d-4e93-b3c4-dc21bcdc3fc3", "31cfc903-3ba7-493e-9b49-a738d55fbfb7"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_3.txt", "file_name": "www.geeksforgeeks.org_43_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "64cba4a5-9304-4010-aa7e-f0f653c6d862": {"node_ids": ["4d1ae717-5a78-473c-8505-a0bf92275f7d"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_43_4.txt", "file_name": "www.geeksforgeeks.org_43_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "9d8fd11b-99b8-4d37-9a1f-71bce3fdae97": {"node_ids": ["65091d16-57ff-4a16-9c47-c3f9c6e31b6f"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_0.txt", "file_name": "www.geeksforgeeks.org_6_0.txt", "file_type": "text/plain", "file_size": 5293, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "e5c3d456-590f-4330-a5d5-fed57d79ff36": {"node_ids": ["1b9a7fa6-c566-411b-b821-4e09f6dc3b10"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_1.txt", "file_name": "www.geeksforgeeks.org_6_1.txt", "file_type": "text/plain", "file_size": 5469, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "c2c2e657-f85d-4e94-9c73-a6e4b96b3021": {"node_ids": ["7564dfba-b477-4580-94a2-4b63cbc938ad"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_2.txt", "file_name": "www.geeksforgeeks.org_6_2.txt", "file_type": "text/plain", "file_size": 5657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "34f9a327-498d-4879-9a8d-844577a2daa1": {"node_ids": ["b4b98639-4778-495a-88d8-a2f4cb0059f1", "be63b4c5-3b00-458e-a5e1-830add89965d"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_3.txt", "file_name": "www.geeksforgeeks.org_6_3.txt", "file_type": "text/plain", "file_size": 5631, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0f469b83-a3f0-4107-a753-8ec2c8cb31ff": {"node_ids": ["a6f08e2d-ccdf-4ec3-924b-035baf1eff67"], "metadata": {"file_path": "docs\\java\\www.geeksforgeeks.org_6_4.txt", "file_name": "www.geeksforgeeks.org_6_4.txt", "file_type": "text/plain", "file_size": 2534, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "b4ef92c7-211e-43b5-8e6f-a5efaa4f2f82": {"node_ids": ["48e1e94e-84b4-4a18-8385-d4ccf7f41cc5"], "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_0.txt", "file_name": "www.java-made-easy.com_30_0.txt", "file_type": "text/plain", "file_size": 4715, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0812187d-e8e0-4a17-a518-e0984dc0f698": {"node_ids": ["a7959e2e-0fc1-467d-99ea-94c82405e353"], "metadata": {"file_path": "docs\\java\\www.java-made-easy.com_30_1.txt", "file_name": "www.java-made-easy.com_30_1.txt", "file_type": "text/plain", "file_size": 300, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "bcf79534-96e7-44cc-bf59-dc81cf08e4ab": {"node_ids": ["bd6ece58-bfb4-4e0f-9333-a866e95d0f28"], "metadata": {"file_path": "docs\\java\\www.java67.com_27_0.txt", "file_name": "www.java67.com_27_0.txt", "file_type": "text/plain", "file_size": 4629, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "1576892e-3143-42d6-b64d-de6da23538f7": {"node_ids": ["e8265aa6-7f4c-479d-9064-453eab10dfc1"], "metadata": {"file_path": "docs\\java\\www.java67.com_27_1.txt", "file_name": "www.java67.com_27_1.txt", "file_type": "text/plain", "file_size": 4550, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "0a7414c5-7244-406a-a454-86a587ca7cfd": {"node_ids": ["268b1086-16fa-428e-83cc-ea32a8d82250"], "metadata": {"file_path": "docs\\java\\www.java67.com_27_2.txt", "file_name": "www.java67.com_27_2.txt", "file_type": "text/plain", "file_size": 4606, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "96766a91-b7d3-4959-b347-4fba728da5af": {"node_ids": ["c1174708-3ea5-4ebd-a61d-fa64366a62b4"], "metadata": {"file_path": "docs\\java\\www.java67.com_27_3.txt", "file_name": "www.java67.com_27_3.txt", "file_type": "text/plain", "file_size": 3866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "2314e47c-be7c-4cdb-98ea-d45ab179fcdc": {"node_ids": ["ecb5a3c6-64f9-4fad-afbc-5ebd3493f903"], "metadata": {"file_path": "docs\\java\\www.javacodegeeks.com_40_0.txt", "file_name": "www.javacodegeeks.com_40_0.txt", "file_type": "text/plain", "file_size": 2990, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "975645b4-cda9-47f8-a006-1ab65bab843b": {"node_ids": ["0d6daeb0-8638-4c87-8d90-e51c2e6507a9"], "metadata": {"file_path": "docs\\java\\www.javadevjournal.com_23_0.txt", "file_name": "www.javadevjournal.com_23_0.txt", "file_type": "text/plain", "file_size": 1410, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "96664e48-1a32-4bb6-9ce4-feb787ef777e": {"node_ids": ["a2701327-33a7-4c35-b65e-e813b041d956"], "metadata": {"file_path": "docs\\java\\www.journaldev.com_10_0.txt", "file_name": "www.journaldev.com_10_0.txt", "file_type": "text/plain", "file_size": 2292, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "00a2c5d2-f72a-4770-bed0-192d6765f10a": {"node_ids": ["d0b721fa-9090-451a-bb74-46051c5f7aa7"], "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_17_0.txt", "file_name": "www.learnjavaonline.org_17_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "35d896db-c7ba-4293-8624-6b0bc52a0672": {"node_ids": ["be61388e-52bc-4a49-aae2-06e96dfafa5f"], "metadata": {"file_path": "docs\\java\\www.learnjavaonline.org_33_0.txt", "file_name": "www.learnjavaonline.org_33_0.txt", "file_type": "text/plain", "file_size": 1101, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "bf490124-91f3-4a3d-97c0-927860b1b2e2": {"node_ids": ["928b5667-e4b0-4bd3-88b1-28dba7a633d6", "6c81a152-c40b-4527-8124-d49e24034cf3"], "metadata": {"file_path": "docs\\java\\www.oracle.com_46_0.txt", "file_name": "www.oracle.com_46_0.txt", "file_type": "text/plain", "file_size": 6844, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "356c7340-621d-4bc3-b018-2504dce2f9ae": {"node_ids": ["ff07176c-b627-4a2a-a54b-45e733ba8659", "80fd1ced-ee9c-451e-adc3-8199e41e3878"], "metadata": {"file_path": "docs\\java\\www.oracle.com_46_1.txt", "file_name": "www.oracle.com_46_1.txt", "file_type": "text/plain", "file_size": 6171, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "3ebc47b0-9314-40b5-8523-af7cf8afbb3c": {"node_ids": ["30ea4291-7851-4dc0-abca-f740579dee52", "bc907492-56b1-4cd7-9452-96f95e4a903a", "180c9790-9860-495a-8979-ac5b6b2ff9a9"], "metadata": {"file_path": "docs\\java\\www.oracle.com_46_2.txt", "file_name": "www.oracle.com_46_2.txt", "file_type": "text/plain", "file_size": 6484, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "17aa85d7-68b4-4c16-afdb-cb1dd9056ba9": {"node_ids": ["be19498c-230e-484c-ad28-02850c920819"], "metadata": {"file_path": "docs\\java\\www.oracle.com_46_3.txt", "file_name": "www.oracle.com_46_3.txt", "file_type": "text/plain", "file_size": 1288, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "f263589a-3642-4dca-98e7-386bebefcbac": {"node_ids": ["a7a4db25-63ce-431d-ac62-a36072e4dbe7"], "metadata": {"file_path": "docs\\java\\www.programiz.com_11_0.txt", "file_name": "www.programiz.com_11_0.txt", "file_type": "text/plain", "file_size": 5514, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "01647296-4f7d-4bd9-a7f4-29f3d9ef953f": {"node_ids": ["d8a36c8c-a59f-48ba-814a-a39735201c2b"], "metadata": {"file_path": "docs\\java\\www.programiz.com_11_1.txt", "file_name": "www.programiz.com_11_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "19a59804-9e6b-4b81-b9ef-adfda128916c": {"node_ids": ["063e5c85-1b18-4fc5-9972-8d9941053ef5"], "metadata": {"file_path": "docs\\java\\www.sitepoint.com_18_0.txt", "file_name": "www.sitepoint.com_18_0.txt", "file_type": "text/plain", "file_size": 2866, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "00dd30a4-e18f-41c2-8188-b5e6f5923f89": {"node_ids": ["1f36007f-1d8a-478b-9f10-a038793e218a", "8d5ba2e6-ec9c-4989-907b-0a767714462d"], "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_0.txt", "file_name": "www.stackoverflow.com_41_0.txt", "file_type": "text/plain", "file_size": 5118, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "e3697d59-355d-4095-b8b6-86a6eba6b1bc": {"node_ids": ["f02a0b14-51fd-43af-9cd7-b8e209a29fde"], "metadata": {"file_path": "docs\\java\\www.stackoverflow.com_41_1.txt", "file_name": "www.stackoverflow.com_41_1.txt", "file_type": "text/plain", "file_size": 3347, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "6ce98732-2941-4f4a-8704-065dc10bf364": {"node_ids": ["b2525e28-d628-4082-bc0c-fb74737a83fa"], "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_0.txt", "file_name": "www.tutorialspoint.com_7_0.txt", "file_type": "text/plain", "file_size": 4657, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "741d8f7f-0813-4fa2-bb2f-97b837056729": {"node_ids": ["d63c565c-7888-42d2-8277-50b526811fda"], "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_1.txt", "file_name": "www.tutorialspoint.com_7_1.txt", "file_type": "text/plain", "file_size": 4905, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "989f8002-d415-4ac0-95af-b3625648eb89": {"node_ids": ["cf37967b-9f21-4425-827f-df61ecde1ae3"], "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_2.txt", "file_name": "www.tutorialspoint.com_7_2.txt", "file_type": "text/plain", "file_size": 5014, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "94afbd2d-bc34-4eb8-ac60-f09f9c237e3c": {"node_ids": ["24fa86b2-00d7-48b5-99cb-509ed7dc5328"], "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_3.txt", "file_name": "www.tutorialspoint.com_7_3.txt", "file_type": "text/plain", "file_size": 4930, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "3c50bcb5-fb19-449e-96b7-c3275233ea0b": {"node_ids": ["2ea6d8e9-49a8-4687-9a7d-103d838e6a46"], "metadata": {"file_path": "docs\\java\\www.tutorialspoint.com_7_4.txt", "file_name": "www.tutorialspoint.com_7_4.txt", "file_type": "text/plain", "file_size": 1731, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "5e4c2966-6794-4159-8155-8be9797ab81c": {"node_ids": ["4c2f4902-becc-4115-8a09-20dd5d3b00fb"], "metadata": {"file_path": "docs\\java\\www.vogella.com_29_0.txt", "file_name": "www.vogella.com_29_0.txt", "file_type": "text/plain", "file_size": 1854, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "4c7d98cf-f8bc-4563-bc79-8d22d30a1004": {"node_ids": ["6bbd9235-645f-41f8-83b4-d6a5a3311874", "f531710b-a17c-4893-99a2-f0dfa7c0d5b6", "18fdf0e6-4a92-496a-918b-68a0bae88b71"], "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_0.txt", "file_name": "www.w3schools.com_19_0.txt", "file_type": "text/plain", "file_size": 5938, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}, "4c949edd-6175-47d0-ae94-a13d50bbd7d9": {"node_ids": ["7db85c03-c714-49c7-868e-e843bea0b1f1"], "metadata": {"file_path": "docs\\java\\www.w3schools.com_19_1.txt", "file_name": "www.w3schools.com_19_1.txt", "file_type": "text/plain", "file_size": 2746, "creation_date": "2025-05-26", "last_modified_date": "2025-05-26", "last_accessed_date": "2025-05-26"}}}}